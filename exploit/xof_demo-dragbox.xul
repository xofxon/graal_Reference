<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet href="chrome://global/skin/" type="text/css"?>
<?xml-stylesheet href="xbl/dragbox/dragbox.css" type="text/css"?>
<?xml-stylesheet href="xbl/scale/scale.css" type="text/css"?>
<?xml-stylesheet href="xbl/tooltip/tooltip.css" type="text/css"?>
<?xml-stylesheet href="xbl/rdfobserver/rdfobserver.css" type="text/css"?>
<?xml-stylesheet href="xbl/logger/logger.css" type="text/css"?>
<window xmlns:html="http://www.w3.org/1999/xhtml"
			xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul" onload="init();">
	<html:style>
		treechildren::-moz-tree-row(even) {background-color:linen;}
		treechildren::-moz-tree-row(even, selected) {background-color:DarkSalmon;}
		treechildren::-moz-tree-image(deletable) {
			list-style-image:url(chrome://global/skin/icons/close.png);
			-moz-image-region:rect(0px 16px 16px 0px);
		}
	</html:style>
	<script><![CDATA[
		function dropElement(event) { // deplacement des elements
			var originalTarget = event.relatedNode; // ici le tree d'origine et le tree cible sont les même 
			var target = event.target;
			var sel = new Array(); // un array pour stoker toutes les index des lignes selectionnées
			var start = new Object();
			var end = new Object();
			var numRanges = originalTarget.object.view.selection.getRangeCount();
			var value;
			for (var t=0; t < numRanges; t++){
	  			originalTarget.object.view.selection.getRangeAt(t, start, end);
	  			for (var v=start.value; v <=end.value; v++) {
	  				sel.push(v); // recuperation des index
	  			}
	  		}
	  		sel.sort(function(a,b){return a-b;}); // on les tri...
	  		var elts = new Array(); // un array pour stoker toutes les valeurs selectionnées
	  		for(var i=0; i<sel.length; i++) {
				elts.push(originalTarget.object.view.getCellValue(sel[i], originalTarget.object.columns.getPrimaryColumn())); // recuperation...
	  		}
	  		elts = elts.join(",");
			var row = target.object.treeBoxObject.getRowAt(event.clientX, event.clientY);
			var before = null; // recuperation de l'element ou l'on va inserer les elements selectionné 
			if(row != -1) {
				before = target.object.view.getCellValue(row, target.object.columns.getPrimaryColumn());
 			}
 			if(originalTarget==target) {
	 			var url = "datas/dragtree/move.jsp?elts="+elts+"&before="+before+"&seed="+Math.random(); // envois de la requete
	 			document.getElementById("move-rdfobserver").setAttribute("datasources", url);
	 		}
		}
		function copyElement(event) { // copy des elements
			var originalTarget = event.relatedNode; 
			var target = event.target;
			if(originalTarget!=target) {
				var sel = new Array(); // un array pour stoker toutes les index des lignes selectionnées
				var current = null;
				var start = new Object();
				var end = new Object();
				var numRanges = originalTarget.object.view.selection.getRangeCount();
				var value;
				var treeitems = new Array();
				for (var t=0; t < numRanges; t++){
		  			originalTarget.object.view.selection.getRangeAt(t,start,end);
		  			for (var v=start.value; v <=end.value; v++) {
		  				current = originalTarget.object.view.getItemAtIndex(v).cloneNode(true);
		  				treeitems.push(current);
		  			}
		  		}
		  		var before = null;
				var row = target.object.treeBoxObject.getRowAt(event.clientX, event.clientY);
				if(row != -1) before = target.object.view.getItemAtIndex(row)
	  			for (var i=0; i<treeitems.length; i++) {
	  				target.object.body.insertBefore(treeitems[i], before);
	  			}
	  		}
		}
		function dropAutreElement(event) { // deplacement des elements
			var originalTarget = event.relatedNode; 
			var target = event.target;
			var sel = new Array(); // un array pour stoker toutes les index des lignes selectionnées
			var current = null;
			var start = new Object();
			var end = new Object();
			var numRanges = originalTarget.object.view.selection.getRangeCount();
			var value;
			var treeitems = new Array();
			for (var t=0; t < numRanges; t++){
	  			originalTarget.object.view.selection.getRangeAt(t,start,end);
	  			for (var v=start.value; v <=end.value; v++) {
	  				treeitems.push(originalTarget.object.view.getItemAtIndex(v));
	  			}
	  		}
	  		var before = null;
			var row = target.object.treeBoxObject.getRowAt(event.clientX, event.clientY);
			if(row != -1) before = target.object.view.getItemAtIndex(row)
  			for (var i=0; i<treeitems.length; i++) {
  				target.object.body.insertBefore(treeitems[i], before);
  			}
		}
		function init() { // chargement des données
/*
			var nb = document.getElementById('nb').value;
			document.getElementById("load-label").value = "?";
			var url = "datas/dragtree/letters.jsp?nb="+nb+"&seed="+Math.random();
			document.getElementById("load-rdfobserver").setAttribute("datasources", url);
	*/		
		}
		function deleteElement(event) { // suppression d'un element 
			var row = {}, column = {};
			var tree = event.currentTarget;
			var boxobject = tree.boxObject;
			boxobject.getCellAt(event.clientX, event.clientY, row, column, {});
			if(row.value!=-1&&column.value.id=="deleteCol") {
				var action = tree.view.getCellValue(row.value, column.value);
				if(action=="deletable") {
					var value = tree.view.getCellValue(row.value, tree.columns.getPrimaryColumn());
	 				var url = "datas/dragtree/remove.jsp?elt="+value+"&seed="+Math.random();
	 				document.getElementById("remove-rdfobserver").setAttribute("datasources", url);
				}
			}
		}
		function confirmDelete(event) { // confirmation de suppression
			if(event.getAttribute("ok")!="true") alert(event.getAttribute("msg"));
			init(); 
		}
		function progress(event) { // affichage du chargement 
			document.getElementById("load-label").value = event.getAttribute("nb");
		} 
		function raz() {
			var url = "datas/dragtree/raz.jsp?seed="+Math.random();
			document.getElementById("raz-rdfobserver").setAttribute("datasources", url);
		}
	]]></script>
	<hbox flex="1">
		<spacer flex="1"/>
		<vbox flex="1">
			<spacer flex="1"/>
			<hbox flex="1">
				<dragbox flex="1" drag="autre2" acceptdrag="autre2" ondrop="copyElement(event)">
<tree id="tree1" flex="1" >
      <treecols>
	<treecol id="sex1"   flex="1" label="Name" primary="true" />
	<treecol id="color1" flex="1" label="Color" />
	<treecol id="attr1"  flex="1" label="Attribute" />
      </treecols>
      <treechildren>
	<treeitem  container="true" open="true">
	  <treerow>
	    <treecell label="Female" />
	  </treerow>
	  <treechildren>
	    <treeitem>
	      <treerow>
		<treecell label="Pearl" />
		<treecell label="Gray" />
	        <treecell label="Frumpy" />
	      </treerow>
	    </treeitem>
	    <treeitem>
	      <treerow>
		<treecell label="Cosmo" />
		<treecell label="White" />
	        <treecell label="Round" />
	      </treerow>
	    </treeitem>
            <treeitem>
             <treerow>
 	      <treecell label="Tribble" />
 	      <treecell label="Orange" />
	      <treecell label="Frumpy" />
             </treerow>
            </treeitem>
	  </treechildren>
	</treeitem>
	<treeitem  container="true" open="true">
	  <treerow>
	    <treecell label="Male" />
	  </treerow>
	  <treechildren>
	    <treeitem>
	      <treerow>
		<treecell label="Aramis" />
		<treecell label="Black" />
	        <treecell label="Cute" />
	      </treerow>
	    </treeitem>
	    <treeitem>
	      <treerow>
		<treecell label="Yakima" />
		<treecell label="Holstein" />
	        <treecell label="Handsome" />
	      </treerow>
	    </treeitem>
	    <treeitem>
	      <treerow>
		<treecell label="Fergus" />
		<treecell label="Black" />
	        <treecell label="Long" />
	      </treerow>
	    </treeitem>
	    <treeitem>
	      <treerow>
		<treecell label="Clint" />
		<treecell label="Black" />
	        <treecell label="Young" />
	      </treerow>
	    </treeitem>
            <treeitem>
             <treerow>
 	      <treecell label="Zippy" />
	      <treecell label="Orange" />
	      <treecell label="Playful" />
             </treerow>
            </treeitem>
            <treeitem>
             <treerow>
	      <treecell label="Feathers" />
	      <treecell label="Tabby" />
	      <treecell label="Patiarchal" />
             </treerow>
            </treeitem>
            <treeitem>
             <treerow>
 	      <treecell label="Butter" />
	      <treecell label="Orange" />
	      <treecell label="Old" />
             </treerow>
            </treeitem>
	  </treechildren>
	</treeitem>
      </treechildren>
    </tree>
				</dragbox>
				<dragbox flex="1" drag="autre2" acceptdrag="autre2" ondrop="copyElement(event)">
					<tree flex="1">
              <treecols>
        	<treecol id="sex1"   flex="1" label="Name" primary="true" />
        	<treecol id="color1" flex="1" label="Color" />
        	<treecol id="attr1"  flex="1" label="Attribute" />
              </treecols>
						<treechildren/>
					</tree>
				</dragbox>
			</hbox>
			<hbox flex="1">
				<dragbox flex="1" drag="autre" acceptdrag="autre" ondrop="dropAutreElement(event)">
<tree id="tree1" flex="1" >
      <treecols>
	<treecol id="sex1"   flex="1" label="Name" primary="true" />
	<treecol id="color1" flex="1" label="Color" />
	<treecol id="attr1"  flex="1" label="Attribute" />
      </treecols>
      <treechildren>
	<treeitem  container="true" open="true">
	  <treerow>
	    <treecell label="Female" />
	  </treerow>
	  <treechildren>
	    <treeitem>
	      <treerow>
		<treecell label="Pearl" />
		<treecell label="Gray" />
	        <treecell label="Frumpy" />
	      </treerow>
	    </treeitem>
	    <treeitem>
	      <treerow>
		<treecell label="Cosmo" />
		<treecell label="White" />
	        <treecell label="Round" />
	      </treerow>
	    </treeitem>
            <treeitem>
             <treerow>
 	      <treecell label="Tribble" />
 	      <treecell label="Orange" />
	      <treecell label="Frumpy" />
             </treerow>
            </treeitem>
	  </treechildren>
	</treeitem>
	<treeitem  container="true" open="true">
	  <treerow>
	    <treecell label="Male" />
	  </treerow>
	  <treechildren>
	    <treeitem>
	      <treerow>
		<treecell label="Aramis" />
		<treecell label="Black" />
	        <treecell label="Cute" />
	      </treerow>
	    </treeitem>
	    <treeitem>
	      <treerow>
		<treecell label="Yakima" />
		<treecell label="Holstein" />
	        <treecell label="Handsome" />
	      </treerow>
	    </treeitem>
	    <treeitem>
	      <treerow>
		<treecell label="Fergus" />
		<treecell label="Black" />
	        <treecell label="Long" />
	      </treerow>
	    </treeitem>
	    <treeitem>
	      <treerow>
		<treecell label="Clint" />
		<treecell label="Black" />
	        <treecell label="Young" />
	      </treerow>
	    </treeitem>
            <treeitem>
             <treerow>
 	      <treecell label="Zippy" />
	      <treecell label="Orange" />
	      <treecell label="Playful" />
             </treerow>
            </treeitem>
            <treeitem>
             <treerow>
	      <treecell label="Feathers" />
	      <treecell label="Tabby" />
	      <treecell label="Patiarchal" />
             </treerow>
            </treeitem>
            <treeitem>
             <treerow>
 	      <treecell label="Butter" />
	      <treecell label="Orange" />
	      <treecell label="Old" />
             </treerow>
            </treeitem>
	  </treechildren>
	</treeitem>
      </treechildren>
    </tree>
				</dragbox>
				<dragbox flex="1" drag="autre" acceptdrag="autre" ondrop="dropAutreElement(event)">
					<tree flex="1">
              <treecols>
        	<treecol id="sex1"   flex="1" label="Name" primary="true" />
        	<treecol id="color1" flex="1" label="Color" />
        	<treecol id="attr1"  flex="1" label="Attribute" />
              </treecols>
						<treechildren>
						
			<treeitem>
	      <treerow>
		<treecell label="Mon menu" />
	      </treerow>
	    </treeitem>

						</treechildren>
					</tree>
				</dragbox>

			</hbox>
			<spacer flex="1"/>
		</vbox>
		<spacer flex="1"/>
	</hbox>
	<rdfobserver id="raz-rdfobserver" datasources="rdf:null" ref="urn:observer" onfinish="init(event);" hidden="true"/>
	<rdfobserver id="move-rdfobserver" datasources="rdf:null" ref="urn:observer" onfinish="init(event);" hidden="true"/>
	<rdfobserver id="remove-rdfobserver" datasources="rdf:null" ref="urn:observer" onfinish="confirmDelete(event);" hidden="true" arguments="ok,msg"/>
</window>
