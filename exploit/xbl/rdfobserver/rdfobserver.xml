<?xml version="1.0" encoding="UTF-8"?>
<bindings	xmlns="http://www.mozilla.org/xbl"
			xmlns:html="http://www.w3.org/1999/xhtml"
			xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
			xmlns:xbl="http://www.mozilla.org/xbl">
	<binding id="rdfobserver">
		<content timeout="5000">
			<xul:template>
				<xul:box anonid="rdfobserver-action" uri="rdf:*"
							xul:event="rdf:http://www.w3.org/1999/02/22-rdf-syntax-ns#event"
							xul:percent="rdf:http://www.w3.org/1999/02/22-rdf-syntax-ns#percent"
							xul:label="rdf:http://www.w3.org/1999/02/22-rdf-syntax-ns#label"/> 
			</xul:template>
			<xul:vbox>
				<xul:spacer flex="1"/>
				<xul:label anonid="rdfobserver-label" value=""/>
				<xul:spacer flex="1"/>
			</xul:vbox>
			<xul:progressmeter anonid="rdfobserver-progressmeter" flex="1" mode="determined" value="0%"/>
		</content>
		<implementation>
			<field name="_timer"><![CDATA[null]]></field>
			<property name="_label" onget="return document.getAnonymousElementByAttribute(this, 'anonid', 'rdfobserver-label');"/>
			<property name="_progressmeter" onget="return document.getAnonymousElementByAttribute(this, 'anonid', 'rdfobserver-progressmeter');"/>
			<property name="_action" onget="return document.getAnonymousElementByAttribute(this, 'anonid', 'rdfobserver-action');"/>
			<method name="setBusyStatus">
				<parameter name="val"/>
				<body><![CDATA[
					clearTimeout(this._timer);
					if(val) {
						this._timer = window.setTimeout(this._fireTimeout, parseInt(this.getAttribute("timeout")), this);
						this._progressmeter.setAttribute("mode", "undetermined");
					} else {
						this._progressmeter.setAttribute("value", "0%");
						this._progressmeter.setAttribute("mode", "determined");
					}
				]]></body>
			</method>
			<method name="_fireTimeout">
				<parameter name="obj"/>
				<body><![CDATA[
					var evt = document.createEvent("Events");
					evt.initEvent("timeout", true, true);
					obj.dispatchEvent(evt);
				]]></body>
			</method>
			<constructor><![CDATA[
				var args = null;
				var arguments = this.getAttribute("arguments");
				if(arguments.indexOf(",")!=-1) args = arguments.split(",");
				else args = arguments.split(";");
				for(var i=0; i<args.length; i++) if(args[i]!="") this._action.setAttributeNS("xul", args[i], "rdf:http://www.w3.org/1999/02/22-rdf-syntax-ns#"+args[i]);
				this.setAttribute("ref", this.getAttribute("ref")); 
			]]></constructor>
		</implementation>
		<handlers>
			<handler event="DOMAttrModified"><![CDATA[
				if(event.attrName=="datasources") {
					var old = event.prevValue;
					var value = event.newValue;
					this.setBusyStatus((value!="rdf:null")&&(value!=old));
				}
			]]></handler>
			<handler event="DOMNodeInserted"><![CDATA[
				var child = event.target;
				event.getAttribute = function(attr) {return this.target.getAttribute(attr);}
				clearTimeout(this._timer);
				var evttype = child.getAttribute("event");
				var percent = child.getAttribute("percent");
				if(percent!="") {
					this._progressmeter.setAttribute("mode", "determined");
					this._progressmeter.setAttribute("value", percent+"%");
				}
				var label = child.getAttribute("label");
				if(label!="") this._label.setAttribute("value", label);
				if(evttype!="") {
					try {
						if(this.getAttribute("on"+evttype)!="") eval(this.getAttribute("on"+evttype));
					} catch(e) {} 
					var evt = document.createEvent("MutationEvent");
					evt.getAttribute = function(attr) {return this.relatedNode.getAttribute(attr);}
					evt.initMutationEvent(evttype, true, true, child, "", "", "", "");
					this.dispatchEvent(evt);
				}
			]]></handler>
			<handler event="finish"><![CDATA[
				this.setBusyStatus(false);
			]]></handler>
			<handler event="timeout"><![CDATA[
				if(this.getAttribute("ontimeout")!="") eval(this.getAttribute("ontimeout"));
				this.setBusyStatus(false);
			]]></handler>
		</handlers>
	</binding>
</bindings>
