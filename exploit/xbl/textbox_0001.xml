<?xml version="1.0" encoding="UTF-8"?>

<!--
* Novatice Technologies 2008
* http://www.novatice.com
* @author Vincent Bataille "vincebattle" [v.bataille@novatice.com]
-->

<!--
Binding of a stretching textbox: the height adjusts to the text inside.
The minimum height is given with the attribute rows.

Properties:
    value = the text in the textbox
-->

<!--
version 00.01 (4 february 2009)
    _ creation
-->

<bindings xmlns="http://www.mozilla.org/xbl" xmlns:xbl="http://www.mozilla.org/xbl"
          xmlns:xul="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul">
    
    <binding id="stretchy-textbox">
        <content>
            <xul:vbox flex="1">
                <xul:textbox multiline="true" rows="3"
                             xbl:inherits="flex,width,rows,cols,disabled,readonly,value"/>
                <xul:textbox multiline="true" rows="3"
                             xbl:inherits="flex,width,rows,cols,disabled,readonly,value,context"/>
            </xul:vbox>
        </content>
        
        <handlers>
            <handler event="keyup">
                <![CDATA[
                this.resize();
		        ]]>
            </handler>
            <handler event="focus" phase="capturing">
                <![CDATA[
                this.tbfront.inputField.focus();
                ]]>
            </handler>
        </handlers>
        
        <implementation>
            <field name="tbback">
                <![CDATA[
                document.getAnonymousNodes(this)[0].firstChild
                ]]>
            </field>
            <field name="tbfront">
                <![CDATA[
                document.getAnonymousNodes(this)[0].lastChild
                ]]>
            </field>
            <field name="delta">
                <![CDATA[
                0
                ]]>
            </field>
            
            <property name="value">
                <getter>
                    <![CDATA[
                    return this.tbfront.value;
                    ]]>
                </getter>
                <setter>
                    <![CDATA[
                    this.tbfront.value = val;
                    this.resize();
                    ]]>
                </setter>
            </property>
            
            <constructor>
                <![CDATA[
                this.tbfront.inputField.style.overflow = "-moz-scrollbars-none";
                this.tbback.inputField.style.overflow = "-moz-scrollbars-vertical";
                this.tbback.style.opacity = 0;
                
                this.init();
                if (this.hasAttribute("value")) {
                    this.resize();
                }
                ]]>
            </constructor>
            
            <method name="init">
                <body>
                    <![CDATA[
                    this.delta = this.tbfront.boxObject.height - this.tbfront.inputField.clientHeight;
                    
                    //getting height of tbback (height + margins)
                    var heightTotal = this.tbback.boxObject.height;
                    heightTotal += parseInt(window.getComputedStyle(this.tbback, null).getPropertyValue("margin-top"));

                    //setting margin to move tbfront to the right place
                    this.tbfront.style.marginTop = -heightTotal + "px";
                    
                    //getting width difference between tbback with scrollbar and tbfront without it
                    var deltaW = this.tbfront.inputField.clientWidth - this.tbback.inputField.clientWidth;
                    
                    //setting padding
                    document.getAnonymousNodes(this.tbfront)[0].style.paddingRight = Math.ceil(deltaW/2) + "px";
                    document.getAnonymousNodes(this.tbfront)[0].style.paddingLeft = Math.floor(deltaW/2) + "px";
                    ]]>
                </body>
            </method>
            
            <method name="resize">
                <body>
                    <![CDATA[
                    this.tbback.value = this.tbfront.value;
                    this.tbfront.height = this.tbback.inputField.scrollHeight + this.delta;
                    ]]>
                </body>
            </method>
        </implementation>
    </binding>
    
</bindings>