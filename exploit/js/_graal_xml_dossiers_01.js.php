<?php
$vl_c_mes01='There must be only one root!\n You can not add siblings to the root.';
$vl_c_mes02='Vous ne pouvez pas supprimer la racine.\nMais vous pouvez la renommer, en changer la valeur.\nOu encore supprimer le dossier...';
$vl_c_mes03='Il ne peut y avoir qu\'une racine!\n Vous ne pouvez pas la dupliquer.';
$vl_c_mes04='Vous avez atteint le sommet!\nVous ne pouvez pas remonter plus haut.';
$vl_c_mes05='Le fond est atteint!\nVous ne pouvez pas descendre plus bas.';
$vl_c_mes06='You can not demote this node.\nYou need a previous sibling to become its parent.';
switch ($vl_c_id_fenetre) {
  case "Fen_00067":$vf_tree='treedata';break;   //Menu Principal
  case "Fen_00088":$vf_tree='treedata_destination';break;   //Mes dossiers
  case "Fen_00060":$vf_tree='treedata';break;   //Menu développement
  case "Fen_00717":$vf_tree='treedata_destination';break; //Personnalisation des menus
  case "Fen_00741":$vf_tree='arbre_recupera_panier';break; //Récupération d'adresses de courriels dans des pages web
}
$vl_c_xml=simplexml_load_string(fa_recup_session("vs_param_environ",""));
if (isset($vl_c_xml->page_accueil)){$page_accueil=$vl_c_xml->page_accueil->attributes();}else{$page_accueil='0';}
switch ($page_accueil){
	case "0":
		$src_page_accueuil="_graal_page_intro_02.php";
		break;
	case "post_it":
		$src_page_accueuil="_graal_fen_actions_01.php?genreaction=post_it&#38;visu=oui&#38;lesquels=destinataire&#38;";
		break;
	default:
		$src_page_accueuil="_graal_bdope_note_03.php?doc_cleunik=$page_accueil&raf_random='+Math.random()+'&'";
		break;
}
switch ("$vl_e_doc_cleunik") {
	case "A":
	case "":
		$aae_pf_init=<<<EOT
		vf_e_doc_cleunik=0;
		vf_c_arbre_dos.focus();
EOT;
		break;
	default:
		$aae_pf_init=<<<EOT
		vf_e_doc_cleunik=$vl_e_doc_cleunik;
		var s ="vl_e_doc_cleunik="+fa_enc(vf_e_doc_cleunik)+"&";
       fa_xmlhttprequest_xml(vf_c_aae_script_edite,s,aae_pf_affiche_datas);
       aae_pf_etat_fen("modifier");
EOT;
		break;
}
echo <<<END
<script type="application/x-javascript"><![CDATA[
/* Constants and enumerators */
const NodeTypes = {element:0, attribute:1, comment:2, directive:3};
var vf_tree="$vf_tree";
var vf_c_genre="",vf_c_action="",vf_c_arbre_dos="",vf_e_doc_cleunik="",vf_e_i="";
var vf_c_aae_script_edite="_graal_xml_dos_01.php";
var vf_c_script_bdope_dos='_graal_bdope_note_01.php';
var vf_c_aae_url_arbre='_graal_das_doc_01.php?quelsdocs='+"$vl_c_quelsdocs"+'&vs_typedoc=4';
const c_script_fen_visu_acteurs='_graal_fen_rech_acteurs.php?vl_c_origine=selection&vl_c_proc_retour=pf_ouvre_acteur_recup&';
const c_script_choix_actions="_graal_fen_rech_actions_01.php?p02=$vl_c_id_fenetre&genreaction=toutes&";
const c_script_choix_interlo="_graal_fen_rech_interlocuteurs_01.php?p02=$vl_c_id_fenetre&";
const c_script_choix_article="_graal_fen_rech_articles_01.php?p02=$vl_c_id_fenetre&";
const c_fen_selection_doc='_graal_fen_ged_01.php?genreged=tousss&quelsdocs=docs&retour=oui&';
const c_fen_selection_notes='_graal_fen_ged_01.php?genreged=tousss&quelsdocs=notes&retour=oui&';
const c_fen_selection_pseudodocs='_graal_fen_ged_01.php?genreged=tousss&quelsdocs=pseudodocs&retour=oui&';
const c_fen_selection_dossiers='_graal_fen_ged_01.php?genreged=tousss&quelsdocs=dossiers&retour=oui&';
const c_script_fen_action='_graal_fen_actions_02.php?';
const c_script_notes="_graal_fen_note_01.php?quelsdocs=unenot_acteur&";
const c_script_docum="_graal_fen_doc_07.php?quelsdocs=undoc&doc_cleunik=";
const c_script_liens='_graal_fen_pseudodocs_01.php?quelsdocs=unlien&doc_cleunik=';
const c_script_fen_acteur="_graal_fen_acteurs_01.php?act_cleunik=";
const c_script_dossier="_graal_fen_dossier_01.php?quelsdocs=medoc&doc_cleunik=";
const c_fen_import_doc="_graal_fen_doc_07.php?quelsdocs=medoc&doc_cleunik=-1&";
function aae_pf_affiche_datas(stream) {
  var vl_c_datas=stream,vl_c_dossier,dom=new DOMParser(),xml;
  //aae_pf_raz_fiche()
  vf_e_doc_cleunik=fa_xml_get(vl_c_datas,'doc_cleunik');
  fa_gid('tb_emplacement').value=fa_xml_get(vl_c_datas,'emplacement');
  fa_gid('tb_titre').value=fa_xml_get(vl_c_datas,'titre');
  fa_gid('tb_descriptif_sommaire').value=fa_xml_get(vl_c_datas,'descriptif_sommaire');
  fa_gid("la_dateheurecreation").value =fa_xml_get(vl_c_datas,'dateheurecreation');
  fa_gid("la_dateheuremodif").value =fa_xml_get(vl_c_datas,'dateheuremodif');
  vl_c_dossier=fa_xml_get(vl_c_datas,'blocnote_riche');
  xml=dom.parseFromString(vl_c_dossier,"text/xml");
  if(xml==null){
  	alert("Impossible de charger le dossier");
  	return;
  }
  var xmlroot = xml.documentElement.childNodes[0];                                   /* get the first element */
  var xultree = fa_gid("treeitems_destination");                  /* treechildren is the xul container */         
  aae_pf_walkthexmltree(xmlroot,xultree);                                  /* get the party started */
  fa_gid("treedata_destination").view.selection.select(0);
}
function aae_pf_ajoute_liaison(vv_qui){
	var node, item, ok;
    node = aae_pf_getselectednode(vf_tree);
    if(!node){ alert("Attrapez une branche de l'arbre ...");return; }
    var typeCode = node.getAttribute("type");
    var nodeID   = node.getAttribute("id");
    if(typeCode!=NodeTypes.element){ 
      //alert("You can only add items to items!"); 
    return; }
    if(nodeID=="root"){
    //  alert("$vl_c_mes01"); 
      return; 
    }
	var vl_c_param='&raf_random='+Math.random()+'&';
	switch (vv_qui){
		case "acteur":
			vl_c_param+="vl_e_genreacteur=tousss&";
			fa_ouvre(c_script_fen_visu_acteurs+vl_c_param,800,650);
			break;
		case "interlocuteur":
			fa_ouvre(c_script_choix_interlo+"genreacteur=tousss&",800,600);
			break;
		case "article":
			fa_ouvre(c_script_choix_article+"genreacteur=tousss&",800,600);
			break;
		case "action":
			fa_ouvre(c_script_choix_actions+vl_c_param,1000,800);
			break;
		case 'doc':
      		fa_ouvre(c_fen_selection_doc,1000,800);
      		break;
      	case 'doc_import':
      	if (vf_e_doc_cleunik==0) {alert("Il faut préalablement enregistrer le dossier...");return;}
      		fa_ouvre(c_fen_import_doc+"dossier_cleunik="+vf_e_doc_cleunik,1000,800);
      		break;
		case 'note':
	      fa_ouvre(c_fen_selection_notes,1000,800);
      		break;
		case 'pseudodocs':
		if (vf_e_doc_cleunik==0) {alert("Il faut préalablement enregistrer le dossier.");return;}
		    fa_ouvre(c_fen_selection_pseudodocs,1000,800);
      		break;
      	case 'dossier':
		    fa_ouvre(c_fen_selection_dossiers,1000,800);
      		break;
	}
}

function pf_retour_fenetre_docs(vv_t_tableau_cleunik,vv_t_tableau_nom,vv_t_tableau_titre) {
  var vl_e_nb_sel=vv_t_tableau_cleunik.length;
  if (vl_e_nb_sel!=0) {
	for(var i=0;i<vl_e_nb_sel;i++){                      /* loop 'em */
     	 var ok;	
	    var node = aae_pf_getselectednode(vf_tree);
	    if(!node){ return; }
	    var typeCode = node.getAttribute("type");
	    var nodeID   = node.getAttribute("id");
	    if(typeCode!=NodeTypes.element){ 
	      //alert("You can only add items to items!"); 
	    return; }
	    if(nodeID=="root"){
	    //  alert("$vl_c_mes01"); 
	      return; 
	    }
	    treeItem=aae_pf_newtreeitem(vv_t_tableau_nom[i]+"("+vv_t_tableau_titre[i]+")","ai03","id","icon",vv_t_tableau_cleunik[i],"false","8");
	    ok = node.parentNode.insertBefore(treeItem,node.nextSibling);
	    ok = aae_pf_setselectednode(treeItem);
    }
  }
}
function pf_retour_fenetre_notes(vv_t_tableau_cleunik,vv_t_tableau_nom,vv_t_tableau_titre) {
  var vl_e_nb_sel=vv_t_tableau_cleunik.length;
  if (vl_e_nb_sel!=0) {
	for(var i=0;i<vl_e_nb_sel;i++){                      /* loop 'em */
     	 var ok;	
	    var node = aae_pf_getselectednode(vf_tree);
	    if(!node){ return; }
	    var typeCode = node.getAttribute("type");
	    var nodeID   = node.getAttribute("id");
	    if(typeCode!=NodeTypes.element){ 
	      //alert("You can only add items to items!"); 
	    return; }
	    if(nodeID=="root"){
	    //  alert("$vl_c_mes01"); 
	      return; 
	    }
	    treeItem=aae_pf_newtreeitem(vv_t_tableau_titre[i],"ai02","id","icon",vv_t_tableau_cleunik[i],"false","2");
	    ok = node.parentNode.insertBefore(treeItem,node.nextSibling);
	    ok = aae_pf_setselectednode(treeItem);
    }
  }
}
function pf_retour_fenetre_pseudodocs(vv_t_tableau_cleunik,vv_t_tableau_nom,vv_t_tableau_titre) {
  var vl_e_nb_sel=vv_t_tableau_cleunik.length;
  if (vl_e_nb_sel!=0) {
	for(var i=0;i<vl_e_nb_sel;i++){                      /* loop 'em */
     	 var ok;	
	    var node = aae_pf_getselectednode(vf_tree);
	    if(!node){ return; }
	    var typeCode = node.getAttribute("type");
	    var nodeID   = node.getAttribute("id");
	    if(typeCode!=NodeTypes.element){ 
	      //alert("You can only add items to items!"); 
	    return; }
	    if(nodeID=="root"){
	    //  alert("$vl_c_mes01"); 
	      return; 
	    }
	    treeItem=aae_pf_newtreeitem(vv_t_tableau_nom[i]+"("+vv_t_tableau_titre[i]+")","ah05","id","icon",vv_t_tableau_cleunik[i],"false","1");
	    ok = node.parentNode.insertBefore(treeItem,node.nextSibling);
	    ok = aae_pf_setselectednode(treeItem);
    }
  }
}
function pf_retour_fenetre_dossiers(vv_t_tableau_cleunik,vv_t_tableau_nom,vv_t_tableau_titre) {
  var vl_e_nb_sel=vv_t_tableau_cleunik.length;
  if (vl_e_nb_sel!=0) {
	for(var i=0;i<vl_e_nb_sel;i++){                      /* loop 'em */
     	 var ok;	
	    var node = aae_pf_getselectednode(vf_tree);
	    if(!node){ return; }
	    var typeCode = node.getAttribute("type");
	    var nodeID   = node.getAttribute("id");
	    if(typeCode!=NodeTypes.element){ 
	      //alert("You can only add items to items!"); 
	    return; }
	    if(nodeID=="root"){
	    //  alert("$vl_c_mes01"); 
	      return; 
	    }
	    treeItem=aae_pf_newtreeitem(vv_t_tableau_nom[i]+"("+vv_t_tableau_titre[i]+")","ag13","id","icon",vv_t_tableau_cleunik[i],"false","9");
	    ok = node.parentNode.insertBefore(treeItem,node.nextSibling);
	    ok = aae_pf_setselectednode(treeItem);
    }
  }
}



function pf_ouvre_acteur_recup(vl_act_cleunik,vl_c_raisonsoc,vl_c_typeacteur){
var ok;	
    var node = aae_pf_getselectednode(vf_tree);
    if(!node){ return; }
    var typeCode = node.getAttribute("type");
    var nodeID   = node.getAttribute("id");
    if(typeCode!=NodeTypes.element){ 
      //alert("You can only add items to items!"); 
    return; }
    if(nodeID=="root"){
    //  alert("$vl_c_mes01"); 
      return; 
    }
    treeItem=aae_pf_newtreeitem(vl_c_raisonsoc,"ai15","id","icon",vl_act_cleunik,"false","3");
    ok = node.parentNode.insertBefore(treeItem,node.nextSibling);
    ok = aae_pf_setselectednode(treeItem);
}
function aae_pf_newtreeitem(label,props,id,icon,url,hidden,typedeliaison){
  var treeItem = document.createElementNS(onlyxul,"treeitem");
  var treeRow  = document.createElementNS(onlyxul,"treerow");
  var treeCell_01 = document.createElementNS(onlyxul,"treecell");
  var treeCell_02 = document.createElementNS(onlyxul,"treecell");
  if(id){ 
  	//treeItem.setAttribute("id",id);
  	treeCell_01.setAttribute("id",id);
   }
  if(hidden) {
    treeItem.setAttribute("hidden",hidden);
    treeCell_01.setAttribute("hidden",hidden);
  }
  treeCell_01.setAttribute("label",label);
  if(props) {treeCell_01.setAttribute("properties",props);}
  if(url) {treeCell_01.setAttribute("url",url);}
  if(typedeliaison) {
    treeCell_01.setAttribute("value",typedeliaison);
    switch(typedeliaison){
      case "0": 
        treeCell_02.setAttribute("label",'Lien internet');
        break;
      case "1": 
        treeCell_02.setAttribute("label",'Pseudos-documents');
        break;
      case "2":
        treeCell_02.setAttribute("label",'Notes');
        break;
      case "3":
        treeCell_02.setAttribute("label",'Acteurs');
        break;
      case "4": 
        treeCell_02.setAttribute("label",'Interlocuteurs');
        break;
	  case "5": 
        treeCell_02.setAttribute("label",'Lien externe');
        break;
    }
  }
  else
  {
    treeCell_01.setAttribute("value",'0');
    treeCell_02.setAttribute("label",'Lien internet');
  }

  treeRow.appendChild(treeCell_01);
  treeRow.appendChild(treeCell_02);
  treeItem.appendChild(treeRow);
  return treeItem;
}
function pf_ouvre_action_recup(vv_t_tableau_cleunik,vv_t_tableau_sujet) {
	var vl_e_nb_sel=vv_t_tableau_cleunik.length;
	  if (vl_e_nb_sel!=0) {
		for(var i=0;i<vl_e_nb_sel;i++){                      /* loop 'em */
	     	 var ok;	
		    var node = aae_pf_getselectednode(vf_tree);
		    if(!node){ return; }
		    var typeCode = node.getAttribute("type");
		    var nodeID   = node.getAttribute("id");
		    if(typeCode!=NodeTypes.element){ 
		      //alert("You can only add items to items!"); 
		    return; }
		    if(nodeID=="root"){
		    //  alert("$vl_c_mes01"); 
		      return; 
		    }
		    treeItem=aae_pf_newtreeitem(vv_t_tableau_sujet[i],"af08","id","icon",vv_t_tableau_cleunik[i],"false","6");
		    ok = node.parentNode.insertBefore(treeItem,node.nextSibling);
		    ok = aae_pf_setselectednode(treeItem);
	    }
	  }
}
function pf_ouvre_article_recup(vl_art_cleunik,vl_code,vl_description){
	var ok;	
    var node = aae_pf_getselectednode(vf_tree);
    if(!node){ return; }
    var typeCode = node.getAttribute("type");
    var nodeID   = node.getAttribute("id");
    if(typeCode!=NodeTypes.element){ 
      //alert("You can only add items to items!"); 
    return; }
    if(nodeID=="root"){
    //  alert("$vl_c_mes01"); 
      return; 
    }
    treeItem=aae_pf_newtreeitem(vl_description+"("+vl_code+")","ai07","id","icon",vl_art_cleunik,"false","7");
    ok = node.parentNode.insertBefore(treeItem,node.nextSibling);
    ok = aae_pf_setselectednode(treeItem);
}
function pf_ouvre_interlo_recup(vl_int_cleunik,vl_qui,vl_act_cleunik,vl_raisonsoc,vl_portee) {
	var ok;	
    var node = aae_pf_getselectednode(vf_tree);
    if(!node){ return; }
    var typeCode = node.getAttribute("type");
    var nodeID   = node.getAttribute("id");
    if(typeCode!=NodeTypes.element){ 
      //alert("You can only add items to items!"); 
    return; }
    if(nodeID=="root"){
    //  alert("$vl_c_mes01"); 
      return; 
    }
    treeItem=aae_pf_newtreeitem(vl_qui,"ai18","id","icon",vl_int_cleunik,"false","4");
    ok = node.parentNode.insertBefore(treeItem,node.nextSibling);
    ok = aae_pf_setselectednode(treeItem);
}
function aae_pf_alimente_table_dos() {
  fa_das("aag_arbre_des_dossiers",vf_c_aae_url_arbre+'&raf01='+Math.random());
}
function aae_pf_etat_fen(vv_quoi) {
  switch(vv_quoi) {
    case "ini":
       break;
    case "selectionner":  //   à affiner, en fonction des droits
       fa_grise_oui("bt_ajouter");
       fa_grise_non("bt_annuler");
       fa_grise_oui("bt_detailler");
       fa_grise_oui("bt_enregistrer");
       fa_grise_non("bt_modifier");
       fa_grise_oui("bt_sortir");
       fa_grise_non("bt_supprimer");
       fa_cache_non("aae_treebar"); //  On cache la barre de menu de l'arbre des dossier
  //  On ne cache pas les onglets car on a des problemes ensuite pour ré-afficher leur contenu ...
//       fa_att_set("aae_tab02","hidden",true);   //  On cache le 2° onglet
//       fa_att_set("aae_tab03","hidden",true);   //  On cache le 3° onglet
       fa_att_set("delete-key","disabled",true);fa_att_set("insert-key","disabled",true);    //  On "active" les touches raccourci permettant certaines actions sur l'arbre
       fa_sel_index("aag_deck_01",1); //  on sélectionne le deck n°1 (2° deck car on commence à 0))
       
       fa_att_set("treedata","width",420);          //  on fixe la largeur de l'arbreà 400 car on a caché la barre de menu
       s ="vl_e_doc_cleunik="+fa_enc(vf_e_doc_cleunik)+"&";
       fa_xmlhttprequest_xml(vf_c_aae_script_edite,s,aae_pf_affiche_datas);
       break;
     case "modifier":
       fa_grise_non("bt_enregistrer");
       fa_grise_oui("bt_modifier");
       fa_grise_oui("bt_supprimer");
       fa_cache_non("aae_treebar"); //  On affiche la barre de menu de l'arbre des dossier
/*
       fa_att_set("aae_tab02","hidden",false);   //  On affiche le 2° onglet
       fa_att_set("dosedit","hidden",false);   //  On affiche le contenu du 2° onglet
       fa_att_set("aae_tab02","selected",true);   //  On affiche le contenu du 2° onglet
       fa_att_set("aae_tab03","hidden",false);   //  On affiche le 3° onglet
*/
       fa_att_set("delete-key","disabled",false);
       fa_att_set("insert-key","disabled",false);    //  On "active" les touches raccourci permettant certaines actions sur l'arbre 
       fa_sel_index("aag_deck_01",2); //  on sélectionne le deck n°1 (2° deck car on commence à 0))
       //fa_focusdonne('tb_titre');
       fa_sel_index("aae_onglets",0);
       vf_c_action="modifier";
       break;
     case "ajouter":
       fa_grise_oui("bt_ajouter");
       fa_grise_non("bt_annuler");
       fa_grise_oui("bt_detailler");
       fa_grise_non("bt_enregistrer");
       fa_grise_oui("bt_modifier");
       fa_grise_oui("bt_sortir");
       fa_grise_oui("bt_supprimer");
       aae_pf_raz_fiche();
       fa_xmlhttprequest_xml('xml/modele_dossier_01.php',"",aae_pf_loadtree,"treeitems_destination");
       fa_sel_index("aae_onglets",1);
       fa_cache_non("aae_treebar");
       fa_sel_index("aag_deck_01",2);
       vf_c_action="ajouter";
       fa_att_set("delete-key","disabled",false);
       fa_att_set("insert-key","disabled",false);    //  On "active" les touches raccourci permettant certaines actions sur l'arbre
       break;
     case "annuler":
       fa_grise_non("bt_ajouter");
       fa_grise_oui("bt_annuler");
       fa_grise_non("bt_detailler");
       fa_grise_oui("bt_enregistrer");
       fa_grise_oui("bt_modifier");
       fa_grise_non("bt_sortir");
       fa_grise_oui("bt_supprimer");
       aae_pf_raz_fiche();
       fa_sel_index("aag_deck_01",1);
       break;
     case "sortir":
     window.history.back(); //  Ne fonctionne que si cette fenetre est une fenetre appellée dans la même fenêtre
     break;   
 default:
 break;
}
  }
function aae_pf_init() {
  fa_att_set("bt_detailler","oncommand","aae_pf_etat_fen('selectionner')");
  fa_att_set("bt_ajouter","oncommand","aae_pf_etat_fen('ajouter')");
  fa_att_set("bt_modifier","oncommand","aae_pf_etat_fen('modifier')");
  fa_att_set("bt_supprimer","oncommand","aae_pf_validation('supprimer')");
  fa_att_set("bt_enregistrer","oncommand","aae_pf_validation('enregistrer')");
  fa_att_set("bt_annuler","oncommand","aae_pf_etat_fen('annuler')");
  fa_att_set("bt_sortir","oncommand","aae_pf_etat_fen('sortir')");
 switch ("$vl_c_quelsdocs"){
  case "nosdoc":
   vf_c_genre="Nos dossiers";
   fa_value_set("des_01","Tous les dossiers de la société");
   break;
  case "medoc":
   vf_c_genre="Mes dossiers";
   fa_value_set("des_01","Médos (Aie)");
   break; 
  case "leurdoc":
   vf_c_genre="Leurs dossiers";
   fa_value_set("des_01","Leurs dossiers ... (pour rire;-)!! ");
   break;
 }        
 vf_c_arbre_dos = fa_gid("aag_arbre_des_dossiers");
 fa_att_set("aag_arbre_des_dossiers","onclick","aae_pf_sel_ligne()");
 
 fa_att_set("delete-key","disabled",false);
 fa_att_set("insert-key","disabled",false);    //  On "active" les touches raccourci permettant certaines actions sur l'arbre
 fa_grise_non("bt_ajouter");
 fa_grise_non("bt_annuler");
 fa_grise_non("bt_detailler");
 fa_grise_oui("bt_enregistrer");
 fa_grise_oui("bt_modifier");
 fa_grise_non("bt_sortir");
 fa_grise_oui("bt_supprimer");
 aae_pf_alimente_table_dos();
 $aae_pf_init
}
function aae_pf_insertnewitem(){
    var node, item, ok;
    node = aae_pf_getselectednode(vf_tree);
    if(!node){ return; }
    var typeCode = node.getAttribute("type");
    var nodeID   = node.getAttribute("id");
    if(typeCode!=NodeTypes.element){ 
      //alert("You can only add items to items!"); 
    return; }
    if(nodeID=="root"){
    //  alert("$vl_c_mes01"); 
      return; 
    }
    item = aae_pf_newemptynode(NodeTypes.element);
    ok = node.parentNode.insertBefore(item,node.nextSibling);
    ok = aae_pf_setselectednode(item);
}
function aae_pf_raz_fiche() {
	fa_vide_arbre("treeitems_destination");
}  
function aae_pf_sel_ligne() {
  if(fa_gid("bt_detailler").disabled == true){
    return;
  }
  var rowIndex = vf_c_arbre_dos.currentIndex;
  if(rowIndex == -1){return;}
  vf_e_doc_cleunik=vf_c_arbre_dos.view.getCellText( rowIndex ,vf_c_arbre_dos.columns.getNamedColumn("doc_cleunik"));
}
function aae_pf_fin_requete(stream){
	var vl_datas = stream;
	aae_pf_alimente_table_dos();
	switch (vf_c_action) {
		case "supprimer":
			alert(vl_datas);
			aae_pf_etat_fen("annuler");
			fa_sel_index("aag_deck_01",1);
			break;
		case "ajouter":
			vf_e_doc_cleunik=stream
			break;
		case "modifier":
			break;
	}
}
function aae_pf_loadtree(xml,quel_treechildren){
  var xmlroot = xml.documentElement;                                   /* get the first element */
  var xultree = fa_gid(quel_treechildren);                  /* treechildren is the xul container */         
  aae_pf_walkthexmltree(xmlroot,xultree);                                  /* get the party started */
}

function aae_pf_openfile(){
	try {
		netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
	} catch (e) {
		alert("Vous n'avez pas l\'autorisation de lire des fichiers!!");
	}
	var file = Components.classes["@mozilla.org/file/local;1"].createInstance(Components.interfaces.nsILocalFile);
  var nsIFilePicker = Components.interfaces.nsIFilePicker;
  var fp = Components.classes["@mozilla.org/filepicker;1"].createInstance(nsIFilePicker);
  fp.init(window, "Sélectionner un fichier", nsIFilePicker.modeOpen);
  fp.appendFilters(nsIFilePicker.filterXML);
  var reponse = fp.show();
	if (reponse == nsIFilePicker.returnOK){
		//return fp.file.path;
	}
//
//  Il faut traiter le cas de non-sélection de fichier (voir exemple nsIFilePicker.modeOpen sur xulfr.org)
//
  file.initWithPath( fp.file.path );
  if ( file.exists() == false ) {
		alert("File does not exist");
		return;
	}
	
  var is = Components.classes["@mozilla.org/network/file-input-stream;1"].createInstance( Components.interfaces.nsIFileInputStream );
	is.init( file,0x01, 00004, null);
	var sis = Components.classes["@mozilla.org/scriptableinputstream;1"].createInstance( Components.interfaces.nsIScriptableInputStream );
	sis.init( is );
	var output = sis.read( sis.available() );
	// Trying to use the DomParser ... and i works !! Thanks George
	var dom = new DOMParser();
  var xml = dom.parseFromString(output,"text/xml");
  if(xml==null) alert("XML Load Failed");
  aae_pf_loadtree(xml,"treeitems");
}

function aae_pf_savefile(id_arbre) {
	try {
		netscape.security.PrivilegeManager.enablePrivilege("UniversalXPConnect");
	} catch (e) {
		alert("Permission to save file was denied.");
	}
	var file = Components.classes["@mozilla.org/file/local;1"].createInstance(Components.interfaces.nsILocalFile);
  var nsIFilePicker = Components.interfaces.nsIFilePicker;
  var fp = Components.classes["@mozilla.org/filepicker;1"].createInstance(nsIFilePicker);
  fp.init(window, "Enregistrez un fichier XML", nsIFilePicker.modeSave);
  fp.appendFilters(nsIFilePicker.filterXML);
  var reponse = fp.show();
	if (reponse == nsIFilePicker.returnOK){
	}
	file.initWithPath( fp.file.path );
	if ( file.exists() == false ) {
		file.create( Components.interfaces.nsIFile.NORMAL_FILE_TYPE, 420 );
	}
	var outputStream = Components.classes["@mozilla.org/network/file-output-stream;1"]
		.createInstance( Components.interfaces.nsIFileOutputStream );
	/* Open flags 
	#define PR_RDONLY       0x01
	#define PR_WRONLY       0x02
	#define PR_RDWR         0x04
	#define PR_CREATE_FILE  0x08
	#define PR_APPEND      0x10
	#define PR_TRUNCATE     0x20
	#define PR_SYNC         0x40
	#define PR_EXCL         0x80
	*/
	/*
	** File modes ....
	**
	** CAVEAT: 'mode' is currently only applicable on UNIX platforms.
	** The 'mode' argument may be ignored by PR_Open on other platforms.
	**
	**   00400   Read by owner.
	**   00200   Write by owner.
	**   00100   Execute (search if a directory) by owner.
	**   00040   Read by group.
	**   00020   Write by group.
	**   00010   Execute by group.
	**   00004   Read by others.
	**   00002   Write by others
	**   00001   Execute by others.
	**
	*/
	outputStream.init( file, 0x04 | 0x08 | 0x20, 420, 0 );
	var source = aae_pf_getsourcexml(id_arbre);
	var result = outputStream.write( source, source.length );
	outputStream.close();
}


function aae_pf_validation(vv_quoi){
var s,vl_c_source;
switch(vv_quoi){
  case "ligne":
    var tree = fa_gid(vf_tree);
    var vl_prop;
    if(tree.currentIndex<0){ return; }
    var selected  = tree.contentView.getItemAtIndex(tree.currentIndex);
    selected.firstChild.childNodes[0].setAttribute("label",fa_value_get("tb_label"));
    selected.firstChild.childNodes[0].setAttribute("url",fa_value_get("tb_link"));
    var typedeliaison=fa_gid("ml_type").value;
    selected.firstChild.childNodes[0].setAttribute("value",typedeliaison);
    switch(typedeliaison)    {
      case "0": selected.firstChild.childNodes[1].setAttribute("label",'Lien internet'); break;
      case "1": selected.firstChild.childNodes[1].setAttribute("label",'Pseudos-documents'); break;
      case "2": selected.firstChild.childNodes[1].setAttribute("label",'Notes'); break;
      case "3": selected.firstChild.childNodes[1].setAttribute("label",'Acteurs'); break;
      case "4": selected.firstChild.childNodes[1].setAttribute("label",'Interlocuteurs'); break;
      case "5": selected.firstChild.childNodes[1].setAttribute("label",'Lien externe'); break;
      case "6": selected.firstChild.childNodes[1].setAttribute("label",'Action'); break;
      case "7": selected.firstChild.childNodes[1].setAttribute("label",'Article'); break;
      case "8": selected.firstChild.childNodes[1].setAttribute("label",'Document'); break;
      case "9": selected.firstChild.childNodes[1].setAttribute("label",'Dossier'); break;
    }
    var vl_treeprop=fa_gid("treeproperties");
    var rowIndex = vl_treeprop.currentIndex;
    if(rowIndex == -1){
        //  On ne fait rien
    } else {
      vl_prop=vl_treeprop.view.getCellValue( rowIndex ,vl_treeprop.columns.getNamedColumn("col_prop"));
      selected.firstChild.childNodes[0].setAttribute("properties",vl_prop);
    }
    return;
    break;
  case "enregistrer":
     if (vf_e_doc_cleunik==0) {
       if (fa_value_get("tb_emplacement")==''){
         alert('Votre saisie n\'a pas de sens!');
         fa_focusdonne("tb_emplacement");
         return;
         }
    }
    break;
  case "supprimer":
    Check = confirm("Confirmez-vous la suppression de ce dossier ?");
    if(Check == false) return;
    vf_c_action="supprimer";
    break;
}     
vf_c_requete_en_cours=vf_c_action;
s="";
s +="vf_e_doc_cleunik="+fa_enc(vf_e_doc_cleunik)+"&";
s +="emplacement="+fa_enc(fa_value_get("tb_emplacement"))+"&";
s +="titre="+fa_enc(fa_value_get("tb_titre"))+"&";
s +="descriptif_sommaire="+fa_enc(fa_value_get("tb_descriptif_sommaire"))+"&";
s +="vf_c_action="+fa_enc(vf_c_action)+"&";
s+="vf_e_typedoc=4&";
s +="blocnote_riche="+fa_enc(aae_pf_serializetree("treedata_destination"))+"&";

//var parser = new XMLSerializer();
//alert(parser.serializeToString(fa_gid("treedata_destination")))


fa_xmlhttprequest_txt(vf_c_script_bdope_dos,s,aae_pf_fin_requete);
}



function aae_pf_walkthexmltree(xmlnode,xulnode){
  var nodename = xmlnode.getAttribute('title');                         /* or xmlnode.nodeName */
  var att_label= xmlnode.getAttribute("label");
  var att_properties= xmlnode.getAttribute("properties");
  var att_id= xmlnode.getAttribute("id");
  var att_url= xmlnode.getAttribute("url");
  var att_hidden= xmlnode.getAttribute("hidden");
  var att_src= xmlnode.getAttribute("src");
  var att_typedeliaison= xmlnode.getAttribute("value");
  var newnode  = aae_pf_newtreeitem(att_label,att_properties,att_id,att_src,att_url,att_hidden,att_typedeliaison);   /* the new xul treeitem */
  xulnode.appendChild(newnode);                                        /* append it to treechildren */
  if(xmlnode.hasChildNodes){                                           /* more nodes? */
    for(var i=0;i<xmlnode.childNodes.length;i++){                      /* loop 'em */
      if(xmlnode.childNodes[i].nodeType==1){                           /* Only xml elements will be parsed */
        if(!aae_pf_isnodecontainer(newnode)){ aae_pf_makenodecontainer(newnode); }   /* items with children need to be containers */
        aae_pf_walkthexmltree(xmlnode.childNodes[i],newnode.childNodes[1]);       /* recursive call */
      }
    }
  }
}
/*---------- Tree Functions ----------*/



function aae_pf_selectnode(vv_iframe) {
    var vl_e_onglet_sel;
    var vl_c_chaine;
    var tree = fa_gid(vf_tree);
    if(tree.currentIndex<0) {return;}
    try {
      var selected  = tree.contentView.getItemAtIndex(tree.currentIndex);
      var itemlabel = selected.firstChild.childNodes[0].getAttribute("label");
      var itemLink  = selected.firstChild.childNodes[0].getAttribute("url");
      fa_value_set("tb_label",itemlabel);
      if(itemLink) {fa_value_set("tb_link" ,itemLink);} else {fa_value_set("tb_link" ,"");}
      var att_properties= selected.firstChild.childNodes[0].getAttribute("properties");
      var att_id= selected.firstChild.childNodes[0].getAttribute("id");
      var att_hidden= selected.firstChild.childNodes[0].getAttribute("hidden");
      var att_src= selected.firstChild.childNodes[0].getAttribute("src");
      var typedeliaison  = selected.firstChild.childNodes[0].getAttribute("value");
      if (fa_gid("ml_type")!=null) {
        fa_gid("ml_type").selectedIndex=typedeliaison;
      }
      /*
      try {
        fa_gid("ml_type").selectedIndex=typedeliaison;
      } catch (e) {
        // raf
        var toto="";
      }
      */
      //  N'afficher que lorque l'on est sur l'onglet de visualisation
      if (fa_gid("aae_onglets")==null) {
        vl_e_onglet_sel=0;
      } else {
        vl_e_onglet_sel=fa_gid("aae_onglets").selectedIndex;
      }
      /*
      try {
        vl_e_onglet_sel=fa_gid("aae_onglets").selectedIndex;
      } catch (e) {
        //  si on a une exception, a priori, au 8 juin 2006, c'est qu'on est dans fa fenêtre _graal_menu003 sinon on est dans la fenêtre _graal_dossier_01
        vl_e_onglet_sel=0;
        alert(e)
      }
      */
      switch (vl_e_onglet_sel){
        case 0: //  Onglet de navigation
          switch(typedeliaison){
            case "0": //  Lien internet 
              //  Pour éviter de perdre la connexion https, on affiche systématiquement une page
              if (itemLink=="") {
				fa_att_set(vv_iframe,"src","$src_page_accueuil");	
			  } else {
	              fa_att_set(vv_iframe,"src",itemLink);								
			  }
              break;
            case "1": //  Pseudos-documents 
              fa_att_set(vv_iframe,"src",c_script_liens+itemLink);
              break;
            case "2": //  notes 
              fa_att_set(vv_iframe,"src",c_script_notes+'doc_cleunik='+itemLink);
              break;
            case "3": //  acteurs
              fa_att_set(vv_iframe,"src",c_script_fen_acteur+itemLink);
              break;
            case "4": //  interlocuteurs 
              fa_att_set(vv_iframe,"src",fa_visu_interlo()+"?vl_e_interlo_cleunik="+itemLink);
            	break;
			case "5": //  lien externe 
				fa_ouvre(itemLink);
				break;
			case "6":	//	action
				fa_att_set(vv_iframe,"src",c_script_fen_action+"vf_e_action_cleunik="+itemLink+"&vf_c_action=modifier&");
				break;
			case "7":	//	article
				fa_att_set(vv_iframe,"src",fa_visu_article()+'genre=tousss&vl_e_art_cleunik='+itemLink+"&");
				break;
			case "8":	//	documents
				fa_att_set(vv_iframe,"src",c_script_docum+itemLink);
				break;
			case "9":	//	dossiers
				fa_att_set(vv_iframe,"src",c_script_dossier+itemLink);
				break;
          }
          break;
        case 1: //  onglet détail du dossier
          break;
        case 2: //  onglet paramétrage d'une ligne
          break; 
      }
      //  On gère l'exception ici, car l'objet "ml_type" n'existe pour l'instant que dans la fenêtre "_graal_dossier_01.xul"
    } catch (e) {
      alert(e);
    }
}
function aae_pf_affiche_datas_notes(stream){
  var vl_c_datas= stream;
  fa_att_set("viewarea","src",fa_xml_get(vl_c_datas,'emplacement'));
}

function aae_pf_deletenode()
{
    var tree, node, item, index, ok;
    node = aae_pf_getselectednode(vf_tree);
    if(!node){ return; }
    var nodeID   = node.getAttribute("id");
    if(nodeID=="root"){
      // alert("$vl_c_mes02");
      return; 
    }
    if(!confirm("Confirmez-vous la suppression de cet élément?")){ return; }
    tree = fa_gid(vf_tree);
    index = tree.currentIndex;
    item = node.nextSibling;
    ok = node.parentNode.removeChild(node);
    ok = aae_pf_setselectednode(item);
    if(index<0) {return;} else{ tree.view.selection.select(index); }
}
function aae_pf_duplicatenode(){
    var node, item, ok;
    node = aae_pf_getselectednode(vf_tree);
    if(!node){ return; }
    var nodeID   = node.getAttribute("id");
    if(nodeID=="root"){
      //alert("$vl_c_mes03");
      return;
    }
    item = node.cloneNode(true);
    ok = node.parentNode.insertBefore(item,node.nextSibling);
    ok = aae_pf_setselectednode(item);
}

/*---- Move Nodes ----*/
function aae_pf_movenodeup()
{
    var node, nodeID, nodeType, prev, prevType, prevOpen, index, ok;
    node = aae_pf_getselectednode(vf_tree); if(!node){ return; }
    nodeID = node.getAttribute("id");
    nodeType = node.getAttribute("type"); if(!nodeType){ nodeType="0"; }
    if(nodeID=="root"){
      //alert("You can not move the root element.");
      return;
    }
    tree = fa_gid(vf_tree);
    index = tree.currentIndex;
    prev = node.previousSibling;
    if(!prev){
      //alert("$vl_c_mes04");
      return;
    }
    prevType = prev.getAttribute("type");
    prevOpen = prev.getAttribute("open");
    if(nodeType=="0" && prevType=="1"){
      //alert("Vous ne pouvez pas remonter plus haut cette ligne.");
      return;
    }
    if(prevOpen=="true"){ prev.setAttribute("open",false); } /* close to swap */
    index = tree.currentIndex;
    ok = node.parentNode.insertBefore(node,node.previousSibling);
    if(prevOpen=="true"){ prev.setAttribute("open",true); } /* open it again */
    if(index>0) { tree.view.selection.select(index-1); }
}
function aae_pf_movenodedown()
{
    var node, nodeID, nodeType, nodeOpen, next, nextType, nextOpen, index, ok;
    node = aae_pf_getselectednode(vf_tree); if(!node){ return; }
    nodeID = node.getAttribute("id");
    nodeType = node.getAttribute("type"); if(!nodeType){ nodeType="0"; }
    nodeOpen = node.getAttribute("open"); if(!nodeOpen){ nodeOpen="false"; }
    if(nodeID=="root"){
      alert("Vous ne pouvez pas descendre la racine du dossier.");
      return;
    }
    tree = fa_gid(vf_tree);
    index = tree.currentIndex;
    next = node.nextSibling;
    if(!next){
      //alert("$vl_c_mes05");
      return;
    }
    nextType = next.getAttribute("type"); if(!nextType){ nextType="0"; }
    nextOpen = next.getAttribute("open");
    if(nodeType=="1" && nextType=="0"){
      //alert("Vous ne pouvez descendre cette ligne plus bas.");
      return;
    }
    if(nodeOpen=="true"){ node.setAttribute("open",false); } /* close to swap */
    if(nextOpen=="true"){ next.setAttribute("open",false); } /* close to swap */
    index = tree.currentIndex;
    ok = node.parentNode.insertBefore(next,node);
    if(index>0) { tree.view.selection.select(index+1); }
    if(nodeOpen=="true"){ node.setAttribute("open",true); } /* open it again */
    if(nextOpen=="true"){ next.setAttribute("open",true); } /* open it again */
}
function aae_pf_promotenode(){
    var node, nodeID, nodeType, nodeOpen, parent, parentID, next, index, ok;
    node = aae_pf_getselectednode(vf_tree); if(!node){ return; }
    nodeID = node.getAttribute("id");
    nodeType = node.getAttribute("type"); if(!nodeType){ nodeType="0"; }
    nodeOpen = node.getAttribute("open"); if(!nodeOpen){ nodeOpen="false"; }
    if(nodeID=="root"){
      //alert("Vous ne pouvez pas déraciner ce dossier.");
      return;
    }
    tree = fa_gid(vf_tree);
    index = tree.currentIndex;
    parent = node.parentNode.parentNode;
    parentID = parent.getAttribute("id");
    if(parentID=="xml") {
      //alert("You can not promote to the XML directive.");
      return;
    }
    if(parentID=="root"){
      // alert("Vous ne pouvez pas déplacer cet élément dans ce sens.");
      return;
    }
    next = parent.nextSibling;
    if(next){ parent.parentNode.insertBefore(node,next); }
    else{ parent.parentNode.appendChild(node); }
    ok = aae_pf_setselectednode(node);
}
function aae_pf_demotenode(){
    var node, nodeID, nodeType, nodeOpen, prev, prevID, prevType, prevOpen, index, ok;
    node = aae_pf_getselectednode(vf_tree); 
		if(!node){
      //alert("ce n'est pas un noeud!!!");
      return true;
    }
    nodeID = node.getAttribute("id");
    nodeType = node.getAttribute("type"); if(!nodeType){ nodeType="0"; }
    nodeOpen = node.getAttribute("open"); if(!nodeOpen){ nodeOpen="false"; }
    if(nodeID=="root"){
      //alert("Vous ne pouvez pas déraciner ce dossier.");
      return true;
    }
    tree = fa_gid(vf_tree);
    index = tree.currentIndex;
    prev = node.previousSibling;
    if(!prev){
      //alert("$vl_c_mes06");
      return false;
    }
    prevID   = prev.getAttribute("id");
    prevType = prev.getAttribute("type"); if(!prevType){ prevType="0"; }
    prevOpen = prev.getAttribute("open");
    if(prevType!="0") {
      //alert("You can not demote when the parent is not an item.");
      return true;
    }
    if(!aae_pf_isnodecontainer(prev)){ aae_pf_makenodecontainer(prev); }
    if(prevOpen=="false"){ prev.setAttribute("open",true); }
    ok = prev.childNodes[1].appendChild(node);
    /*
		if(index>0) {
    	 tree.view.selection.select(index);
		} else {
			tree.view.selection.select(0);
		}
		*/
		if(index>0) { tree.view.selection.select(index); }
		return true;
}

/*---- View Source ----*/
function aae_pf_viewxml()
{
    var source = aae_pf_getsourcexml(vf_tree);
    var data   = "data:text/xml," + source;
    var view   = fa_gid("viewarea");
    //alert(source)
    //view.setAttribute("src",data);
}

/*---- DOM Utilities ----*/
function aae_pf_newemptynode(nodeType){
    var typeCode  = "e"+nodeType;
    var nodeName  = aae_pf_gettypelabel(nodeType);
    var nodeValue = "";
    var treeItem  = document.createElementNS(onlyxul,"treeitem");
    var treeRow   = document.createElementNS(onlyxul,"treerow");
    var treeCell1 = document.createElementNS(onlyxul,"treecell");
    var treeCell2 = document.createElementNS(onlyxul,"treecell");
    if(nodeType!="0"){ treeItem.setAttribute("type",nodeType); } /* Only if not an item */
    treeCell1.setAttribute("label",nodeName);
    treeCell1.setAttribute("properties",typeCode); // CSS trick
    treeCell2.setAttribute("label",nodeValue);
    treeRow.appendChild(treeCell1);
    treeRow.appendChild(treeCell2);
    treeItem.appendChild(treeRow);
    return treeItem;    
}
function aae_pf_gettypelabel(nodeType){
    var typeLabel="";
    switch(nodeType){
        case  0: typeLabel="Nouvelle ligne";   break;
        case  1: typeLabel="attribute"; break;
        case  2: typeLabel="comment";   break;
        case  3: typeLabel="directive"; break;
        default: typeLabel="Nouvelle ligne";   break;
    }
    
    return (prompt("Libellé",typeLabel));
    
    return typeLabel;
}
function aae_pf_isnodecontainer(node)
{
    return node.getAttribute("container")=="true";
}
function aae_pf_makenodecontainer(node)
{
    node.setAttribute("container","true");
    node.setAttribute("open","true");
    var treeChildren = document.createElementNS(onlyxul,"treechildren");
    node.appendChild(treeChildren);
}

function aae_pf_getsourcexml(controlID)
{
    var source = "";
    try{ source = aae_pf_serializetree(controlID); }
    catch(ex){ source="<error>"+ ex.message +"</error>"; }
    return source;
}
function aae_pf_serializetree(controlID){
    // Add xml directives
    var root = fa_gid(controlID);
    //var root = fa_gid("root");
    var dom  = document.createElementNS("","dossier");
    dom.setAttribute("label",root.firstChild.firstChild.getAttribute("label"));
    dom.setAttribute("properties",root.firstChild.firstChild.getAttribute("properties"));
    dom.setAttribute("url",root.firstChild.firstChild.getAttribute("url"));
    dom.setAttribute("id","root");
    dom.setAttribute("hidden",root.firstChild.firstChild.getAttribute("hidden"));
    dom.setAttribute("value",root.firstChild.firstChild.getAttribute("value"));
    dom.setAttribute("link",root.firstChild.firstChild.getAttribute("link"));
    var children = root.childNodes[1];
    if(children){ 
        var nextNode;
        for(var i=0;i<children.childNodes.length;i++){
            nextNode = children.childNodes[i];
            aae_pf_walkthedom(nextNode,dom);
        }
    }
    var parser = new XMLSerializer();
    var source = parser.serializeToString(dom);
    return source;
}
function aae_pf_walkthedom(node,dom){
    //  On ne passe pas dans cette procédure tant que l'on n'est pas au dernier niveau du noeud
    //  Le dernier niveau du noeud est le "treecell", enfant du "treerow", lui même enfant du "treeitem", lui même enfant du "treechildren" etc
    //  Utiliser l'inspecteur DOM pour visualiser l'arborescence    
    //  Tous les attributs sont en fait ceux du dernier niveau du noeud, c'est à dire le tree cell
    var newNode, newText;
    //  Comme on ne sait pas énumérer autoamtiquement les attributs, on appelle un par un ceux que l'on connait
    //  As we don't know how to automaticaly enumerate all the attributes, we call each of the one we know
    var nodelabel = node.firstChild.childNodes[0].getAttribute("label");
    var nodeproperties = node.firstChild.childNodes[0].getAttribute("properties");
    var nodeurl = node.firstChild.childNodes[0].getAttribute("url");
    var nodeid = node.firstChild.childNodes[0].getAttribute("id");
    //alert(nodeid + "-" + nodelabel)
    var nodehidden = node.firstChild.childNodes[0].getAttribute("hidden");
    var vl_value = node.firstChild.childNodes[0].getAttribute("value");
    var nodeLink  = "";
    if(node.firstChild.childNodes[1]){
        nodeLink = node.firstChild.childNodes[1].getAttribute("label");
    }
    newNode = document.createElementNS("","item");
    if(nodelabel){ newNode.setAttribute("label",nodelabel); }
    if(nodeLink ){ newNode.setAttribute("link" ,nodeLink ); }
    if(nodeproperties ){ newNode.setAttribute("properties" ,nodeproperties ); }
    if(nodeurl ){ newNode.setAttribute("url" ,nodeurl ); }
    if(nodeid ){ newNode.setAttribute("id" ,nodeid ); }
    if(nodehidden ){ newNode.setAttribute("hidden" ,nodehidden ); }
    if(vl_value) { newNode.setAttribute("value" ,vl_value ); }
    dom.appendChild(newNode);
    var isContainer = node.getAttribute("container");
    if(isContainer=="true"){ 
        var children = node.childNodes[1];
        var nextNode;
        for(var i=0;i<children.childNodes.length;i++){
            nextNode = children.childNodes[i];
            aae_pf_walkthedom(nextNode,newNode);
        }
    }
}
/*---- Utilities ----*/
function aae_pf_getselectednode(controlID){
    var tree = document.getElementById(controlID);
    if(tree.currentIndex<0){ return null; }
    var selected = tree.contentView.getItemAtIndex(tree.currentIndex);
    return selected;
}
function aae_pf_setselectednode(node)
{
    //
}
]]></script>
END;
?>
