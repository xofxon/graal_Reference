<?php
require_once('tcpdf/tcpdf.php');
require("_graal_fonctions_diverses.php");
require("_graal_fonctions_mysql.php");
$barcode_style = 0;
//$barcode_style |= BCS_ALIGN_CENTER;
$barcode_style |= BCS_IMAGE_PNG;
$barcode_style |= BCS_TRANSPARENT;
//$barcode_style |= BCS_BORDER;
$barcode_style |= BCS_DRAW_TEXT;
$barcode_style |= BCS_STRETCH_TEXT;

// Xavier Nicolay 2004
// Version 1.01
//  Récupéré ici le 24 mai 2008
//http://trac.vtiger.com/cgi-bin/trac.cgi/browser/vtigercrm/branches/5.0.4/include/tcpdf/pdf.php
class _graal_TCPDF extends TCPDF {
// private variables
var $columns;
var $format;
var $angle=0;
//var $font_defaut="FreeSerif";
// private functions

function _graal_RoundedRect($x, $y, $w, $h, $r, $style = '')
{
	$k = $this->k;
	$hp = $this->h;
	if($style=='F')
		$op='f';
	elseif($style=='FD' or $style=='DF')
		$op='B';
	else
		$op='S';
	$MyArc = 4/3 * (sqrt(2) - 1);
	$this->_out(sprintf('%.2f %.2f m',($x+$r)*$k,($hp-$y)*$k ));
	$xc = $x+$w-$r ;
	$yc = $y+$r;
	$this->_out(sprintf('%.2f %.2f l', $xc*$k,($hp-$y)*$k ));

	$this->_Arc($xc + $r*$MyArc, $yc - $r, $xc + $r, $yc - $r*$MyArc, $xc + $r, $yc);
	$xc = $x+$w-$r ;
	$yc = $y+$h-$r;
	$this->_out(sprintf('%.2f %.2f l',($x+$w)*$k,($hp-$yc)*$k));
	$this->_Arc($xc + $r, $yc + $r*$MyArc, $xc + $r*$MyArc, $yc + $r, $xc, $yc + $r);
	$xc = $x+$r ;
	$yc = $y+$h-$r;
	$this->_out(sprintf('%.2f %.2f l',$xc*$k,($hp-($y+$h))*$k));
	$this->_Arc($xc - $r*$MyArc, $yc + $r, $xc - $r, $yc + $r*$MyArc, $xc - $r, $yc);
	$xc = $x+$r ;
	$yc = $y+$r;
	$this->_out(sprintf('%.2f %.2f l',($x)*$k,($hp-$yc)*$k ));
	$this->_Arc($xc - $r, $yc - $r*$MyArc, $xc - $r*$MyArc, $yc - $r, $xc, $yc - $r);
	$this->_out($op);
}

function _Arc($x1, $y1, $x2, $y2, $x3, $y3)
{
	$h = $this->h;
	$this->_out(sprintf('%.2f %.2f %.2f %.2f %.2f %.2f c ', $x1*$this->k, ($h-$y1)*$this->k,
						$x2*$this->k, ($h-$y2)*$this->k, $x3*$this->k, ($h-$y3)*$this->k));
}


function Rotate($angle,$x=-1,$y=-1)
{
	if($x==-1)
		$x=$this->x;
	if($y==-1)
		$y=$this->y;
	if($this->angle!=0)
		$this->_out('Q');
	$this->angle=$angle;
	if($angle!=0)
	{
		$angle*=M_PI/180;
		$c=cos($angle);
		$s=sin($angle);
		$cx=$x*$this->k;
		$cy=($this->h-$y)*$this->k;
		$this->_out(sprintf('q %.5f %.5f %.5f %.5f %.2f %.2f cm 1 0 0 1 %.2f %.2f cm',$c,$s,-$s,$c,$cx,$cy,-$cx,-$cy));
	}
}
function _endpage()
{
	if($this->angle!=0)
	{
		$this->angle=0;
		$this->_out('Q');
	}
	parent::_endpage();
}

// public functions
function sizeOfText( $text, $largeur )
{
	if ($largeur==0) {return 0;}
  $index    = 0;
	$nb_lines = 0;
	$loop     = TRUE;
	while ( $loop )
	{
		$pos = strpos($text, "\n");
		if (!$pos)
		{
			$loop  = FALSE;
			$line = $text;
		}
		else
		{
			$line  = substr( $text, $index, $pos);
			$text = substr( $text, $pos+1 );
		}
		$length = floor( $this->GetStringWidth( $line ) );
		$res = 1 + floor( $length / $largeur) ;
		$nb_lines += $res;
	}
	return $nb_lines;
}

// addImage
// Default will place vtiger in the top left corner
function addImage( $logo_name, $location=array('10','10','0','0') ) {
	if($logo_name)//error checking just in case, by OpenCRM
	{
		$x1 = $location[0];
		$y1 = $location[1];
		$stretchx = $location[2];
		$stretchy = $location[3];
		$this->Image('test/logo/'.$logo_name,$x1,$y1,$stretchx,$stretchy);
	}
}

// Company
function addCompany( $nom, $address, $location='' )
{
	$x1 = $location[0];
	$y1 = $location[1];
	//Positionnement en bas
	$this->SetXY( $x1, $y1 );
	$this->SetFont('Arial','B',12);
	$length = $this->GetStringWidth( $nom );
	$this->Cell( $length, 2, $nom);
	$this->SetXY( $x1, $y1 + 4 );
	$this->SetFont('Arial','',10);
	$length = $this->GetStringWidth( $address );
	//Coordonnées de la société
	$lines = $this->sizeOfText( $address, $length) ;
	$this->MultiCell($length, 4, $address);
}

// bubble blocks
function title ($label, $total, $position)
{
	$r1  = $position[0];
	$r2  = $r1 + 19 + $position[2] ;
	$y1  = $position[1];
	$y2  = $y1;
	$mid = $y1 + ($y2 / 2);
	$width=10;
	$this->SetFillColor(192);
	$this->_graal_RoundedRect($r1-16, $y1-1, 52, $y2+1, 2.5, 'DF');
	$this->SetXY( $r1 + 4, $y1+1 );
	$this->SetFont($this->font_defaut, "B", 15);
	$this->Cell($width,5, $label." ".$total, 0, 0, "C");
}

// text block, non-wrapped
function addTextBlock( $title,$text,$positions )
{
	$r1  = $positions[0];
	$y1  = $positions[1];
	$this->SetXY( $r1, $y1);
	$this->SetFont($this->font_defaut, "B", 10);
	$this->Cell( $positions[2], 4,$title);
	$this->SetXY( $r1, $y1+4);
	$this->SetFont($this->font_defaut, "", 10);
	$this->MultiCell( $positions[2], 4, $text);
}

function tableWrapper($position)
{
	$r1  = $position[0];
	$r2  = $r1 + 19 + $position[2] ;
	$y1  = $position[1];
	if($position[3])
		$y2  = $position[3];
	else
		$y2  = 17;

	$mid = $y1 + (13 / 2);
	$width=10;
	$this->_graal_RoundedRect($r1, $y1, ($r2 - $r1), $y2, 4.5, 'D');
	$this->Line( $r1, $mid, $r2, $mid);
	$this->SetXY( $r1 + ($r2-$r1)/2 - 3, $y1+3 );
	$this->SetXY( $r1 + ($r2-$r1)/2 - 5, $y1 + 9 );
}

function addBubble($page,$title,$position)
{
	$r1  = $position[0];
	$r2  = $r1 + 19 + $position[2] ;
	$y1  = $position[1];
	if($position[3])
		$y2  = 17*$position[3];
	else
		$y2  = 17;

	$mid = $y1 + (19 / 2);
	$width=10;
	$this->_graal_RoundedRect($r1, $y1, ($r2 - $r1), $y2, 4.5, 'D');
	$this->Line( $r1, $mid, $r2, $mid);
	$this->SetXY( $r1 + ($r2-$r1)/2 - 3, $y1+3 );
	$this->SetFont($this->font_defaut, "B", 10);
	$this->Cell($width,5, $title, 0, 0, "C");
	$this->SetXY( $r1 + ($r2-$r1)/2 - 5, $y1 + 9 );
	$this->SetFont($this->font_defaut, "", 10);
	$this->MultiCell($width,5,$page, 0,0, "C");
}

// bubble blocks
function addBubbleBlock ($page, $title, $position)
{
	$r1  = $position[0];
	$r2  = $r1 + 19 + $position[2] ;
	$y1  = $position[1];
	$y2  = 17;

	$mid = $y1 + ($y2 / 2);
	$width=10;
	$this->_graal_RoundedRect($r1, $y1, ($r2 - $r1), $y2, 4.5, 'D');
	$this->Line( $r1, $mid, $r2, $mid);
	$this->SetXY( $r1 + ($r2-$r1)/2 - 5, $y1+3 );
	$this->SetFont($this->font_defaut, "B", 10);
	$this->Cell($width,5, $title, 0, 0, "C");
	$this->SetXY( $r1 + ($r2-$r1)/2 - 5, $y1 + 9 );
	$this->SetFont($this->font_defaut, "", 10);
	$this->Cell($width,5,$page, 0,0, "C");
}

// record blocks
function addRecBlock( $data, $title, $postion )
{
	$lengthtitle = strlen($title);
	$lengthdata = strlen($data);
	$length=$lengthtitle;
	$r1  = $postion[0];
	$r2  = $r1 + 40 + $length;
	$y1  = $postion[1];
	$y2  = $y1+10;
	$mid = $y1 + (($y2-$y1) / 2);

	$this->_graal_RoundedRect($r1, $y1, ($r2 - $r1), ($y2-$y1), 2.5, 'D');
	$this->Line( $r1, $mid, $r2, $mid);
	$this->SetXY( $r1 + ($r2-$r1)/2 -5 , $y1+1 );
	$this->SetFont($this->font_defaut, "B", 10);
	$this->Cell(10,4, $title, 0, 0, "C");
	$this->SetXY( $r1 + ($r2-$r1)/2 -5 , $y1 + 5 );
	$this->SetFont($this->font_defaut, "", 10);
	$this->Cell(10,4,$data, 0, 0, "C");
}

// description blocks
function addDescBlock( $data, $title, $position )
{
	$lengthtitle = strlen($title);
	$lengthdata= $position[3];

	$length=$position[2];
	$r1  = $position[0];
	$r2  = $r1 + 40 + $length;
	$y1  = $position[1];
	$y2  = $y1+10;
	$mid = $y1 + (($y2-$y1) / 2);

	$this->_graal_RoundedRect($r1,$y1, ($length + 40), ($lengthdata/140*30), 2.5, 'D');
	$this->Line( $r1, $mid, $r2, $mid);

	$this->SetXY( $position[0]+2 , $y1 + 1 );
	$this->SetFont($this->font_defaut, "B", 10);
	$this->Cell(10,4, $title);

	$this->SetXY( $position[0]+2 , $y1 + 6 );
	$this->SetFont($this->font_defaut, "", 10);
	$this->MultiCell(($length+36),4,$data);
}

function drawLine($positions)
{
	$x=$positions[0];
	$y=$positions[1];
	$width=$positions[2];
	$this->Line( $x, $y, $x+$width, $y);
}

// add columns to table
function addCols( $tab ,$positions ,$bottom, $taxtype = 'group')
{
	global $columns,$app_strings;

	$r1  = 10;
	$r2  = $this->w - ($r1 * 2) ;
	$y1  = 80;
	$x1  = $positions[1];
	$y2  = $bottom;
	$this->SetXY( $r1, $y1 );
	$this->SetFont($this->font_defaut, "", 10);

	$colX = $r1;
	$columns = $tab;
	while ( list( $lib, $pos ) = each ($tab) )
	{
		$this->SetXY( $colX, $y1+3 );
		$this->Cell( $pos, 1, $app_strings[$lib], 0, 0, "C");
		$colX += $pos;
		switch($lib) {
	  		case 'Total':
			break;
	  		case 'Qty':
	  		case 'Price':
				if($taxtype == "individual")
					$this->Line( $colX, $y1, $colX, (($y1+$y2)-37));
				else
					$this->Line( $colX, $y1, $colX, (($y1+$y2)-43));
			break;
	  		default:
				if($taxtype == "individual" && $lib == 'Discount')
					$this->Line( $colX, $y1, $colX, (($y1+$y2)-37));
				else
					$this->Line( $colX, $y1, $colX, ($y1+$y2));
	  		break;
		}
	}
}
function addCols_00( $tab,$xyz=array("10","60","50") ){
	// La somme des colonnes ne doit pas faire plus de 190 mm pour du portrait et 267 en paysage
	// xyz -> x-> x, y->y, z -> bas du tableau (hauteur page - z - début tableau)
	$r1=$xyz[0];
	$r2  = $this->w - ($r1 * 2) ;
	$y1=$xyz[1];
	$y2  = $this->h - $xyz[2] - $xyz[1];
	//$y2=$xyz[2];
	$this->SetXY( $r1, $y1 );
	$this->Rect( $r1, $y1, $r2, $y2, "D");
	$this->Line( $r1, $y1+6, $r1+$r2, $y1+6);
	$colX = $r1;

	while ( list( $lib, $pos ) = each ($tab) )
	{
		$this->SetXY( $colX, $y1+2 );
		$this->Cell( $pos, 1, $lib, 0, 0, "C");
		$colX += $pos;
		$this->Line( $colX, $y1, $colX, $y1+$y2);
	}
	return y2;
}
function addCols_01( $tab,$xyz=array("10","60","50") ){
	// La somme des colonnes ne doit pas faire plus de 190 mm pour du portrait et 267 en paysage
	// xyz -> x-> x, y->y, z -> bas du tableau (hauteur page - z - début tableau)
	$r1=$xyz[0];
	$r2  = $this->w - ($r1 * 2) ;
	$y1=$xyz[1];
	$y2  = $this->h - $xyz[2] - $y1;
	$this->SetXY( $r1, $y1 );
	$this->_graal_RoundedRect( $r1, $y1, $r2, $y2,2.5, "D");
	$this->Line( $r1, $y1+6, $r1+$r2, $y1+6);
	$colX = $r1;
$nb_col=count($tab); 
$nb_traits=0;
	while ( list( $lib, $pos ) = each ($tab) )
	{
		$this->SetXY( $colX, $y1+2 );
		//$this->Cell( $pos, 1, $lib, 0, 0, "C");
		$this->Cell( $pos, 1, $lib, 0, 0, "C",0,"",1);
		//$pdf->Cell(0, 10, 'TEST CELL STRETCH: scaling', 1, 1, 'C', 0, '', 1);
		$colX += $pos;
		$nb_traits++;
		if ($nb_traits<$nb_col){
			$this->Line( $colX, $y1, $colX, $y1+$y2);
		}
	}
}
function addCols_02( $tab,$xyzh=array("10","60","50","23") ){
	// La somme des colonnes ne doit pas faire plus de 190 mm pour du portrait et 267 en paysage
	// xyz -> x-> x, y->y, z -> bas du tableau (hauteur page - z - début tableau)
	$r1=$xyzh[0];
	$r2  = $this->w - ($r1 * 2) ;
	$y1=$xyz[1];
	$y2  = $this->h - $xyzh[2] - $y1;
	$this->SetXY( $r1, $y1 );
	$this->_graal_RoundedRect( $r1, $y1, $r2, $xyzh[3],2.5, "D");
	$this->Line( $r1, $y1+6, $r1+$r2, $y1+6);
	$colX = $r1;
$nb_col=count($tab); 
$nb_traits=0;
	while ( list( $lib, $pos ) = each ($tab) )
	{
		$this->SetXY( $colX, $y1+2 );
		//$this->Cell( $pos, 1, $lib, 0, 0, "C");
		$this->Cell( $pos, 1, $lib, 0, 0, "C",0,"",1);
		//$pdf->Cell(0, 10, 'TEST CELL STRETCH: scaling', 1, 1, 'C', 0, '', 1);
		$colX += $pos;
		$nb_traits++;
		if ($nb_traits<$nb_col){
			$this->Line( $colX, $y1, $colX, $y1+$y2);
		}
	}
}
function addCols_03( $tab,$xyz=array("10","60","50") ){
	// La somme des colonnes ne doit pas faire plus de 190 mm pour du portrait et 267 en paysage
	// xyz -> x-> x, y->y, z -> bas du tableau (hauteur page - z - début tableau)
	$r1=$xyz[0];
	$r2  = $this->w - ($r1 * 2) ;
	$y1=$xyz[1];
	$y2  = $xyz[2] - $y1;
	$y2  = $xyz[2];
	$this->SetXY( $r1, $y1 );
	$this->Rect( $r1, $y1, $r2, $y2, "D");
	$this->Line( $r1, $y1+6, $r1+$r2, $y1+6);
	$colX = $r1;

	while ( list( $lib, $pos ) = each ($tab) )
	{
		$this->SetXY( $colX, $y1+2 );
		$this->Cell( $pos, 1, $lib, 0, 0, "C");
		$colX += $pos;
		$this->Line( $colX, $y1, $colX, $y1+$y2);
	}
}
// mémorise le format (gauche, centre, droite) d'une colonne
function addLineFormat_00( $tab,$colonnes )
{
	global $format;
	
	while ( list( $lib, $pos ) = each ($colonnes) )
	{
		if ( isset( $tab["$lib"] ) )
			$format[ $lib ] = $tab["$lib"];
	}
}

function addLineFormat( $tab )
{
	global $format, $columns;

	while ( list( $lib, $pos ) = each ($columns) )
	{
		if ( isset( $tab["$lib"] ) )
			$format[ $lib ] = $tab["$lib"];
	}
}

function addProductLine( $line, $tab, $totals='' )
{
	global $columns, $format;

	$ordonnee     = 10;
	$maxSize      = $line;

	reset( $columns );
	while ( list( $lib, $pos ) = each ($columns) )
	{
		$longCell = $pos -2;
		$text    = $tab[ $lib ];
		$formText  = $format[ $lib ];
		$this->SetXY( $ordonnee, $line);
		$this->MultiCell( $longCell, 3 , $text, 3, $formText);
		if ( $maxSize < ($this->GetY()  ) )
			$maxSize = $this->GetY() ;
		$ordonnee += $pos;
	}
	return ( $maxSize - $line );
}

function addLine_00( $y, $tab,$cols, $format,$font,$type )
{

	$ordonnee     = 10;
	$maxSize      = $y;
  $hauteur_codebarre=0;
	reset( $cols );
	while ( list( $lib, $pos ) = each ($cols) )
	{
		switch ($type[ $lib ]) {
      case "Texte": //  Texte
        $longCell  = $pos -2;
    		$texte     = $tab[ $lib ];
    		$formText  = $format[ $lib ];
    		$this->SetXY( $ordonnee, $y-1);
    		$col_font=$font[ $lib ];
    		$this->SetFont( $col_font[0], $col_font[1],$col_font[2]);
    		$this->MultiCell( $longCell, 4 , $texte, 0, $formText);
    		if ( $maxSize < ($this->GetY()  ) )
    			$maxSize = $this->GetY() ;
    		$ordonnee += $pos;
    	  break;
			case "Texte_fixe": //  Texte sans saut de ligne
        $longCell  = $pos -2;
    		$texte     = $tab[ $lib ];
    		$formText  = $format[ $lib ];
    		$this->SetXY( $ordonnee, $y-1);
    		$col_font=$font[ $lib ];
    		$this->SetFont( $col_font[0], $col_font[1],$col_font[2]);
				$taille_texte=ceil($this->GetStringWidth($texte));
				if ($taille_texte> $cols[$lib] ){
					$nouvelle_taille=floor($col_font[2]*($cols[$lib]/$taille_texte));
					$this->SetFont( $col_font[0], $col_font[1],$nouvelle_taille-1);
				}
	    	$this->MultiCell( $longCell, 4 , $texte, 0, $formText);
    		if ( $maxSize < ($this->GetY()  ) )
    			$maxSize = $this->GetY() ;
    		$ordonnee += $pos;
    	  break;				
    	case "CB39E":  //  Code barre 39 Etendu
    	   $hauteur=10;
         $this->writeBarcode($this->GetX(), $this->GetY(), 100, 10, "C39E", $barcode_style, false, 2, $tab[ $lib ]);
    		if ( $maxSize < ($this->GetY()  ) )
    			$maxSize = $this->GetY() ;
    		$ordonnee += $pos;
        $hauteur_codebarre=$hauteur;
    	 break;
    	case "CB39":  //  Code barre 39
    	   $hauteur=10;
         $this->writeBarcode($ordonnee+10, $y, 100, $hauteur, "C39", $barcode_style, false, 2, $tab[ $lib ]);
    		if ( $maxSize < ($this->GetY()  ) )
    			$maxSize = $this->GetY() ;
    		$ordonnee += $pos;
        $hauteur_codebarre=$hauteur;
    	 break;

		}
	}
	return ( $maxSize - $y + $hauteur_codebarre);
}

function addLine_01( $y, $line_01,$cols_01,$format_01,$fonts_01,$type_01 ){
	/*
echo("*************************************** ".$this->GetX()."-".$this->GetY()." ******************************a");
	//echo($line_01[0]);
	var_dump($cols_01);
echo("b*************************************** au revoir ******************************");
*/
	$ordonnee     = 10;
	$maxSize      = $y;
  $hauteur_codebarre=0;
	reset( $cols_01 );
	while ( list( $lib, $pos ) = each ($cols_01) )	{
		echo "z".$lib."-".$pos."-".$y;
        $longCell  = $pos -2;
    		$texte     = $line_01[ $lib ];
    		echo "*>".$texte."<*";
    		$formText  = $format_01[ $lib ];
    		echo "->".$formText."<-";
    		$this->SetXY( $ordonnee, $y-1);
    		$col_font=$fonts_01[ $lib ];
    		$this->SetFont( $col_font[0], $col_font[1],$col_font[2]);
    		$this->MultiCell( $longCell, 4 , $texte, 0, $formText);
    		if ( $maxSize < ($this->GetY()  ) )
    			$maxSize = $this->GetY() ;
    		$ordonnee += $pos;
    	 }
   	//echo("-c $maxSize -");
	return ( $maxSize - $y + $hauteur_codebarre);
	
}




function addtotauxRec($names, $totaux, $positions,$nblignes=1,$largeur){
	//$this->SetFont( "dejavusans", "B", 8);
	$r1  = $positions[0];
	$r2  = $r1 + 94;
	$y1  = $positions[1];
	$y2  = $y1+(10)+(5*($nblignes-1));
	$this->_graal_RoundedRect($r1, $y1, ($r2 - $r1), ($y2-$y1), 2.5, 'D');
	$this->Line( $r1, $y1+4, $r2, $y1+4);
	$this->Line( $r1+27, $y1, $r1+27, $y2);  // 2° trait
	$this->Line( $r1+49, $y1, $r1+49, $y2);  // 3° trait
	$this->Line( $r1+60, $y1, $r1+60, $y2);  // 4° trait
	$this->Line( $r1+75, $y1, $r1+75, $y2);  // 5° trait
	$this->SetXY( $r1+2,  $y1);$this->MultiCell($largeur[0], 4, $names[0],0,'C');
	$this->SetXY( $r1+25, $y1);$this->MultiCell($largeur[1], 4, $names[1],0,'C');
	$this->SetXY( $r1+45, $y1);$this->MultiCell($largeur[2], 4, $names[2],0,'C');
	$this->SetXY( $r1+55, $y1);$this->MultiCell($largeur[3], 4, $names[3],0,'C');
	$this->SetXY( $r1+70, $y1);$this->MultiCell($largeur[4], 4, $names[4],0,'C');
  //  Première ligne
	$this->SetXY( $r1+1,  $y1+5 );$this->MultiCell($largeur[0], 4, $totaux[0],0,'L');
	$this->SetXY( $r1+23, $y1+5 );$this->MultiCell($largeur[1], 4, sprintf("%01.2f", $totaux[ 1]),0,'R');
	$this->SetXY( $r1+42, $y1+5 );$this->MultiCell($largeur[2], 4, sprintf("%01.2f", $totaux[ 2]),0,'R');
	$this->SetXY( $r1+45, $y1+5 );$this->MultiCell($largeur[3], 4, sprintf("%01.2f", $totaux[ 3]),0,'R');
	$this->SetXY( $r1+70, $y1+5 );$this->MultiCell($largeur[4], 4, sprintf("%01.2f", $totaux[ 4]),0,'R');
  if ($nblignes>1) {
    $y1+=5;
  	$this->SetXY( $r1+1,  $y1+5 );$this->MultiCell($largeur[0], 4, $totaux[ 5],0,'L');
		$this->SetXY( $r1+23, $y1+5 );$this->MultiCell($largeur[1], 4, sprintf("%01.2f", $totaux[ 6]),0,'R');
		$this->SetXY( $r1+42, $y1+5 );$this->MultiCell($largeur[2], 4, sprintf("%01.2f", $totaux[ 7]),0,'R');
		$this->SetXY( $r1+45, $y1+5 );$this->MultiCell($largeur[3], 4, sprintf("%01.2f", $totaux[ 8]),0,'R');
		$this->SetXY( $r1+70, $y1+5 );$this->MultiCell($largeur[4], 4, sprintf("%01.2f", $totaux[ 9]),0,'R');
  }
  if ($nblignes>2) {
    $y1+=5;
  	$this->SetXY( $r1+1,  $y1+5 );$this->MultiCell($largeur[0], 4, $totaux[10],0,'L');
		$this->SetXY( $r1+23, $y1+5 );$this->MultiCell($largeur[1], 4, sprintf("%01.2f", $totaux[11]),0,'R');
		$this->SetXY( $r1+42, $y1+5 );$this->MultiCell($largeur[2], 4, sprintf("%01.2f", $totaux[12]),0,'R');
		$this->SetXY( $r1+45, $y1+5 );$this->MultiCell($largeur[3], 4, sprintf("%01.2f", $totaux[13]),0,'R');
		$this->SetXY( $r1+70, $y1+5 );$this->MultiCell($largeur[4], 4, sprintf("%01.2f", $totaux[14]),0,'R');
  }
  if ($nblignes>3) {
    $y1+=5;
  	$this->SetXY( $r1+1,  $y1+5 );$this->MultiCell($largeur[0], 4, $totaux[15],0,'L');
		$this->SetXY( $r1+23, $y1+5 );$this->MultiCell($largeur[1], 4, sprintf("%01.2f", $totaux[16]),0,'R');
		$this->SetXY( $r1+42, $y1+5 );$this->MultiCell($largeur[2], 4, sprintf("%01.2f", $totaux[17]),0,'R');
		$this->SetXY( $r1+45, $y1+5 );$this->MultiCell($largeur[3], 4, sprintf("%01.2f", $totaux[18]),0,'R');
		$this->SetXY( $r1+70, $y1+5 );$this->MultiCell($largeur[4], 4, sprintf("%01.2f", $totaux[19]),0,'R');
  }
  if ($nblignes>4) {
    $y1+=5;
  	$this->SetXY( $r1+1,  $y1+5 );$this->MultiCell($largeur[0], 4, $totaux[20],0,'L');
		$this->SetXY( $r1+23, $y1+5 );$this->MultiCell($largeur[1], 4, sprintf("%01.2f", $totaux[21]),0,'R');
		$this->SetXY( $r1+42, $y1+5 );$this->MultiCell($largeur[2], 4, sprintf("%01.2f", $totaux[22]),0,'R');
		$this->SetXY( $r1+45, $y1+5 );$this->MultiCell($largeur[3], 4, sprintf("%01.2f", $totaux[23]),0,'R');
		$this->SetXY( $r1+70, $y1+5 );$this->MultiCell($largeur[4], 4, sprintf("%01.2f", $totaux[24]),0,'R');
  }
  if ($nblignes>5) {
    $y1+=5;
  	$this->SetXY( $r1+1,  $y1+5 );$this->MultiCell($largeur[0], 4, $totaux[25],0,'L');
		$this->SetXY( $r1+23, $y1+5 );$this->MultiCell($largeur[1], 4, sprintf("%01.2f", $totaux[26]),0,'R');
		$this->SetXY( $r1+42, $y1+5 );$this->MultiCell($largeur[2], 4, sprintf("%01.2f", $totaux[27]),0,'R');
		$this->SetXY( $r1+45, $y1+5 );$this->MultiCell($largeur[3], 4, sprintf("%01.2f", $totaux[28]),0,'R');
		$this->SetXY( $r1+70, $y1+5 );$this->MultiCell($largeur[4], 4, sprintf("%01.2f", $totaux[29]),0,'R');
  }


/*
	$this->SetFont( "dejavusans", "B", 6);
	$this->SetXY( $r1+90, $y2 - 8 );
	$this->SetFont( "dejavusans", "", 10);
*/
}
function addtotauxRec_frla($names, $totaux, $positions,$nblignes=1,$largeur){
	//$this->SetFont( "dejavusans", "B", 8);
	$r1  = $positions[0];
	$r2  = $r1 + 94;
	$y1  = $positions[1];
	$y2  = $y1+(10)+(5*($nblignes-1));
	$this->_graal_RoundedRect($r1, $y1, ($r2 - $r1), ($y2-$y1), 2.5, 'D');
	
	$this->Line( $r1, $y1+4, $r2, $y1+4);
	$this->Line( $r1+32, $y1, $r1+32, $y2);  // 2° trait
	$this->Line( $r1+50, $y1, $r1+50, $y2);  // 3° trait
	$this->Line( $r1+60, $y1, $r1+60, $y2);  // 4° trait
	$this->Line( $r1+75, $y1, $r1+75, $y2);  // 5° trait
	$this->SetXY( $r1+2,  $y1);$this->MultiCell($largeur[0], 4, $names[0],0,'C');
	$this->SetXY( $r1+30, $y1);$this->MultiCell($largeur[1], 4, $names[1],0,'C');
	$this->SetXY( $r1+45, $y1);$this->MultiCell($largeur[2], 4, $names[2],0,'C');
	$this->SetXY( $r1+55, $y1);$this->MultiCell($largeur[3], 4, $names[3],0,'C');
	$this->SetXY( $r1+70, $y1);$this->MultiCell($largeur[4], 4, $names[4],0,'C');
  //  Première ligne
	$this->SetXY( $r1+1,  $y1+5 );$this->MultiCell($largeur[0], 4, $totaux[0],0,'L');
	$this->SetXY( $r1+30, $y1+5 );$this->MultiCell($largeur[1], 4, sprintf("%01.2f", $totaux[ 1]),0,'R');
	$this->SetXY( $r1+42, $y1+5 );$this->MultiCell($largeur[2], 4, sprintf("%01.2f", $totaux[ 2]),0,'R');
	$this->SetXY( $r1+45, $y1+5 );$this->MultiCell($largeur[3], 4, sprintf("%01.2f", $totaux[ 3]),0,'R');
	$this->SetXY( $r1+70, $y1+5 );$this->MultiCell($largeur[4], 4, sprintf("%01.2f", $totaux[ 4]),0,'R');
  if ($nblignes>1) {
    $y1+=5;
  	$this->SetXY( $r1+1,  $y1+5 );$this->MultiCell($largeur[0], 4, $totaux[ 5],0,'L');
		$this->SetXY( $r1+30, $y1+5 );$this->MultiCell($largeur[1], 4, sprintf("%01.2f", $totaux[ 6]),0,'R');
		$this->SetXY( $r1+42, $y1+5 );$this->MultiCell($largeur[2], 4, sprintf("%01.2f", $totaux[ 7]),0,'R');
		$this->SetXY( $r1+45, $y1+5 );$this->MultiCell($largeur[3], 4, sprintf("%01.2f", $totaux[ 8]),0,'R');
		$this->SetXY( $r1+70, $y1+5 );$this->MultiCell($largeur[4], 4, sprintf("%01.2f", $totaux[ 9]),0,'R');
  }
  if ($nblignes>2) {
    $y1+=5;
  	$this->SetXY( $r1+1,  $y1+5 );$this->MultiCell($largeur[0], 4, $totaux[10],0,'L');
		$this->SetXY( $r1+30, $y1+5 );$this->MultiCell($largeur[1], 4, sprintf("%01.2f", $totaux[11]),0,'R');
		$this->SetXY( $r1+42, $y1+5 );$this->MultiCell($largeur[2], 4, sprintf("%01.2f", $totaux[12]),0,'R');
		$this->SetXY( $r1+45, $y1+5 );$this->MultiCell($largeur[3], 4, sprintf("%01.2f", $totaux[13]),0,'R');
		$this->SetXY( $r1+70, $y1+5 );$this->MultiCell($largeur[4], 4, sprintf("%01.2f", $totaux[14]),0,'R');
  }
  if ($nblignes>3) {
    $y1+=5;
  	$this->SetXY( $r1+1,  $y1+5 );$this->MultiCell($largeur[0], 4, $totaux[15],0,'L');
		$this->SetXY( $r1+30, $y1+5 );$this->MultiCell($largeur[1], 4, sprintf("%01.2f", $totaux[16]),0,'R');
		$this->SetXY( $r1+42, $y1+5 );$this->MultiCell($largeur[2], 4, sprintf("%01.2f", $totaux[17]),0,'R');
		$this->SetXY( $r1+45, $y1+5 );$this->MultiCell($largeur[3], 4, sprintf("%01.2f", $totaux[18]),0,'R');
		$this->SetXY( $r1+70, $y1+5 );$this->MultiCell($largeur[4], 4, sprintf("%01.2f", $totaux[19]),0,'R');
  }
  if ($nblignes>4) {
    $y1+=5;
  	$this->SetXY( $r1+1,  $y1+5 );$this->MultiCell($largeur[0], 4, $totaux[20],0,'L');
		$this->SetXY( $r1+30, $y1+5 );$this->MultiCell($largeur[1], 4, sprintf("%01.2f", $totaux[21]),0,'R');
		$this->SetXY( $r1+42, $y1+5 );$this->MultiCell($largeur[2], 4, sprintf("%01.2f", $totaux[22]),0,'R');
		$this->SetXY( $r1+45, $y1+5 );$this->MultiCell($largeur[3], 4, sprintf("%01.2f", $totaux[23]),0,'R');
		$this->SetXY( $r1+70, $y1+5 );$this->MultiCell($largeur[4], 4, sprintf("%01.2f", $totaux[24]),0,'R');
  }
  if ($nblignes>5) {
    $y1+=5;
  	$this->SetXY( $r1+1,  $y1+5 );$this->MultiCell($largeur[0], 4, $totaux[25],0,'L');
		$this->SetXY( $r1+30, $y1+5 );$this->MultiCell($largeur[1], 4, sprintf("%01.2f", $totaux[26]),0,'R');
		$this->SetXY( $r1+42, $y1+5 );$this->MultiCell($largeur[2], 4, sprintf("%01.2f", $totaux[27]),0,'R');
		$this->SetXY( $r1+45, $y1+5 );$this->MultiCell($largeur[3], 4, sprintf("%01.2f", $totaux[28]),0,'R');
		$this->SetXY( $r1+70, $y1+5 );$this->MultiCell($largeur[4], 4, sprintf("%01.2f", $totaux[29]),0,'R');
  }

}
function addtotauxRec_Remise($names, $totaux, $positions,$nblignes=1,$largeur){
	//$this->SetFont( "dejavusans", "B", 8);
	$r1  = $positions[0];
	$r2  = $r1 + 130;
	$y1  = $positions[1];
	$y2  = $y1+(10)+(5*($nblignes-1));
	$this->_graal_RoundedRect($r1, $y1, ($r2 - $r1), ($y2-$y1), 2.5, 'D');
	$this->Line( $r1, $y1+4, $r2, $y1+4);
	$this->Line( $r1+27, $y1, $r1+27, $y2);  // 2° trait
	$this->Line( $r1+49, $y1, $r1+49, $y2);  // 3° trait
	$this->Line( $r1+65, $y1, $r1+65, $y2);  // 4° trait
	$this->Line( $r1+85, $y1, $r1+85, $y2);  // 5° trait
	$this->Line( $r1+95, $y1, $r1+95, $y2);  // 6° trait
	$this->Line( $r1+115, $y1, $r1+115, $y2);  // 7° trait
	$this->SetXY( $r1+2,  $y1);$this->MultiCell($largeur[0], 4, $names[0],0,'C');
	$this->SetXY( $r1+25, $y1);$this->MultiCell($largeur[1], 4, $names[1],0,'C');
	$this->SetXY( $r1+45, $y1);$this->MultiCell($largeur[2], 4, $names[2],0,'C');
	$this->SetXY( $r1+62, $y1);$this->MultiCell($largeur[3], 4, $names[3],0,'C');
	$this->SetXY( $r1+82, $y1);$this->MultiCell($largeur[4], 4, $names[4],0,'C');
	$this->SetXY( $r1 +92, $y1);$this->MultiCell($largeur[5], 4, $names[5],0,'C');
	$this->SetXY( $r1+110, $y1);$this->MultiCell($largeur[6], 4, $names[6],0,'C');
  //  Première ligne
	$this->SetXY( $r1+1,  $y1+5 );$this->MultiCell($largeur[0], 4, $totaux[ 0],0,'L');
	$this->SetXY( $r1+23, $y1+5 );$this->MultiCell($largeur[1], 4, sprintf("%01.2f", $totaux[ 1]),0,'R');
	$this->SetXY( $r1+40, $y1+5 );$this->MultiCell($largeur[2], 4, sprintf("%01.2f", $totaux[ 2]),0,'R');
	$this->SetXY( $r1+60, $y1+5 );$this->MultiCell($largeur[3], 4, sprintf("%01.2f", $totaux[ 3]),0,'R');
	$this->SetXY( $r1+78, $y1+5 );$this->MultiCell($largeur[4], 4, sprintf("%01.2f", $totaux[ 4]),0,'R');
	$this->SetXY( $r1 +95, $y1+5);$this->MultiCell($largeur[5], 4, sprintf("%01.2f", $totaux[ 5]),0,'C');
	$this->SetXY( $r1+112, $y1+5);$this->MultiCell($largeur[6], 4, sprintf("%01.2f", $totaux[ 6]),0,'C');
  if ($nblignes>1) {
    $y1+=5;
  	$this->SetXY( $r1+1,  $y1+5 );$this->MultiCell($largeur[0], 4, $totaux[ 7],0,'L');
		$this->SetXY( $r1+23, $y1+5 );$this->MultiCell($largeur[1], 4, sprintf("%01.2f", $totaux[ 8]),0,'R');
		$this->SetXY( $r1+40, $y1+5 );$this->MultiCell($largeur[2], 4, sprintf("%01.2f", $totaux[ 9]),0,'R');
		$this->SetXY( $r1+60, $y1+5 );$this->MultiCell($largeur[3], 4, sprintf("%01.2f", $totaux[10]),0,'R');
		$this->SetXY( $r1+78, $y1+5 );$this->MultiCell($largeur[4], 4, sprintf("%01.2f", $totaux[11]),0,'R');
		$this->SetXY( $r1 +95, $y1+5);$this->MultiCell($largeur[5], 4, sprintf("%01.2f", $totaux[12]),0,'C');
		$this->SetXY( $r1+112, $y1+5);$this->MultiCell($largeur[6], 4, sprintf("%01.2f", $totaux[13]),0,'C');
  }
  if ($nblignes>2) {
    $y1+=5;
  	$this->SetXY( $r1+1,  $y1+5 );$this->MultiCell($largeur[0], 4, $totaux[14],0,'L');
		$this->SetXY( $r1+23, $y1+5 );$this->MultiCell($largeur[1], 4, sprintf("%01.2f", $totaux[15]),0,'R');
		$this->SetXY( $r1+40, $y1+5 );$this->MultiCell($largeur[2], 4, sprintf("%01.2f", $totaux[16]),0,'R');
		$this->SetXY( $r1+60, $y1+5 );$this->MultiCell($largeur[3], 4, sprintf("%01.2f", $totaux[17]),0,'R');
		$this->SetXY( $r1+78, $y1+5 );$this->MultiCell($largeur[4], 4, sprintf("%01.2f", $totaux[18]),0,'R');
		$this->SetXY( $r1 +95, $y1+5);$this->MultiCell($largeur[5], 4, sprintf("%01.2f", $totaux[19]),0,'C');
		$this->SetXY( $r1+112, $y1+5);$this->MultiCell($largeur[6], 4, sprintf("%01.2f", $totaux[20]),0,'C');
  }
  if ($nblignes>3) {
    $y1+=5;
  	$this->SetXY( $r1+1,  $y1+5 );$this->MultiCell($largeur[0], 4, $totaux[21],0,'L');
		$this->SetXY( $r1+23, $y1+5 );$this->MultiCell($largeur[1], 4, sprintf("%01.2f", $totaux[22]),0,'R');
		$this->SetXY( $r1+40, $y1+5 );$this->MultiCell($largeur[2], 4, sprintf("%01.2f", $totaux[23]),0,'R');
		$this->SetXY( $r1+60, $y1+5 );$this->MultiCell($largeur[3], 4, sprintf("%01.2f", $totaux[24]),0,'R');
		$this->SetXY( $r1+78, $y1+5 );$this->MultiCell($largeur[4], 4, sprintf("%01.2f", $totaux[25]),0,'R');
		$this->SetXY( $r1 +95, $y1+5);$this->MultiCell($largeur[5], 4, sprintf("%01.2f", $totaux[26]),0,'C');
		$this->SetXY( $r1+112, $y1+5);$this->MultiCell($largeur[6], 4, sprintf("%01.2f", $totaux[27]),0,'C');
  }
  if ($nblignes>4) {
    $y1+=5;
  	$this->SetXY( $r1+1,  $y1+5 );$this->MultiCell($largeur[0], 4, $totaux[28],0,'L');
		$this->SetXY( $r1+23, $y1+5 );$this->MultiCell($largeur[1], 4, sprintf("%01.2f", $totaux[29]),0,'R');
		$this->SetXY( $r1+40, $y1+5 );$this->MultiCell($largeur[2], 4, sprintf("%01.2f", $totaux[30]),0,'R');
		$this->SetXY( $r1+60, $y1+5 );$this->MultiCell($largeur[3], 4, sprintf("%01.2f", $totaux[31]),0,'R');
		$this->SetXY( $r1+78, $y1+5 );$this->MultiCell($largeur[4], 4, sprintf("%01.2f", $totaux[32]),0,'R');
		$this->SetXY( $r1 +95, $y1+5);$this->MultiCell($largeur[5], 4, sprintf("%01.2f", $totaux[33]),0,'C');
		$this->SetXY( $r1+112, $y1+5);$this->MultiCell($largeur[6], 4, sprintf("%01.2f", $totaux[34]),0,'C');
  }
  if ($nblignes>5) {
    $y1+=5;
  	$this->SetXY( $r1+1,  $y1+5 );$this->MultiCell($largeur[0], 4, $totaux[35],0,'L');
		$this->SetXY( $r1+23, $y1+5 );$this->MultiCell($largeur[1], 4, sprintf("%01.2f", $totaux[36]),0,'R');
		$this->SetXY( $r1+40, $y1+5 );$this->MultiCell($largeur[2], 4, sprintf("%01.2f", $totaux[37]),0,'R');
		$this->SetXY( $r1+60, $y1+5 );$this->MultiCell($largeur[3], 4, sprintf("%01.2f", $totaux[38]),0,'R');
		$this->SetXY( $r1+78, $y1+5 );$this->MultiCell($largeur[4], 4, sprintf("%01.2f", $totaux[39]),0,'R');
		$this->SetXY( $r1 +95, $y1+5);$this->MultiCell($largeur[5], 4, sprintf("%01.2f", $totaux[40]),0,'C');
		$this->SetXY( $r1+112, $y1+5);$this->MultiCell($largeur[6], 4, sprintf("%01.2f", $totaux[41]),0,'C');
  }
/*
	$this->SetFont( "dejavusans", "B", 6);
	$this->SetXY( $r1+90, $y2 - 8 );
	$this->SetFont( "dejavusans", "", 10);
*/
}
// add a watermark (temporary estimate, DUPLICATA...)
// call this method first
function watermark( $text, $positions, $rotate = array('45','50','180') )
{
	$this->SetFont('Arial','B',50);
	$this->SetTextColor(230,230,230);
	$this->Rotate($rotate[0],$rotate[1],$rotate[2]);
	$this->Text($positions[0],$positions[1],$text);
	$this->Rotate(0);
	$this->SetTextColor(0,0,0);
}
function _graal_pdf_cadre_00($contenu="Contenu",$x1=10,$y1=80,$lar=60,$hau=10,$coins="1111",$style="D",$cadrage="L",$border_style="" ){
	$x2  = $x1 + $lar;
	$y2  = $y1 + $hau;
  $mid = $y1 + (($y2-$y1) / 2);
	$this->_graal_RoundedRect($x1, $y1, ($x2 - $x1), ($y2-$y1), 2.5, $coins,$style,$border_style);
  $this->SetXY( $x1 , $y1+($hau/2)-3 );
	$this->Cell(0,4, $contenu, 0, 0, $cadrage,'',1);
}
function _graal_pdf_cadre_01($contenu="Contenu",$legende="Légende",$x1=10,$y1=80,$lar=60,$hau=10,$coins="1111",$cadrage_legende="C",$cadrage_contenu="C"){
	$x2  = $x1 + $lar;
	$y2  = $y1 + $hau;
  $mid = $y1 + (($y2-$y1) / 2);
	$this->_graal_RoundedRect($x1, $y1, ($x2 - $x1), ($y2-$y1), 2.5, $coins,'D');
	$this->Line( $x1, $mid, $x2, $mid);
	$this->SetXY( $x1 + ($x2-$x1)/2 -5 , $y1+1 );
	$this->Cell(10,4, $legende, 0, 0, $cadrage_legende,'',1);
	$this->SetXY( $x1 + ($x2-$x1)/2 -5 , ($y1+($hau/2)) );
	$this->Cell(10,5,$contenu, 0,0, $cadrage_contenu,'',1);
}
function _graal_pdf_cadre_02($contenu="Contenu",$legende="Légende",$x1=10,$y1=80,$lar=60,$hau=10,$coins="1111",$cadrage_legende="C",$cadrage_contenu="C"){
	$x2  = $x1 + $lar;
	$y2  = $y1 + $hau;
  $mid = $y1 + (($y2-$y1) / 2);
	$this->_graal_RoundedRect($x1, $y1, ($x2 - $x1), ($y2-$y1), 2.5, $coins,'D');
	$this->Line( $x1, $mid, $x2, $mid);
	$this->SetXY( $x1 + ($x2-$x1)/2 -5 , $y1+1 );
	$this->Cell(10,4, $legende, 0, 0, $cadrage_legende,'',1);
	$this->SetXY( $x1 , ($y1+($hau/2)) );
	$this->Cell(1,5,$contenu, 0,0, $cadrage_contenu,0,'',0);
}
function _graal_pdf_cadre_03($contenu="Contenu",$legende="Légende",$x1=10,$y1=80,$lar=60,$hau=10,$coins="1111",$cadrage_legende="C",$cadrage_contenu="C"){
	$x2  = $x1 + $lar;
	$y2  = $y1 + $hau;
  $mid = $y1 + (($y2-$y1) / 2);
	$this->_graal_RoundedRect($x1, $y1, ($x2 - $x1), ($y2-$y1), 2.5, $coins,'D');
	$this->Line( $x1, $mid, $x2, $mid);
	$this->SetXY( $x1 + ($x2-$x1)/2 -5 , $y1+1 );
	$this->Cell(10,4, $legende, 0, 0, $cadrage_legende,'',1);
	$this->SetXY( $x1 , ($y1+($hau/2)) );
	$length = $this->GetStringWidth( $contenu );
	$this->MultiCell($length,5,$contenu, 0, $cadrage_contenu);
}
function _graal_pf_imprime_ligne($tab,$y,$cols,$format,$fonts,$type,$max_bas=270) {
  global $y;
  global $pseudo_pdf;
  global $cols;
  global $format;
  global $fonts;
  global $type;
  $pseudo_size = round($pseudo_pdf->addLine_00( $y, $tab,$cols,$format,$fonts,$type ),2);
  $y_init=$y;
  $y_init+= $pseudo_size + 2;
  if ($y_init>=$max_bas) {
  	$this->AddPage();
  }
  $this->addLine_00( $y, $tab,$cols,$format,$fonts,$type );
  $y_init=$y;
  $y+= $pseudo_size + 2;
  return $pseudo_size;
}
function _graal_hauteur_00( $y, $texte,$x=10,$pos=2,$col_font){
	$maxSize      = $y;
  $longCell  = $pos -2;
	$this->SetXY( $x, $y-1);
	$this->SetFont( $col_font[0], $col_font[1],$col_font[2]);
	$this->MultiCell( $longCell, 4 , $texte, 0, "R");
	if ( $maxSize < ($this->GetY()  ) ) {
		$maxSize = $this->GetY() ;
	}
	$ordonnee += $pos;
	return ($maxSize-$y);
}
function _graal_logo($doc_cleunik,$x,$y,$w,$h) {
	if ($doc_cleunik!=-1) {
		$sql_req = "SELECT _documents.document as logo,_documents.hash as hash,_documents.emplacement as nom FROM `_documents` WHERE _documents.doc_cleunik=$doc_cleunik;";
	  $sql_result = _graal_requete_bd($sql_req);
	  $_graal_nombre=mysql_num_rows($sql_result);
	  if ($_graal_nombre==0){return;}
		$row = mysql_fetch_assoc($sql_result);
		$path="mail/_".$doc_cleunik."_".$row['hash']."_".$row['nom'];
		if(!file_exists($path)){
		  $handle_file=fopen($path, 'wb');
		  fwrite($handle_file, $row['logo']);
		  fclose($handle_file);
		}
		$this->Image($path,$x,$y,$w,$h);  //  ok
		_graal_libere_requete_bd($sql_result);
	}
}
function _graal_pf_rai() {
  //  Rien à éditer 
  $this->SetCreator(PDF_CREATOR);
  $this->setPrintHeader(false);
  $this->setPrintFooter(false);
	//$this->SetFont('vera','B',50);
	$this->AddPage();
	$this->SetTextColor(203,203,203);
	$this->Rotate(55,10,290);
	$this->Text(10,290,"....   Il n'y a rien à imprimer    ....");
	$this->Rotate(0);
	$this->SetTextColor(0,0,0);
  $this->Output();
}
function _graal_cdg_html($doc_cleunik) {
	$data = _graal_requete_ob("SELECT blocnote_riche,blocnote_brut FROM _documents WHERE doc_cleunik=$doc_cleunik");
	$this->writeHTML($data->blocnote_riche, false, 0, false, false);
}

}
function StripLastZero($string)
{
	$count=strlen($string);
	$ret=substr($string,0,($count-1));
	return $ret;
}
?>
