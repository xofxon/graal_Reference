<?php
// il faut impérativement lui passer le paramètre q avec l'identifiant du client : q=1lb30974e-5497-1029-moii-001109b5c1d9 (domaine xof)

include("_graal_header_xml.inc.php");
define('EOL', "\r\n");
$vl_e_typeacteur=intval(fa_recup_param('typeacteur','9'));	//	Tous les acteurs par défaut
$vl_c_raisonsoc=fa_recup_param('raisonsoc','%');	//	Toutes les raisons sociales
$vl_c_quoi=intval(fa_recup_param('quoi','4'));	//	Recherche sur numéro de téléphone
$vl_c_actifs=fa_recup_param('vl_c_actifs','1');	//	Tous les acteurs actifs
$vl_e_limit=intval(fa_recup_param('vl_e_limit','100000'));	//	limité à 1000000 téléphones
$vl_action_cleunik=intval(fa_recup_param('vl_action_cleunik','0'));
$vl_c_sortie=fa_recup_param("sortie","json");
$vl_e_uti_cleunik =intval(fa_recup_session('vs_uti_cleunik','0'));
switch ($vl_c_sortie) {
  case "json":
  case "sql":
  	$sql_req = "SELECT _acteurs.actif as act_actif, _act_interlo.actif as int_actif,_acteurs.act_cleunik as act_cleunik, _act_interlo.int_cleunik as int_cleunik,";
	$sql_req.= " _act_interlo_tel.intel_cleunik as intel_cleunik, _acteurs.raisonsoc as raisonsoc, _acteurs.nomcommercial as nomcommercial, _choix.choix_valeur_texte_01 as civilite,";
	$sql_req.= " concat_ws(' ',_act_interlo.prenom,_act_interlo.patronyme) as qui, _act_interlo.prenom as prenom, _act_interlo.patronyme as nom, _act_interlo_tel.telformate as notel,";
	$sql_req.= "  _act_interlo_tel.intel_05 as intel_05,_choixtel.choix_valeur_texte_01 as genretel, _choixact.choix_valeur_texte_01 as portee,_acteurs.typeacteur as typeacteur";
    break;
}
$sql_req.= "  from _acteurs,_act_interlo,_choix,_act_interlo_tel,_choix _choixtel, _choix _choixact where _acteurs.act_cleunik = _act_interlo.act_cleunik";
$sql_req.= "  and _choix.choix_cleunik = _act_interlo.choix_cleunik and _act_interlo_tel.int_cleunik=_act_interlo.int_cleunik and _choixtel.choix_cleunik = _act_interlo_tel.choix_cleunik";
$sql_req.= "  and _choixact.choix_cleunik = _acteurs.typeacteur";
/*
 * Gestion de la liste noire des acteurs
 * Gestion de la liste blanche des acteurs
 */
$vl_c_xml_uti=simplexml_load_string($_SESSION["vs_param_environ"]);
if (isset($vl_c_xml_uti->gesacteurs_ml_zone)){$vs_gesacteurs_ml_zone=$vl_c_xml_uti->gesacteurs_ml_zone->attributes();}else{$vs_gesacteurs_ml_zone='1';}
switch ($vs_gesacteurs_ml_zone){
	case '1':	//	Accès libre
		$req_liste_noire="";
		$req_liste_blanc="";
		break;
	case '3':	//	Accès sur liste noire
		$req_liste_noire=" and (select count(*) from _acteurs_noire where _acteurs_noire.act_cleunik=_acteurs.act_cleunik and _acteurs_noire.uti_cleunik=$vl_e_uti_cleunik) = 0 ";
		$req_liste_blanc="";
		break;
	case '4':	//	Accès sur liste blanche
		$req_liste_blanc=" and (select count(*) from _acteurs_blanc where _acteurs_blanc.act_cleunik=_acteurs.act_cleunik and _acteurs_blanc.uti_cleunik=$vl_e_uti_cleunik) <> 0 ";
		$req_liste_noire="";
		break;
}
$sql_req.= $req_liste_blanc . $req_liste_noire;
switch ($vl_e_typeacteur) {
    case 2: $sql_req.=" and _acteurs.typeacteur =110000";break; //  membres de l'entreprise
    case 3: $sql_req.=" and _acteurs.typeacteur =110001";break; //  Prospects clients
    case 4: $sql_req.=" and _acteurs.typeacteur =110003";break; //  Clients
    case 5: $sql_req.=" and _acteurs.typeacteur =110002";break; //  Prospects fournisseurs
    case 6: $sql_req.=" and _acteurs.typeacteur =110004";break; //  Fournisseurs
    case 7: $sql_req.=" and _acteurs.typeacteur =110005";break; //  Autres acteurs
    case 8: $sql_req.=" and _acteurs.typeacteur =110006";break; //  Acteurs indéterminés
    case 9: break; //  Tous les acteurs
}
switch ($vl_c_actifs) {
  case '1': $sql_req.=" and _acteurs.actif=1";break; //  actifs
  case '2': $sql_req.=" and _acteurs.actif=2";break;//  inactifs
  case '0': break;//  tous
}
switch ($vl_c_quoi) {
  case 1 : $sql_req.=" and _acteurs.raisonsoc like '$vl_c_raisonsoc%' ORDER BY `raisonsoc` ASC";break;  //  Raison sociale
  case 2 : $sql_req.=" and _acteurs.nomcommercial like '$vl_c_raisonsoc%' ORDER BY `nomcommercial` ASC";break;  //  Nom commercial
  case 3 : $sql_req.=" and (concat_ws(' ',_act_interlo.prenom,_act_interlo.patronyme) like '$vl_c_raisonsoc%' or concat_ws(' ',_act_interlo.patronyme,_act_interlo.prenom) like '$vl_c_raisonsoc%') ORDER BY qui ASC";break;  //  Interlocuteur
  case 4 :
		$a[0]='/[^0-9]/i'; // Tout ce qui n'est pas compris entre 0 et 9 sans distinction de minuscule ou majuscule
		$b[0]='';
		$vl_c_chaine_nette=preg_replace($a, $b, $vl_c_raisonsoc);
		$sql_req.=" and _act_interlo_tel.intel_05 like '$vl_c_chaine_nette%' ORDER BY `intel_05` ASC";break;  //  Téléphone
}
$sql_req.="  LIMIT 0, $vl_e_limit";
$sql_req=<<<XOF
SELECT concat_ws( ' ',_act_interlo_tel.intel_05,"(", _choix.choix_valeur_texte_01,_act_interlo.prenom, _act_interlo.patronyme,")") AS qui, _act_interlo_tel.intel_05 AS intel_05
FROM _act_interlo, _choix, _act_interlo_tel
WHERE _choix.choix_cleunik = _act_interlo.choix_cleunik
AND _act_interlo_tel.int_cleunik = _act_interlo.int_cleunik
AND _act_interlo.actif =1
AND sms =2
ORDER BY `intel_05` ASC
XOF;


switch ($vl_c_sortie) {
  case "json":
  	$result = _graal_requete_bd($sql_req);
	while ($row=mysql_fetch_assoc($result)){
		$output[]=$row;
	}
	header('Content-type: text/plain; charset=utf-8');
    header("Cache-Control: no-cache, must-revalidate"); // HTTP/1.1
    header("Expires: Mon, 26 Jul 1997 05:00:00 GMT"); // Date in the past
	print(json_encode($output));
	_graal_ferme_connexion();
    break;
  case "sql":
    header('Content-type: text/plain; charset=utf-8');
    header("Cache-Control: no-cache, must-revalidate"); // HTTP/1.1
    header("Expires: Mon, 26 Jul 1997 05:00:00 GMT"); // Date in the past
    //echo $sql_req_trackin.EOL;
    echo $sql_req;
    break;
 }
?>
