<?php
//
//  Fonctions particulières
//
//function header_quoted_printable_encode_xof($string, $encoding='ISO-8859-1') {
function header_quoted_printable_encode_xof_imparfaite($string, $encoding='UTF-8',$quoi="Q") {  
    $string = str_replace(" ", "_", trim($string)) ;
    $string = str_replace("?", "=3F", str_replace("=\r\n", "", imap_8bit($string))) ;
    $string = chunk_split($string, 73);
    $string = substr($string, 0, strlen($string)-2);
    $string = str_replace("\r\n", "?= =?".$encoding."?$quoi?", $string) ;
    return '=?'.$encoding."?$quoi?".$string.'?=';
}
function header_quoted_printable_encode_xof_quinefonctionne_pas($string, $encoding='UTF-8') {
//function quoted_printable_encode($string, $encoding='UTF-8') {
//http://www.php.net/manual/fr/function.quoted-printable-decode.php
// use this function with headers, not with the email body as it misses word wrapping
       $len = strlen($string);
       $result = '';
       $enc = false;
       for($i=0;$i<$len;++$i) {
        $c = $string[$i];
        if (ctype_alpha($c))
            $result.=$c;
        else if ($c==' ') {
            $result.='_';
            $enc = true;
        } else {
            $result.=sprintf("=%02X", ord($c));
            $enc = true;
        }
       }
       //L: so spam agents won't mark your email with QP_EXCESS
       if (!$enc) return $string;
       return '=?'.$encoding.'?q?'.$result.'?=';
}
function header_quoted_printable_encode_xof($string, $encoding='UTF-8')
{
    // touvé ici http://fr.php.net/manual/fr/function.mb-encode-mimeheader.php#58515
    $pos = 0;
    // after 36 single bytes characters if then comes MB, it is broken
    // but I trimmed it down to 24, to stay 100% < 76 chars per line
    $split = 24;
    while ($pos < mb_strlen($string, $encoding))
    {
        $output = mb_strimwidth($string, $pos, $split, "", $encoding);
        $pos += mb_strlen($output, $encoding);
        $_string_encoded = "=?".$encoding."?B?".base64_encode($output)."?=";
        if ($_string)
            $_string .= "\r\n";
        $_string .= $_string_encoded;
    }
    $string = $_string;
    return $string;
}
?>
