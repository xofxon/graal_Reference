emerge rails
wget http://rubyforge.org/frs/download.php/29428/redmine-0.6.3.tar.gz
mkdir redmine
mv /root/redmine-0.6.3.tar.gz /home/mryann/www/redmine/
cd redmine/ && ls
mv redmine/redmine-0.6.3 projet
création base mysql "production"
création utilisateur "redmine" mot de passe "zWLp6aFAT8BBs5VE"
ns29364 www # cd projet/
ns29364 projet # cd config
ns29364 config # cp database.yml.example database.yml.clean
ns29364 config # cp database.yml.example database.yml
ns29364 config # rm database.yml.example
nano database.yml

Nouveau contenu de database.yml (+effaçage des autres lignes):
production:
  adapter: mysql
  database: production
  host: localhost
  username: redmine
  password: zWLp6aFAT8BBs5VE
  
rake db:migrate RAILS_ENV="production"
(in /home/mryann/www/projet)
rake aborted!
No such file or directory - /tmp/mysql.sock

Résolution du problème par ajout de la ligne suivante dans /home/mryann/www/projet/config/database.yml:
socket: /var/run/mysqld/mysqld.sock
/!\ mysqld.sock et non : mysql.sock

rake db:migrate RAILS_ENV="production" 
(ça marche !!)

rake redmine:load_default_data RAILS_ENV="production"
Spécification de la langue: fr


Liens d'aide:
http://blog.bmaron.net/index.php?post/2008/01/16/Redmine-un-gestionnaire-de-projet-peu-connu

Install de SVN:
emerge -avt gentoolkit

Donc pour ré-installer apache avec la nouvelle option, nous allons d'abord récupérer la version du fichier (ebuild) concernant la configuration d'apache (sur release 2 OVH) equery w apache-ovh
Le retour de la commande ressemble à ça : /usr/local/portage-ovh/net-www/apache-ovh/apache-ovh-2.0.59.ebuild
Reprenez la version du fichier retourné pour les prochaines commandes
Nous allons éditer ce fichier et ajouter le module dav à la configuration : nano /usr/local/portage-ovh/net-www/apache-ovh/apache-ovh-2.0.59.ebuild
Reconstruisez le fichier de configuration : ebuild /usr/local/portage-ovh/net-www/apache-ovh/apache-ovh-2.0.59.ebuild digest
Lancer la ré-installation: emerge apache-ovh -avt validez
apxs & apxs2
La version 1.4.6 et supérieur de Subversion va vouloir utiliser la version 2 d'apxs se trouvant /usr/sbin/apxs2, votre version d'apache vous fournit la version 1 /usr/local/apache/bin/apxs.
Nous allons donc dire à subversion de prendre la version existante : ln -sf /usr/local/apache/bin/apxs /usr/sbin/apxs2 

Pour que Subversion utilise les bons droits pour le module apache (release 2 OVH), nous allons modifier les paramètres de configuration de l'installation de subversion de la même manière que pour celle d'apache.

Trouver le fichier ebuild de subversion equery w subversion

Le retour devrait ressembler à ça

/usr/portage/dev-util/subversion/subversion-1.4.6.ebuild


Editer ce fichier nano /usr/portage/dev-util/subversion/subversion-1.4.6.ebuild

Modifier ces lignes :

	[[ -z "${SVNSERVE_USER}" ]] && SVNSERVE_USER="apache"
	[[ -z "${SVNSERVE_GROUP}" ]] && SVNSERVE_GROUP="apache"

Par

	[[ -z "${SVNSERVE_USER}" ]] && SVNSERVE_USER="nobody"
	[[ -z "${SVNSERVE_GROUP}" ]] && SVNSERVE_GROUP="nobody"

et modifier également ces lignes

	ewarn "    chown -Rf apache:apache ${SVN_REPOS_LOC}/repos"

Par

	ewarn "    chown -Rf nobody:nobody${SVN_REPOS_LOC}/repos"

Sortez (ctrl+x) et valider les modifications 


Reconstruisez le fichier de configuration : ebuild /usr/portage/dev-util/subversion/subversion-1.4.6.ebuild digest


Options

Nous allons inscrire les options d'installation suivantes pour les paqiets «subversion» et «apr-util» : echo "dev-util/subversion apache2 svnserve -berkdb" >> /etc/portage/package.use echo "dev-libs/apr-util gdbm -berkdb" >> /etc/portage/package.use

Pour la gestion de fichier gdbm a été préféré à berkdb. 
stallation

Vous pouvez désormais installer Subversion : emerge -avt subversion Validez
Configuration

Lancer la procédure de configuration de Subversion : (prenez la version donner par equery) emerge --config =dev-util/subversion-1.4.6

 Apache

    * Copier et modifier le fichier de configuration de subversion pour le module apache : 

cp -p /etc/apache2/modules.d/47_mod_dav_svn.conf /usr/local/apache/conf/47_mod_dav_svn.conf


Modifier le fichier de configuration apache pour utiliser le module svn. nano /usr/local/apache/conf/47_mod_dav_svn.conf

remplacer le contenu du fichier pour qu'il soit exactement comme celui-là :

LoadModule dav_svn_module modules/mod_dav_svn.so
LoadModule authz_svn_module   modules/mod_authz_svn.so
<Location /svn>
	DAV svn
	SVNPath /home/svn/test
#	SVNParentPath /home/svn
#	AuthType basic
#	AuthName "SVN : monsite.fr"
#	AuthUserFile /home/svn/repos/conf/svnusers
#	Require valid-user
</Location>

Sortez (ctrl+x) et valider les modifications


    * Editez httpd.conf 

nano /usr/local/apache/conf/httpd.conf


ajouter (sous la configuration de suexec par exemple) les lignes suivantes :

	# mod_dav_svn
	Include conf/47_mod_dav_svn.conf

Sortez (ctrl+x) et valider les modifications 
 Subversion

    * Nous allons créer une nouvelle structure de dépôt dans le répertoire /home/svn: 

cp -rp /var/svn /home/svn

    * Editez le fichier de configuration de subversion : 

nano /etc/conf.d/svnserve

Modifier les lignes pour obtenir exactement ceci :

# Options for svnserve
SVNSERVE_OPTS="--root=/home/svn"

# User and group as which to run svnserve
SVNSERVE_USER="nobody"
SVNSERVE_GROUP="nobody"


Version originale de svnserve

# The commented variables in this file are the defaults that are used
# in the init-script.  You don't need to uncomment them except to
# customize them to different values.

# Options for svnserve
#SVNSERVE_OPTS="--root=/var/svn"

# User and group as which to run svnserve
#SVNSERVE_USER="apache"
#SVNSERVE_GROUP="apache"

 Démarrage

Lancez le serveur svn /etc/init.d/svnserve restart


Ajoutez svnserve au service de démarrage automatique : rc-update add svnserve default


Pour prendre en compte les modifications effectués sur la configuration d'apache, redémarrez le serveur apache : /etc/init.d/httpd restart 

Cette commande ne semble pas avoir fonctionné, il a fallu redemarrer Apache via le Webmin.

Liens d'aide:
http://www.wikiovh.com/index.php/OVH_2:Subversion
