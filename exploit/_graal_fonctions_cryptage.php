<?php
error_reporting(E_ALL ^ E_NOTICE ^ E_WARNING);  //  Pour éviter les warnings éventuels générés par l'absence de la valeur $iv dans les fonctions de cryptage et de décryptage
function fa_mcrypte($vv_genre,$vv_quoi,$vv_action) {
	switch ($vv_genre) {
		case "info_compte_courriel":
		// choix d'un algo, mode
			$algo = MCRYPT_BLOWFISH;
			$mode = MCRYPT_MODE_NOFB;
			$key_size = mcrypt_module_get_algo_key_size($algo);
			$iv_size = mcrypt_get_iv_size($algo, $mode);
			srand();
			$iv= mcrypt_create_iv($iv_size, MCRYPT_RAND);
			$cle= "Ceci est la clé pour crypter les informations de compte courriel xsoftware";
			$cle= substr($cle, 0, $key_size);
			switch ($vv_action) {
				case "chiffrer":
					//return mcrypt_encrypt($algo, $cle, $vv_quoi, $mode,$iv);
					return mcrypt_encrypt($algo, $cle, $vv_quoi, $mode);
					break;
				case "déchiffrer":
					//return mcrypt_decrypt($algo, $cle, $vv_quoi, $mode, $iv);
					return mcrypt_decrypt($algo, $cle, $vv_quoi, $mode);
					break;
			}
			break;
		case "id_flux_rss":
		// choix d'un algo, mode
			$algo = MCRYPT_BLOWFISH;
			$mode = MCRYPT_MODE_OFB;
			$key_size = mcrypt_module_get_algo_key_size($algo);
			$iv_size = mcrypt_get_iv_size($algo, $mode);
			srand();
			$iv= mcrypt_create_iv($iv_size, MCRYPT_RAND);
			$cle= "Ceci est la clé pour coder et décoder les id des flux rss";
			$cle= substr($cle, 0, $key_size);
			switch ($vv_action) {
				case "chiffrer":
					//return mcrypt_encrypt($algo, $cle, $vv_quoi, $mode,$iv);
					return base64_encode(mcrypt_encrypt($algo, $cle, $vv_quoi, $mode));
					break;
				case "déchiffrer":
					//return mcrypt_decrypt($algo, $cle, $vv_quoi, $mode, $iv);
					return mcrypt_decrypt($algo, $cle, base64_decode($vv_quoi), $mode);
					break;
			}
			break;
		default:
			return "";
			break;
	}
}
?>