<?php
$vl_c_xml_uti=simplexml_load_string($_SESSION["vs_param_environ"]);
if (isset($vl_c_xml_uti->gesacteurs_ml_zone)){$vs_gesacteurs_ml_zone=$vl_c_xml_uti->gesacteurs_ml_zone->attributes();}else{$vs_gesacteurs_ml_zone='1';}
/*
 * la gestion des listes d'acteur peut être ponctuellement ignorée, dans le cas des post it, par exemple
 */
if ($ignorer_gestion_listes_acteurs==true) {
	$vs_gesacteurs_ml_zone='1';
}
switch ($vl_e_action_choix){
	case 1:	//	avec le choix
		if ($vl_e_action_choix_cleunik!=0){
			$join_01=" left join _actions_choix_fixes a3 on a3.action_cleunik=_actions.action_cleunik ";
			$condition_01=" and a3.choix_cleunik in($vl_e_action_choix_cleunik) ";
		} else {
			$join_01=" left join _actions_choix_fixes a3 on a3.action_cleunik=_actions.action_cleunik ";
			$condition_01=" and a3.critere_cleunik in($vl_e_action_critere_cleunik) ";
		}
		break;
	case 2:	//	sans le choix
		$join_01="";
		$condition_01="";
		break;
	case 3:
	default:
		$join_01="";
		$condition_01="";
		break;
}
switch ($vl_c_concerne_qui) {
	case -1:	//	Concerne tout le monde -> pas de condition particulière
		$cond_concerne="";
		$join_02=" left join _graal a2 on a2.action_cleunik=_actions.action_cleunik ";
		$join_02="";	// Considérablement ralentissant les emailings rattachés aux interlocuteurs.
		break;
	case -2:	//	Ne me concerne pas
		$cond_concerne=" and a2.int_cleunik not in($vs_int_cleunik) ";
		$join_02=" left join _graal a2 on a2.action_cleunik=_actions.action_cleunik ";
		switch ($vs_gesacteurs_ml_zone){
			case '1':	//	Accès libre
				break;
			case '3':	//	Accès sur liste noire
				break;
			case '4':	//	Accès sur liste blanche
				//$cond_concerne_blanche_acteurs=" and a2.int_cleunik not in($vl_c_concerne_qui) ";//	modifié le 3 avril pour n'avoir que les actions qui ME concernent

				$cond_concerne_blanche_acteurs_suite=" having (select count(distinct(act_cleunik)) as nombre_acteurs from _graal f0 where f0.action_cleunik=f1.action_cleunik and f0.act_cleunik <> 0 group by action_cleunik)=
				(select count(distinct(f3.act_cleunik)) as nombre_blancs from _graal f0 left join _acteurs_blanc f3 on f0.act_cleunik=f3.act_cleunik where f0.action_cleunik=f1.action_cleunik
				and f0.act_cleunik <> 0 and f3.uti_cleunik=$vl_e_uti_cleunik)";
				/*
				switch ($vl_c_lesquelles) {
				  case 'acteurs': //acteurs
				  case 'interlo': //interlocuteurs acteurs
				    $cond_concerne_blanche_acteurs=" or a2.int_cleunik in($vl_c_concerne_qui) ";//	modifié le 3 avril pour n'avoir que les actions qui ME concernent
				    break;
				  default:

				  	break;
				}
				*/
				break;
		}
		break;
	default:	//	Qui concerne un interlocuteur déterminé (moi ou d'autres actifs)
		$cond_concerne=" and a2.int_cleunik in($vl_c_concerne_qui) ";
		$join_02=" left join _graal a2 on a2.action_cleunik=_actions.action_cleunik ";
		switch ($vs_gesacteurs_ml_zone){
			case '1':	//	Accès libre
				break;
			case '3':	//	Accès sur liste noire
				break;
			case '4':	//	Accès sur liste blanche
				$cond_concerne="";
				$cond_concerne_blanche_acteurs=" and a2.int_cleunik in($vl_c_concerne_qui) ";//	modifié le 3 avril pour n'avoir que les actions qui ME concernent

				$cond_concerne_blanche_acteurs_suite=" having (select count(distinct(act_cleunik)) as nombre_acteurs from _graal f0 where f0.action_cleunik=_actions.action_cleunik and f0.act_cleunik <> 0 group by action_cleunik)=
				(select count(distinct(f3.act_cleunik)) as nombre_blancs from _graal f0 left join _acteurs_blanc f3 on f0.act_cleunik=f3.act_cleunik where f0.action_cleunik=_actions.action_cleunik
				and f0.act_cleunik <> 0 and f3.uti_cleunik=$vl_e_uti_cleunik)";


				/*
				switch ($vl_c_lesquelles) {
				  case 'acteurs': //acteurs
				  case 'interlo': //interlocuteurs acteurs
				    $cond_concerne_blanche_acteurs=" or a2.int_cleunik in($vl_c_concerne_qui) ";//	modifié le 3 avril pour n'avoir que les actions qui ME concernent
				    break;
				  default:

				  	break;
				}
				*/
				break;
		}
		break;
}
//$cond_concerne="";
//$cond_concerne_blanche_acteurs="";


switch ($vl_c_lesquelles) {
  case 'acteurs': //acteurs
    $join_02=" left join _graal a2 on a2.action_cleunik=_actions.action_cleunik ";
    break;
  case 'interlo': //interlocuteurs acteurs
    $join_02=" left join _graal a2 on a2.action_cleunik=_actions.action_cleunik ";
    break;
}
switch ($vl_c_particularisme){
	case -1:	//	Pas de particularisme
		$cond_particularisme="";
		break;
	case 1:	//	Livraisons sauf celles présentes dans les lignes de bordereaux d'expéditions
		$cond_particularisme=" and _actions.action_cleunik not in(select action_cleunik from _bordereau_transporteurs_lignes group by action_cleunik)";
		break;
	case 2:	//	Livraisons présentes dans les lignes de bordereaux d'expéditions
		$cond_particularisme=" and _actions.action_cleunik in(select f1.action_cleunik from _bordereau_transporteurs_lignes f1 left join _bordereau_transporteurs f2 using(bordereau_cleunik) where f2.action_cleunik=$vl_e_action_particuliere)";
		break;
	case 3:	//	Commandes client expédiables
		$cond_particularisme =" and _actions.statut <> -40 ";
		//$cond_particularisme.=" and (select count(*) as nombre from _cdecli_lignes h1 left join _cdecli_lignes_qte h2 using(commercial_ligne_cleunik) join _cdecli_entetes h3 on h1.commercial_cleunik=h3.commercial_cleunik where h3.action_cleunik=_actions.action_cleunik and h2.statut <> -39)=0 ";
		break;
	case 4:	//	Expéditions facturables
		$cond_particularisme =" and _actions.statut <> -40 ";
		break;
	case 5:	//	Factures clients comptabilisables
		$join_particularisme =" left join _faccli_entetes p5 on _actions.action_cleunik=p5.action_cleunik";
		$cond_particularisme =" and p5.compta_etat & 1 ";
		break;
	case 6:	//	Factures clients comptabilisées décomptabilisables (sans réglement)
		$join_particularisme =" left join _faccli_entetes p5 on _actions.action_cleunik=p5.action_cleunik left join _echeancier p6 on p5.action_cleunik=p6.action_cleunik ";
		$cond_particularisme =" and p5.compta_etat & 8 and coalesce(p6.montant_paye,0) = 0 ";
		break;
	case 7:	//	Factures d'un représentant
		if ($vl_c_rep_fac!=-1){
			$cond_particularisme=" and _actions.action_cleunik in(select f2.action_cleunik from _faccli_representants f1 left join _faccli_entetes f2 using (commercial_cleunik) where f1.act_cleunik_rep=$vl_c_rep_fac)";
		}
		break;
	case 8:	//	Avoirs clients comptabilisés décomptablisables (sans réglement)
		$join_particularisme =" left join _avocli_entetes p5 on _actions.action_cleunik=p5.action_cleunik left join _echeancier p6 on p5.action_cleunik=p6.action_cleunik ";
		$cond_particularisme =" and p5.compta_etat & 8 and coalesce(p6.montant_paye,0) = 0 ";
		break;
	case 9:	//	Factures fournisseurs comptabilisables
		$join_particularisme =" left join _facfou_entetes p5 on _actions.action_cleunik=p5.action_cleunik";
		$cond_particularisme =" and p5.compta_etat & 1 ";
		break;
	case 10:	//	Factures fournisseur comptabilisées décomptabilisables (sans réglement)
		$join_particularisme =" left join _facfou_entetes p5 on _actions.action_cleunik=p5.action_cleunik left join _echeancier p6 on p5.action_cleunik=p6.action_cleunik ";
		$cond_particularisme =" and p5.compta_etat & 8 and coalesce(p6.montant_paye,0) = 0 ";
		break;
	case 12://	Factures avec plusieurs BL
		$cond_particularisme=" and _actions.action_cleunik in(select action_cleunik_droite from _graal_act f1 where (f1.choix_cleunik_gauche=-117 and f1.choix_cleunik_droite=-120) group by f1.action_cleunik_droite having count(*) >1)";
		break;
	case 13:	//	Avoirs clients comptabilisables
		$join_particularisme =" left join _avocli_entetes p5 on _actions.action_cleunik=p5.action_cleunik";
		$cond_particularisme =" and p5.compta_etat & 1 ";
		break;
	case 14:
/*
 * Normalement impossible car traité par ailleurs
 *
 */
			break;
	case 15:	//	retours fournisseurs. Gérés ici ?? Je me pose la question le 6 juin 2010
		break;
	case 16:	//	Avoirs fournisseurs comptabilisables
		$join_particularisme =" left join _avofou_entetes p5 on _actions.action_cleunik=p5.action_cleunik";
		$cond_particularisme =" and p5.compta_etat & 1 ";
		break;
	case 17:	//	Avoirs fournisseur comptabilisés décomptabilisables (sans réglement)
		$join_particularisme =" left join _avofou_entetes p5 on _actions.action_cleunik=p5.action_cleunik left join _echeancier p6 on p5.action_cleunik=p6.action_cleunik ";
		$cond_particularisme =" and p5.compta_etat & 8 and coalesce(p6.montant_paye,0) = 0 ";
		break;
	case 18:	//	Avoirs et factures clients
		$join_particularisme ="";
		$cond_particularisme ="";
		break;

}
switch ($vl_e_zone) {
  case 1: //description
    switch ($vl_e_type_recherche) {
      case 1: //  Orthographe
        if ($vl_c_recherche=='%') {
          $sql_req ="SELECT distinct(_actions.action_cleunik) FROM _actions $join_02 $join_01 $join_particularisme where 1=1 $cond_concerne";

          //	Qu'est-ce qu'elle faisait la cette ligne !!!
          //$sql_req ="select f1.action_cleunik from _graal f1 left join _actions f2 on f1.action_cleunik=f2.action_cleunik left join _actions on f1.action_cleunik=_actions.action_cleunik $join_02 $join_01 $join_particularisme where 1=1 $cond_concerne";

        } else {
          $sql_req ="SELECT  distinct(_actions.action_cleunik) FROM _actions $join_02 $join_01 $join_particularisme where (_actions.description like '$vl_c_recherche%') $cond_concerne";
        }
        break;
      case 2: //  Poids des mots
        $sql_req ="SELECT  distinct(f5.action_cleunik),MATCH(f5.description) AGAINST ('$vl_c_recherche') as score FROM _actions $join_02 $join_01 ,_actions_texte f5 where _actions.action_cleunik=f5.action_cleunik and MATCH(f5.description) AGAINST ('$vl_c_recherche') $cond_concerne";
        break;
    }
    break;
  case 2: //sujet
    switch ($vl_e_type_recherche) {
      case 1: //  Orthographe
      case 2: //  Poids des mots
        if ($vl_c_recherche=='%') {
          $sql_req ="SELECT  distinct(_actions.action_cleunik) FROM _actions $join_02 $join_01 $join_particularisme where 1=1 $cond_concerne";
        } else {
          $sql_req ="SELECT  distinct(_actions.action_cleunik) FROM _actions $join_02 $join_01 $join_particularisme where (_actions.sujet like '$vl_c_recherche%') $cond_concerne";
        }
        break;
    }
    break;
	case 3: //contenu des courriels reçus
		$sql_req ="select distinct(a1.action_cleunik),a4.message_text from _courriel_re a1 left join _courriel_re_mes a4 using (courriel_re_mes_cleunik) left join _actions using (action_cleunik) $join_02 $join_01 where 1=1 $cond_concerne";
    break;
  case 4: //référence
    switch ($vl_e_type_recherche) {
      case 1: //  Orthographe
      case 2: //  Poids des mots
        if ($vl_c_recherche=='%') {
          $sql_req ="SELECT  distinct(_actions.action_cleunik) FROM _actions $join_02 $join_01 $join_particularisme where 1=1 $cond_concerne";
        } else {
          $sql_req ="SELECT  distinct(_actions.action_cleunik) FROM _actions $join_02 $join_01 $join_particularisme where (_actions.reference like '$vl_c_recherche%') $cond_concerne";
        }
        break;
    }
    break;
  case 5: //Raison sociale acteur concerné
    switch ($vl_e_type_recherche) {
      case 1: //  Orthographe
      case 2: //  Poids des mots
        if ($vl_c_recherche=='%') {
          $sql_req ="SELECT  distinct(_actions.action_cleunik) FROM _actions $join_02 $join_01 $join_particularisme where 1=1 $cond_concerne";
        } else {
          //$sql_req ="SELECT action_cleunik FROM _actions left join _graal a2 using (action_cleunik) $join_01 where (_actions.reference like '$vl_c_recherche%') $cond_concerne";
          //$sql_req="SELECT _actions.action_cleunik FROM _actions left join _graal a2 using (action_cleunik) $join_01 left join _graal a4 on _actions.action_cleunik=a4.action_cleunik left join _acteurs a5 on a4.act_cleunik=a5.act_cleunik where (a5.raisonsoc like '$vl_c_recherche%' and a4.principal=2)  $cond_concerne";
          $sql_req ="SELECT  distinct(_actions.action_cleunik) FROM _actions $join_02 $join_01 $join_particularisme where (_actions.action_cleunik in(SELECT a4.action_cleunik FROM _graal a4 left join _acteurs a5 on a4.act_cleunik=a5.act_cleunik where ((a5.raisonsoc like '$vl_c_recherche%' or a5.nomcommercial like '$vl_c_recherche%') and a4.principal=2) and (select count(*) from _acteurs_noire where _acteurs_noire.act_cleunik=a4.act_cleunik and _acteurs_noire.uti_cleunik=$vl_e_uti_cleunik) = 0 )) $cond_concerne";
        }

        break;
    }
    break;
  case 6: //contenu des chats
         $sql_req ="SELECT  distinct(_actions.action_cleunik),_actions.blocnote_brut FROM _actions $join_02 $join_01 $join_particularisme where 1=1 $cond_concerne";
    break;
  case 7: //Nom ou prénom interlocuteur concerné
    switch ($vl_e_type_recherche) {
      case 1: //  Orthographe
      case 2: //  Poids des mots
        if ($vl_c_recherche=='%') {
          $sql_req ="SELECT  distinct(_actions.action_cleunik) FROM _actions $join_02 $join_01 $join_particularisme where 1=1 $cond_concerne";
        } else {
          //$sql_req ="SELECT action_cleunik FROM _actions left join _graal a2 using (action_cleunik) $join_01 where (_actions.reference like '$vl_c_recherche%') $cond_concerne";
          //$sql_req="SELECT _actions.action_cleunik FROM _actions left join _graal a2 using (action_cleunik) $join_01 left join _graal a4 on _actions.action_cleunik=a4.action_cleunik left join _acteurs a5 on a4.act_cleunik=a5.act_cleunik where (a5.raisonsoc like '$vl_c_recherche%' and a4.principal=2)  $cond_concerne";
          $sql_req ="SELECT  distinct(_actions.action_cleunik) FROM _actions $join_02 $join_01 $join_particularisme where (_actions.action_cleunik in(SELECT a4.action_cleunik FROM _graal a4 left join _act_interlo a5 on a4.int_cleunik=a5.int_cleunik where ((a5.prenom like '$vl_c_recherche%' or a5.patronyme like '$vl_c_recherche%') and a4.principal=2) and (select count(*) from _acteurs_noire where _acteurs_noire.act_cleunik=a4.act_cleunik and _acteurs_noire.uti_cleunik=$vl_e_uti_cleunik) = 0 )) $cond_concerne";
        }

        break;
    }
    break;
}
$sql_req.=$condition_01.$cond_particularisme;

switch ($vl_c_lesquelles) {
  case 'toutes': //toutes
  case 'toutes_principales':  //  Toutes avec mention de l'acteur ou de l'interlocuteur principal
  case 'acteurs': //acteurs
  case 'interlo': //acteurs
  	if ($vl_e_genre!=-110122) {
  		$sql_req.= " AND _actions.choix_cleunik not in(110122)";
  	}
    $sql_req.= " AND ((_actions.dateheuredebut between '$vl_c_datedebut$vl_c_heuredebut' and '$vl_c_datefin$vl_c_heurefin') or (_actions.dateheurefin between '$vl_c_datedebut$vl_c_heuredebut' and '$vl_c_datefin$vl_c_heurefin') or ( _actions.dateheuredebut < '$vl_c_datedebut$vl_c_heuredebut' and _actions.dateheurefin > '$vl_c_datefin$vl_c_heurefin'))";
    if ($vl_e_genre!=-1) {
      if ($vl_e_genre==-2) {$vl_e_genre='-110112,-110116,-110117';} //  Factures clients,avoirs "classiques" et avoirs "financiers"
      if ($vl_e_genre==-110116) {$vl_e_genre='-110116,-110117';} //  avoirs "classiques" et avoirs "financiers" clients
      if ($vl_e_genre==-110117) {$vl_e_genre='-110116,-110117';} //  avoirs "classiques" et avoirs "financiers" clients
      if ($vl_e_genre==-110137) {$vl_e_genre='-110137,-110138';} //  avoirs "classiques" et avoirs "financiers" fournisseurs
      if ($vl_e_genre==-110138) {$vl_e_genre='-110137,-110138';} //  avoirs "classiques" et avoirs "financiers" fournisseurs
      switch ($vl_e_operat_genre) {
        case 1 : $sql_req.=" AND _actions.choix_cleunik in($vl_e_genre)";break;
        case 2 : $sql_req.=" AND _actions.choix_cleunik not in($vl_e_genre)";break;
      }
    }
    if ($vl_e_statut!=-1) {
      switch ($vl_e_operat) {
        case 1 : $sql_req.=" AND _actions.statut IN ($vl_e_statut)";break;
        case 2 : $sql_req.=" AND _actions.statut NOT IN ($vl_e_statut)";break;
      }
    }
    if ($vl_e_priorite!=-1) {
      switch ($vl_e_operat_priorite) {
        case 1 : $sql_req.=" AND _actions.priorite IN ($vl_e_priorite)";break;
        case 2 : $sql_req.=" AND _actions.priorite NOT IN ($vl_e_priorite)";break;
      }
    }
	if ($vl_e_confiden!=-1) {
      switch ($vl_operat_confiden) {
        case 1 : $sql_req.=" AND _actions.confidentialite IN ($vl_e_confiden)";break;
        case 2 : $sql_req.=" AND _actions.confidentialite NOT IN ($vl_e_confiden)";break;
      }
    }

    break;
  case 'favorites':$sql_req.= " AND _actions.action_cleunik IN (SELECT _actions_favorites.action_cleunik from _actions_favorites where uti_cleunik=$vl_e_uti_cleunik and genre=1)";break;  //  Favoris
  case 'avecpj':$sql_req="SELECT  distinct(action_cleunik) FROM _actions left join _documents_rattachement on _actions.action_cleunik=_documents_rattachement.rat_cleunik where _documents_rattachement.doc_cleunik=$vl_e_genre and portee &$vl_e_piejoi";break;//  Avec des pièces jointes
  case 'avecar':$sql_req.= " AND _actions.action_cleunik IN (SELECT _courriel_re.action_cleunik from _courriel_re where etat_ar=1)";break;  //  Avec des pièces jointes
  case 'selection'://  Sélection de clé uniques d'actions

    $vl_t_listecles=fa_recup_session("$vl_c_var",'');
    unset($_SESSION["$vl_c_var"]);
    $vl_e_i=-1;
    foreach($vl_t_listecles as $vl_raf) {
      $vl_e_i++;
      $vl_action_cleunik.=$vl_t_listecles[$vl_e_i].',';
    }
    if ($vl_action_cleunik!="") {$vl_action_cleunik=substr($vl_action_cleunik, 0, -1);}
    $sql_req.= " AND _actions.action_cleunik IN ($vl_action_cleunik)";
    break;
  case 'dernieres_sauf_emailing'://  dernières action par acteur (principal ou pas)
  	$sql_req_dernieres= "SELECT tmp.act_cleunik as act_cleunik,MAX(r1.action_cleunik) AS dern_action_cleunik,tmp.Date_dern_cmd,";
	$sql_req_dernieres.=" (case `f6`.`raisonsoc` when _utf8'' then `f6`.`nomcommercial` else `f6`.`raisonsoc` end) AS `qui_interlo`,f6.actif";
  	$sql_req_dernieres.=" FROM _graal AS r1";
	$sql_req_dernieres.=" INNER JOIN (";
  	$sql_req_dernieres.=" SELECT cl.act_cleunik, MAX(cd.dateheuredebut) AS Date_dern_cmd";
  	$sql_req_dernieres.=" FROM _actions AS cd";
  	$sql_req_dernieres.=" INNER JOIN _graal AS r ON cd.action_cleunik = r.action_cleunik";
    $sql_req_dernieres.=" INNER JOIN _acteurs AS cl ON r.act_cleunik = cl.act_cleunik";
  	$sql_req_dernieres.=" GROUP BY cl.act_cleunik";
	$sql_req_dernieres.=" ) AS tmp ON r1.act_cleunik = tmp.act_cleunik left join _acteurs f6 on f6.act_cleunik=r1.act_cleunik where r1.act_cleunik<>0";
	$sql_req_dernieres.=" GROUP BY tmp.act_cleunik, tmp.Date_dern_cmd";
	//echo $sql_req_dernieres;
  	$result_dernieres = _graal_requete_bd($sql_req_dernieres);

	while ($row_dernieres = mysql_fetch_assoc($result_dernieres)) {
    	$vl_action_cleunik.=$row_dernieres['dern_action_cleunik'].',';
    	array_push ($qui_cle, $row_dernieres['dern_action_cleunik']);
    	array_push ($qui_actif, $row_dernieres['actif']);
    	array_push ($qui_dat, fa_ent_xml($row_dernieres['qui_interlo']));
    }
    _graal_libere_requete_bd($result_dernieres);
    if ($vl_action_cleunik!="") {$vl_action_cleunik=substr($vl_action_cleunik, 0, -1);}
    $sql_req.= " AND _actions.action_cleunik IN ($vl_action_cleunik) and _actions.choix_cleunik not in(-110122)";
    //$vl_e_critere_cleunik=1;	// pour éviter le limit
    break;
  case 'criteres':	//	Sélection sur critères ou choix de critère
    switch ($vl_e_choix_cleunik) {
      case 0: //  on recherche sur le critère
        switch ($vl_c_type_recherche_cleunik) {
          case "in": $sql_req="SELECT  distinct(action_cleunik) FROM _actions where action_cleunik in (select distinct(action_cleunik) from _actions_choix_fixes where critere_cleunik=$vl_e_critere_cleunik)";break;
          case "notin": $sql_req="SELECT  distinct(action_cleunik) FROM _actions where action_cleunik not in (select distinct(action_cleunik) from _actions_choix_fixes where critere_cleunik=$vl_e_critere_cleunik)";break;
        }
      default:
        //  on recherche sur le choix du critère
        switch ($vl_c_type_recherche_cleunik) {
          case "in": $sql_req="SELECT  distinct(action_cleunik) FROM _actions where action_cleunik in (select distinct(action_cleunik) from _actions_choix_fixes where choix_cleunik in($vl_e_choix_cleunik))";break;
          case "notin": $sql_req="SELECT  distinct(action_cleunik) FROM _actions where action_cleunik in (select distinct(action_cleunik) from _actions_choix_fixes where choix_cleunik not in($vl_e_choix_cleunik) and critere_cleunik=$vl_e_critere_cleunik))";break;
          }
    }
	break;
}
switch ($vl_e_action_choix){
	case 1:	//	avec le choix
		break;
	case 2:
		if ($vl_e_action_choix_cleunik!=0){
			//	sans le choix
	    $sql_req.=" AND _actions.action_cleunik IN (select a3.action_cleunik from _actions a3 left outer join _actions_choix_fixes a2 using (action_cleunik) where a2.action_cleunik is NULL or a2.choix_cleunik not in($vl_e_action_choix_cleunik))";
		} else {
			//	sans le critère
		$sql_req.=" AND _actions.action_cleunik IN (select a3.action_cleunik from _actions a3 left outer join _actions_choix_fixes a2 using (action_cleunik) where a2.action_cleunik is NULL or a2.critere_cleunik not in($vl_e_action_critere_cleunik))";
		}
		break;
	case 3:
	default:
		break;
	case 4:	//	avec le critère
		break;
}
/*
 * Avant
 * Gestion de la liste noire des actions
$sql_req.= " and (select count(*) from _actions_noire where _actions_noire.action_cleunik=_actions.action_cleunik and _actions_noire.uti_cleunik=$vl_e_uti_cleunik) = 0 ";
 * Gestion de la liste noire des acteurs
$sql_req.= " and _actions.action_cleunik not in(select l1.action_cleunik from _graal l1 left join _acteurs_noire using(act_cleunik) where _acteurs_noire.uti_cleunik=$vl_e_uti_cleunik) ";
*/
/*
 * Gestion de la liste noire des acteurs
 * Gestion de la liste blanche des acteurs
 */

$req_liste_noire="";
$req_liste_blanc="";
switch ($vs_gesacteurs_ml_zone){
	case '1':	//	Accès libre
		$req_liste_noire="";
		$req_liste_blanc="";
		break;
	case '3':	//	Accès sur liste noire
		//$req_liste_noire=" and (select count(*) from _acteurs_noire where _acteurs_noire.act_cleunik=_acteurs.act_cleunik and _acteurs_noire.uti_cleunik=$vl_e_uti_cleunik) = 0 ";
		$req_liste_noire.= " and _actions.action_cleunik not in(select l1.action_cleunik from _graal l1 left join _acteurs_noire using(act_cleunik) where _acteurs_noire.uti_cleunik=$vl_e_uti_cleunik) ";
		$req_liste_blanc="";
		break;
	case '4':	//	Accès sur liste blanche
		//$req_liste_blanc=" and (select count(*) from _acteurs_blanc where _acteurs_blanc.act_cleunik=_acteurs.act_cleunik and _acteurs_blanc.uti_cleunik=$vl_e_uti_cleunik) <> 0 ";
		$req_liste_blanc.= " and (_actions.action_cleunik in(select l1.action_cleunik from _graal l1 left join _acteurs_blanc using(act_cleunik) where _acteurs_blanc.uti_cleunik=$vl_e_uti_cleunik) ";
		$req_liste_blanc.= " $cond_concerne_blanche_acteurs )";
		$req_liste_noire="";
		break;
}
$sql_req.= " and (select count(*) from _actions_noire where _actions_noire.action_cleunik=_actions.action_cleunik and _actions_noire.uti_cleunik=$vl_e_uti_cleunik) = 0 ";
$sql_req.= $req_liste_blanc . $req_liste_noire;





switch ($vl_c_lesquelles) {
  case 'acteurs': //acteurs
    $sql_req.= " AND a2.act_cleunik=$vl_e_act_cleunik";// il faut intégrer l'entreprise
    break;
  case 'interlo': //interlocuteurs acteurs
    $sql_req.= " AND a2.int_cleunik=$vl_e_int_cleunik";break;
    break;
}
switch ($vl_c_lesquelles) {
  case 'dernieres_sauf_emailing': //acteurs
    break;
  default:
    $sql_req.= " group by _actions.action_cleunik";
    break;
}
$sql_req.=$cond_concerne_blanche_acteurs_suite;
switch ($vl_c_quelleplage) {
  case "debut":$sql_req.=" order by _actions.dateheuredebut DESC,_actions.dateheurefin DESC";break;
  case "fin":$sql_req.=" order by _actions.dateheurefin ASC";break;
}


//echo $sql_req.EOL;
//echo $sql_req.EOL;
/*

echo $sql_req.EOL;
$vl_c_recherche="Likely reason";
echo $vl_c_recherche.EOL;
*/

switch ($vl_c_lesquelles) {
  case 'favorites': //  Favoris, pas de limit
  case 'avecpj':  //  Avec pièces jointes, no limit
  case 'selection'://  Sélection de clé uniques d'actions, no limit
  //case 'dernieres_sauf_emailing':	//	dernières actions, no limit
    break;
  default:
	if ($vl_e_limit!=0) {
    	if ($vl_e_zone!=3){
			$sql_req_limit= " LIMIT 0,$vl_e_limit";
		}
	}

	break;
}

//echo $sql_req;


switch ($vl_c_concerne_qui) {
	case -1:	//	Concerne tout le monde -> pas de condition particulière
		switch ($vs_gesacteurs_ml_zone){
			case '1':	//	Accès libre
				$sql_req.=$sql_req_limit;
				break;
			case '3':	//	Accès sur liste noire

				break;
			case '4':	//	Accès sur liste blanche
				/*
				$sql_req="select distinct(action_cleunik) from _graal f1 left join _acteurs_blanc using(act_cleunik) where action_cleunik in($sql_req)
				having (select count(distinct(act_cleunik)) as nombre_acteurs from _graal f0 where f0.action_cleunik=f1.action_cleunik and f0.act_cleunik <> 0 group by action_cleunik)=
				(select count(distinct(f3.act_cleunik)) as nombre_blancs from _graal f0 left join _acteurs_blanc f3 on f0.act_cleunik=f3.act_cleunik where f0.action_cleunik=f1.action_cleunik
				and f0.act_cleunik <> 0 and f3.uti_cleunik=$vl_e_uti_cleunik)";
				*/


				$sql_req.=$sql_req_limit;
				break;
		}
		break;
	case -2:	//	Ne me concerne pas
		switch ($vs_gesacteurs_ml_zone){
			case '1':	//	Accès libre
				//$sql_req="select action_cleunik from _graal where action_cleunik in($sql_req) and int_cleunik not in($vs_int_cleunik)";
				$sql_req.=$sql_req_limit;
				break;
			case '3':	//	Accès sur liste noire

				break;
			case '4':	//	Accès sur liste blanche
				/*
				$sql_req="select distinct(action_cleunik) from _graal f1 left join _acteurs_blanc using(act_cleunik) where action_cleunik in($sql_req) and int_cleunik not in($vs_int_cleunik)
				having (select count(distinct(act_cleunik)) as nombre_acteurs from _graal f0 where f0.action_cleunik=f1.action_cleunik and f0.act_cleunik <> 0 group by action_cleunik)=
				(select count(distinct(f3.act_cleunik)) as nombre_blancs from _graal f0 left join _acteurs_blanc f3 on f0.act_cleunik=f3.act_cleunik where f0.action_cleunik=f1.action_cleunik
				and f0.act_cleunik <> 0 and f3.uti_cleunik=$vl_e_uti_cleunik)";
				*/
				$sql_req.=$sql_req_limit;
				break;
		}
		break;
		break;
	default:	//	Qui concerne un interlocuteur déterminé (moi ou d'autres actifs)
		switch ($vs_gesacteurs_ml_zone){
			case '1':	//	Accès libre
				//$sql_req.=" and int_cleunik in($vl_c_concerne_qui)";
				$sql_req.=$sql_req_limit;
				break;
			case '3':	//	Accès sur liste noire

				break;
			case '4':	//	Accès sur liste blanche
				/*
				$sql_req="select distinct(action_cleunik) from _graal f1 left join _acteurs_blanc using(act_cleunik) where action_cleunik in($sql_req) and int_cleunik in($vl_c_concerne_qui)
				having (select count(distinct(act_cleunik)) as nombre_acteurs from _graal f0 where f0.action_cleunik=f1.action_cleunik and f0.act_cleunik <> 0 group by action_cleunik)=
				(select count(distinct(f3.act_cleunik)) as nombre_blancs from _graal f0 left join _acteurs_blanc f3 on f0.act_cleunik=f3.act_cleunik where f0.action_cleunik=f1.action_cleunik
				and f0.act_cleunik <> 0 and f3.uti_cleunik=$vl_e_uti_cleunik)";
				*/
				$sql_req.=$sql_req_limit;
				break;
		}
}
/*
switch ($vl_c_lesquelles) {
  case 'favorites': //  Favoris, pas de limit
  case 'avecpj':  //  Avec pièces jointes, no limit
  case 'selection'://  Sélection de clé uniques d'actions, no limit
  //case 'dernieres_sauf_emailing':	//	dernières actions, no limit
    break;
  default:
	if ($vl_e_limit!=0) {
    	if ($vl_e_zone!=3){
			$sql_req.= " LIMIT 0,$vl_e_limit";
		}
	}

	break;
}
*/


switch ($vl_c_sortie) {
  case "das":
  case "excel_01":
  case "excel_02":
  case "excel_03":
  case "excel_04":
  	$result = _graal_requete_bd($sql_req);
	$sql_req_init=$sql_req;
	$vl_c_in="";
	while ($row = mysql_fetch_assoc($result)){
		switch ($vl_e_zone) {
			case 1:
			case 2:
			case 4:
			case 5:
			case 7:
			  $vl_c_in.=$row['action_cleunik'].",";
				break;
			case 3:	//	Contenu des mail reçus
				$vl_c_message_html=$row['message_text'];
				$posgenre=strpos($vl_c_message_html,'base64,')+7;
	  		$genre=substr($vl_c_message_html,0,$posgenre);
	  		$vl_c_adecoder=substr($vl_c_message_html,$posgenre,strlen($vl_c_message_html)-$posgenre);
			  $vl_c_message_html=base64_decode($vl_c_adecoder);
			  //echo $vl_c_message_html;
				if(preg_match("/".$vl_c_recherche."/i",$vl_c_message_html)) {
			  	$vl_c_in.=$row['action_cleunik'].",";
				}
				break;
			case 6:	//	Contenu des chats
				$vl_c_message_html=$row['blocnote_brut'];
				if(preg_match("/".$vl_c_recherche."/i",$vl_c_message_html)) {
			  		$vl_c_in.=$row['action_cleunik'].",";
				}
				break;
		}
	}
	_graal_libere_requete_bd($result);
    break;
  case "sql":
    header('Content-type: text/plain; charset=utf-8');
    header("Cache-Control: no-cache, must-revalidate"); // HTTP/1.1
    header("Expires: Mon, 26 Jul 1997 05:00:00 GMT"); // Date in the past
    echo $sql_req.EOL;
    $vl_c_in="-1,";
		//exit();
    break;
    case "requete":
    header('Content-type: text/plain; charset=utf-8');
    header("Cache-Control: no-cache, must-revalidate"); // HTTP/1.1
    header("Expires: Mon, 26 Jul 1997 05:00:00 GMT"); // Date in the past
    echo $sql_req.EOL;
    $vl_c_in="-1,";
	exit();
    break;
  }

?>
