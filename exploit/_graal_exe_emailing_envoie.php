<?php
include("_graal_header_txt.inc.php");
include("_graal_var_portee.php");
include("_graal_fonctions_courriel.php");
include("_import_class_data_km.php");
include("_graal_fonctions_cryptage.php");
require_once("func.tinyUrl.php");
error_reporting(E_ALL ^ E_NOTICE ^ E_WARNING);  //  Pour éviter les warnings éventuels générés par simplexml_load_string
set_time_limit(10000);  //  10000 secondes (un peu moins de 3 heures !!! ) cela doit être très largement suffisant pour 20000 mails maximum (grosso-modo 10 envois/seconde)
//require("_graal_verifie_existence_courriel.php");
/*
****************************************** Litanies des abérations connues de ce script **************************
***********22222222222222222222
* la vérification de la syntaxe d'un courriel ne semble pas fonctionner
***********33333333333333333333
* le remplacement du retour à la ligne+"." dans le corps du message n'a pas l'air de fonctionner
*/
if (strtoupper(substr(PHP_OS,0,3)=='WIN')) {
  $eol="\r\n";
  $sautligne=$eol;
} elseif (strtoupper(substr(PHP_OS,0,3)=='MAC')) {
  $eol="\r";
} else {
  $eol="\n";
  $sautligne="\n";
}
$sep_ret='|';
define('EOL', "\r\n");
$vl_c_exp = "/^( [a-zA-Z0-9] )+( [a-zA-Z0-9\._-] )*@( [a-zA-Z0-9_-])+( [a-zA-Z0-9\._-] +)+$/";
$param_generaux_graal_170=fa_recup_session('vs_param_generaux_graal_170',0); //  Adresse pour tracking
$param_generaux_graal_196=fa_recup_session('vs_param_generaux_graal_196',0); //  Adresse de localisation des images "preuve" d'ouverture emailing
$vl_c_genre=fa_recup_param('vl_c_genre','???');
$vl_c_sujet=fa_recup_telquel('vl_c_sujet','');
$vl_c_sujet_initial=$vl_c_sujet;
$vl_c_message=fa_recup_telquel('vl_c_message','');
$vl_c_message_texte=fa_recup_telquel('vl_c_message_texte','');
$vl_c_motscle=fa_recup_param('vl_c_motscle','');
$vl_c_id=fa_recup_param('vl_c_id','?');
$vl_c_priorite=fa_recup_param('vl_c_priorite','');
$vl_c_sensitivity=fa_recup_param('vl_c_sensitivity','');
$vl_c_idorigine=fa_recup_param('vl_c_idorigine','');
$vl_c_references=fa_recup_param('vl_c_references','');
$vl_int_cleunik_initial=intval(fa_recup_param('vl_int_cleunik_initial','-2'));
$vl_c_type_envoi=intval(fa_recup_param('vl_c_type_envoi','1'));
$vl_c_type_action=intval(fa_recup_param('vl_c_type_action','1'));
$vl_c_type_courriel=intval(fa_recup_param('vl_c_type_courriel',''));
$vl_c_integre_pj_sipossible=intval(fa_recup_param('vl_c_integre_pj_sipossible',''));
$vl_c_confirmation_lecture=intval(fa_recup_param('vl_c_confirmation_lecture',''));
$vl_e_action_cleunik=intval(fa_recup_param('vl_e_action_cleunik','0'));
$vl_c_affichernom=intval(fa_recup_param('vl_c_affichernom',2));
$vl_c_remplacement_noms=fa_recup_param('vl_c_remplacement_noms','');
$vl_tb_reg_00010=_graal_requete_regle("Reg_00010"); //  Relier automatiquement l'utilisateur créateur de l'action
$vl_int_cleunik_uti=intval(fa_recup_session('vs_int_cleunik','0'));
$vl_act_cleunik_uti=intval(fa_recup_session('vs_act_cleunik','0'));
$vs_mesid=fa_recup_session('vs_mesid','xsoftware');
$vl_e_courriel_en_mes_cleunik=intval(fa_recup_param('vl_e_courriel_en_mes_cleunik','-1'));
$vl_c_boundary="====".md5(uniqid(rand()))."====";
$vl_c_boundary_bis="==".md5(uniqid(rand()));
$vl_c_boundary_ter="===".md5(uniqid(rand()));

$vl_e_sendmail_from=intval(fa_recup_param('vl_e_sendmail_from','0'));

$simulation_envoi=fa_recup_param('vl_e_sendmail_from',false);
$simulation_envoi=false;
$sql_req = "SELECT compte AS compte FROM _uti_cpt_bal where uticptbal_cleunik=$vl_e_sendmail_from";
$result = _graal_requete_bd($sql_req);
$row = mysql_fetch_assoc($result);
_graal_libere_requete_bd($result);
$param_generaux_graal_101=intval(fa_recup_session('vs_param_generaux_graal_101',0));	//	Possibilité de renvoyer la requête
$vl_c_comptexml_chiffre=fa_mcrypte("info_compte_courriel",$row['compte'],"déchiffrer");
$vl_c_xml=simplexml_load_string($vl_c_comptexml_chiffre);
$vl_c_sendmail_from=$vl_c_xml->from[0]->attributes();
$vl_c_smtp=$vl_c_xml->smtp[0]->attributes();
$vl_c_port_smtp=$vl_c_xml->port_smtp[0]->attributes();//  ne sert à rien !!
$vl_c_emetteur=$vl_c_xml->emetteur[0]->attributes();
$vl_c_adressereponses=$vl_c_xml->adressereponse[0]->attributes();
$vl_c_cheminretour=$vl_c_xml->cheminretour[0]->attributes();
$vl_c_adresseerreurs=$vl_c_xml->adresseerreurs[0]->attributes();
$vl_c_type_compte=$vl_c_xml->type_compte[0]->attributes();
$vl_c_type_compte="2";	//	le 16-11-2009 : soupçon d'envoi foireux en cas contraire (pas le temps de tester, j'assure donc)
$vl_c_adresseconfirmationlecture=$vl_c_xml->adresseconfirmationlecture[0]->attributes();
/*
le 20 juillet 2007, le type de compte 2 -> wanadoo orange ne gère pas les noms dans les adresses de destinataires de la même manière que les autres types de compte
Donc pour l'instant, on ne les met pas !!!
*/
//************************************************
//  Vérification du minimum vital
//************************************************
//$vl_c_smtp='mail.christophe-charron.org';

/*
**************** à verifier
$vl_b_valid_syntax=eregi($vl_c_exp, $vl_c_destinataires);
if(!$vl_b_valid_syntax) {echo "Le courriel du destinataire est mal formé ...";exit;}
*/
if ($vl_c_genre!="modifier"){
	//if (strlen($vl_c_sujet)==0) {echo "Il faut renseigner le sujet ...";exit;}
	if (strlen($vl_c_message)==0) {echo "Le message est vide ...";exit;}
	if (strlen($vl_c_sendmail_from)==0) {echo "Le compte émetteur est vide ...";exit;}
	if (strlen($vl_c_smtp)==0) {echo "Le compte de messagerie est vide ...";exit;}
	if (strlen($vl_c_emetteur)==0) {echo "Il faut renseigner l'émetteur...";exit;}
}
//  On va récupérer les éventuelles pièces jointes
$vl_c_var=fa_recup_param('var','vs_tempo_courriel_14');   //  Tableau des cleunik des pièces jointes
$vl_t_pj_cleunik=fa_recup_session("$vl_c_var",'');
unset($_SESSION["$var"]);
$choix_cleunik_action=-110122;
$statut_action=-23;
$choix_cleunik_destinataire=-110401;
$vl_c_variable_requete=fa_recup_param('vl_c_variable_requete','');
/*
//  On tente de remplacer le retour à la ligne +"." mais ça n'a pas l'air de fonctionner
if (strtoupper(substr(PHP_OS,0,3)=='WIN')) {
  $vl_c_message = str_replace("\r\n.", "\r\n..", $vl_c_message);
} elseif (strtoupper(substr(PHP_OS,0,3)=='MAC')) {
  $vl_c_message = str_replace("\r.", "\r..", $vl_c_message);
} else {
  $vl_c_message = str_replace("\n.", "\n..", $vl_c_message);
}
*/
$vl_t_nom_dest = array();
$vl_t_cou_dest = array();
$vl_t_intweb_dest = array();
$vl_t_int_dest = array();
$vl_t_civilite = array();
$vl_t_prenom = array();
$vl_t_patronyme = array();
//echo $vl_c_variable_requete.$eol;
//echo "avant->".memory_get_usage(true).$eol;
switch ($vl_c_genre) {
  case "normal":
  case "continuer":
    //  Récupération des destinataires
    fa_recup_destinataires();
    break;
  case "modifier":
  	//	On modifie simplement le courriel, pas besoin de récupérer les destinataires
  	break;
	case "liste_attente":
		$vl_e_attente_nombre=intval(fa_recup_param('vl_e_attente_nombre',''));
		/*
 * Nécessaire pour éviter le blocage du au trop long traitements voir conversation ici http://www.developpez.net/forums/showthread.php?p=3024462#post3024462
 * Il ne faut plus rien avoir à récupérer, dans ce script, dans les variables de session ou dans les paramètres passés
 */
			session_write_close();
		$sql_req="select `f1`.`intweb_cleunik` AS `intweb_cleunik`,
		`f1`.`int_cleunik` AS `int_cleunik`,
		`f1`.`refweb` AS `refweb`,
		concat_ws(_utf8' ',`f2`.`prenom`,`f2`.`patronyme`) AS `prenom_nom`
		from (`_act_interlo_mail` `f1` left join `_act_interlo` `f2` using(`int_cleunik`) left join _emailing_cleweb_attente f4 on f1.intweb_cleunik=f4.intweb)
		where f4.action_cleunik=$vl_e_action_cleunik limit $vl_e_attente_nombre;";
		$result = _graal_requete_bd($sql_req);
		while ($row = mysql_fetch_assoc($result)) {
			if ($vl_c_affichernom==1) {
				if ($vl_c_remplacement_noms=="") {
					array_push ($vl_t_nom_dest, addslashes($row['prenom_nom']));   //  noms
				} else {
					array_push ($vl_t_nom_dest, $vl_c_remplacement_noms);   //  valeur de remplacement du nom
				}
	    } else {
	    	array_push ($vl_t_nom_dest, addslashes($row['refweb']));   //  courriels
	    }
			array_push ($vl_t_cou_dest, addslashes($row['refweb']));   //  courriels
			array_push ($vl_t_intweb_dest, addslashes($row['intweb_cleunik']));   //  clé unique des intweb
			array_push ($vl_t_int_dest, addslashes($row['int_cleunik']));   //  clé unique des interlocuteurs
		}
		_graal_libere_requete_bd($result);
    break;
  default:
    echo "Ciao bambino";
    exit;
    break;
}
//echo "après 0->".memory_get_usage(true).$eol;

function fa_recup_destinataires(){
	global $vl_c_affichernom;
	global $vl_t_nom_dest;
	global $vl_t_cou_dest;
	global $vl_t_intweb_dest;
	global $vl_t_int_dest;
	global $vl_t_civilite;
	global $vl_t_prenom;
	global $vl_t_patronyme;
	global $vl_c_variable_requete;
	global $eol;
	switch ($vl_c_variable_requete){
		case "":
			//echo "fa_recup 0".$eol;
			if ($vl_c_affichernom==1) {
				$vl_c_var=fa_recup_param('var','vs_tempo_courriel_01');   //  prénoms + noms
		    } else {
		    	$vl_c_var=fa_recup_param('var','vs_tempo_courriel_02');   //  courriels
		    }
		    $vl_t_nom_dest=fa_recup_session("$vl_c_var",'');
		    unset($_SESSION["$var"]);
		    $vl_c_var=fa_recup_param('var','vs_tempo_courriel_02');   //  courriels
		    $vl_t_cou_dest=fa_recup_session("$vl_c_var",'');
		    unset($_SESSION["$var"]);
		    $vl_c_var=fa_recup_param('var','vs_tempo_courriel_03');   //  clé unique des intweb
		    $vl_t_intweb_dest=fa_recup_session("$vl_c_var",'');
		    unset($_SESSION["$var"]);
		    $vl_c_var=fa_recup_param('var','vs_tempo_courriel_04');   //  clé unique des interlocuteurs
		    $vl_t_int_dest=fa_recup_session("$vl_c_var",'');
		    unset($_SESSION["$var"]);
			$vl_c_var=fa_recup_param('var','vs_tempo_courriel_05');   //  civilités
		    $vl_t_civilite=fa_recup_session("$vl_c_var",'');
		    unset($_SESSION["$var"]);
			$vl_c_var=fa_recup_param('var','vs_tempo_courriel_06');   //  prénoms
		    $vl_t_prenom=fa_recup_session("$vl_c_var",'');
		    unset($_SESSION["$var"]);
			$vl_c_var=fa_recup_param('var','vs_tempo_courriel_07');   //  Patronymes
		    $vl_t_patronyme=fa_recup_session("$vl_c_var",'');
		    unset($_SESSION["$var"]);
		    /*
 * Nécessaire pour éviter le blocage du au trop long traitements voir conversation ici http://www.developpez.net/forums/showthread.php?p=3024462#post3024462
 * Il ne faut plus rien avoir à récupérer, dans ce script, dans les variables de session ou dans les paramètres passés
 */
		    session_write_close();
			break;
		default:
		    //echo "fa_recup 1".$eol;
			$sql_req=fa_recup_session("$vl_c_variable_requete",'');
			/*
 * Nécessaire pour éviter le blocage du au trop long traitements voir conversation ici http://www.developpez.net/forums/showthread.php?p=3024462#post3024462
 * Il ne faut plus rien avoir à récupérer, dans ce script, dans les variables de session ou dans les paramètres passés
 */
			session_write_close();
			$result = _graal_requete_bd($sql_req);
			//echo $sql_req.$eol;
			while ($row = mysql_fetch_assoc($result)) {
				if ($vl_c_affichernom==1) {
					if ($vl_c_remplacement_noms=="") {
						array_push ($vl_t_nom_dest, addslashes($row['qui']));   //  noms
					} else {
						array_push ($vl_t_nom_dest, $vl_c_remplacement_noms);   //  valeur de remplacement du nom
					}
			    } else {
			    	array_push ($vl_t_nom_dest, addslashes($row['refweb']));   //  courriels
			    }
				array_push ($vl_t_cou_dest, addslashes($row['refweb']));   //  courriels
				array_push ($vl_t_intweb_dest, addslashes($row['intweb_cleunik']));   //  clé unique des intweb
				array_push ($vl_t_int_dest, addslashes($row['int_cleunik']));   //  clé unique des interlocuteurs
				array_push ($vl_t_civilite, addslashes($row['civilite']));   //  civilités des interlocuteurs
				array_push ($vl_t_prenom, addslashes($row['prenom']));   //  Prénoms des interlocuteurs
				array_push ($vl_t_patronyme, addslashes($row['nom']));   //  Nom des interlocuteurs
			}
			_graal_libere_requete_bd($result);
			break;
	}

}

$vl_e_i=-1;
foreach($vl_t_nom_dest as $vl_raf) {
  $vl_e_i++;
	switch ($vl_c_genre) {
	  case "normal":
	  case "continuer":
		  if ($vl_c_affichernom==1) {
				$vl_t_nom_dest[$vl_e_i]=rawurldecode(base64_decode($vl_t_nom_dest[$vl_e_i]));
		  }
		  $vl_tc_couweb_dest[$vl_e_i]=addslashes($vl_t_cou_dest[$vl_e_i]);
			break;
	  case "liste_attente":
			if ($vl_c_affichernom==1) {
				$vl_t_nom_dest[$vl_e_i]=$vl_t_nom_dest[$vl_e_i];
		  	}
		  	$vl_tc_couweb_dest[$vl_e_i]=$vl_t_cou_dest[$vl_e_i];
			break;
	  case "modifier":
	  		break;
	}
  switch ($vl_c_type_compte) {
    case "1": //  Compte <> Orange
      switch ($vl_c_type_envoi) {
        case 1:// un envoi par destinataire
          $vl_tc_liste_dest[$vl_e_i]='"'.$vl_t_nom_dest[$vl_e_i].'"'.'<'.$vl_t_cou_dest[$vl_e_i].'>';
          $vl_tc_liste_int[$vl_e_i]=$vl_t_int_dest[$vl_e_i];
          $vl_tc_liste_dest_memo[$vl_e_i]='"'.$vl_t_nom_dest[$vl_e_i].'"'.'<'.$vl_t_cou_dest[$vl_e_i].'>';
          break;
        case 2:// Un envoi pour tous les destinataires
          $vl_tc_liste_dest[0].=$vl_t_nom_dest[$vl_e_i].'<'.$vl_t_cou_dest[$vl_e_i].'>,';
          $vl_tc_liste_int[0].=$vl_t_int_dest[$vl_e_i].',';
          $vl_tc_liste_dest_memo[0]=$vl_t_nom_dest[$vl_e_i].'<'.$vl_t_cou_dest[$vl_e_i].'>,';
          break;
      }
      break;
    case "2": //  Compte Orange
      switch ($vl_c_type_envoi) {
        case 1:// un envoi par destinataire
          $vl_tc_liste_dest[$vl_e_i]=$vl_t_cou_dest[$vl_e_i];
          $vl_tc_liste_int[$vl_e_i]=$vl_t_int_dest[$vl_e_i];
          $vl_tc_liste_dest_memo[$vl_e_i]=$vl_t_nom_dest[$vl_e_i].'<'.$vl_t_cou_dest[$vl_e_i].'>';
          break;
        case 2:// Un envoi pour tous les destinataires
          $vl_tc_liste_dest[0].=$vl_t_cou_dest[$vl_e_i].',';
          $vl_tc_liste_int[0].=$vl_t_int_dest[$vl_e_i].',';
          $vl_tc_liste_dest_memo[0].=$vl_t_nom_dest[$vl_e_i].'<'.$vl_t_cou_dest[$vl_e_i].'>,';
          break;
      }
      break;
  }
}
switch ($vl_c_type_envoi) {
  case 2:
    $vl_tc_liste_dest[0]=substr($vl_tc_liste_dest[0],0,-1);
    $vl_tc_liste_int[0]=substr($vl_tc_liste_int[0],0,-1);
    $vl_tc_liste_dest_memo[0]=substr($vl_tc_liste_dest_memo[0],0,-1);
    break;
}

//echo "après 1->".memory_get_usage(true).$eol;
unset($vl_t_nom_dest);
unset($vl_t_int_dest);
//unset($vl_t_cou_dest); utilisé pour désinscription
//echo "après 2->".memory_get_usage(true).$eol;
//die("ciao");
switch ($vl_c_genre) {
	case "normal":
	case "liste_attente":
	case "continuer":
	    if (count($vl_tc_liste_dest)==0) {echo "Il faut au moins un destinataire ...";exit;}
	    if (count($vl_tc_liste_int)==0) {echo "Il faut au moins un interlocuteur (message a priori impossible) ...";exit;}
	    break;
	case "modifier":
		break;
}
$vl_c_action_uuid=md5(uniqid(rand(), true));
$sujet=addslashes($vl_c_sujet_initial);
$vl_e_action_cleunik_arrivee=$vl_e_action_cleunik;
if ($vl_e_action_cleunik==0){
	$vl_e_action_cleunik=_graal_requete_max("action_cleunik","_actions");
	$sql_req = "INSERT INTO _actions set action_cleunik=$vl_e_action_cleunik,choix_cleunik=$choix_cleunik_action,dateheurecreation=now(),dateheuredebut=now(),c_uuid='$vl_c_action_uuid',action_type=1,sujet='$sujet',statut=$statut_action;";
	if(_graal_exec_requete($sql_req)!='ok') {
		echo "Impossible de créer l'action !!!";
		exit;
	} else {
		if ($vl_tb_reg_00010[0]==1) {
			//	On ajoute l'utilisateur comme auteur de l'action (soumis à règle reg_00010)
			$sql_req = "INSERT INTO _graal set action_cleunik=$vl_e_action_cleunik,int_cleunik=$vl_int_cleunik_uti,act_cleunik=$vl_act_cleunik_uti,choix_cleunik=-110435,portee=$vl_e_interl,principal=1;";
			_graal_exec_requete($sql_req);
		}
	}
}
$vl_c_recherche='<a xsoftware_tracking=""';
$vl_e_nbdeb= substr_count ($vl_c_message.$vl_c_message_texte, $vl_c_recherche);
if ($vl_e_nbdeb==0){
	$vl_b_tracking=false;
} else {
	$vl_b_tracking=true;
}
$i1=5000;
$o_choix=new _graal_import();
$o_choix->req="INSERT INTO _emailing_cleweb (action_cleunik,intweb) VALUES ";
$vl_e_i=-1;
$sql_condition="";
for($vl_e_i=0;$vl_e_i< count($vl_t_intweb_dest);$vl_e_i++){
    $o_choix->dat.="($vl_e_action_cleunik,$vl_t_intweb_dest[$vl_e_i]),";
    if ($vl_e_i % $i1==0){$o_choix->execute();}
}
$o_choix->execute();
if ($vl_b_tracking==true){
  $vl_t_intweb_dest_uuid=array();
  $i1=5000;
  $o_choix=new _graal_import();
  $o_choix->req="INSERT INTO _emailing_trackin (action_cleunik,intweb,nbclic,c_uuid) VALUES ";
  $vl_e_i=-1;
  for($vl_e_i=0;$vl_e_i< count($vl_t_intweb_dest);$vl_e_i++){
  	$vl_c_dest_uuid=md5(uniqid(rand(), true));
  	array_push ($vl_t_intweb_dest_uuid, $vl_c_dest_uuid);   //  uuid pour tracking courriels
    $o_choix->dat.="($vl_e_action_cleunik,$vl_t_intweb_dest[$vl_e_i],0,'$vl_c_dest_uuid'),";
    if ($vl_e_i % $i1==0){$o_choix->execute();}
  }
  //$retour=$o_choix->req.$o_choix->dat.'(nombre destinataires->'.count($vl_t_intweb_dest).'<-';
  $o_choix->execute();
}
$i1=5000;
$o_choix=new _graal_import();
$o_choix->req="INSERT INTO _emailing_refweb (action_cleunik,refweb) VALUES ";
$vl_e_i=-1;
$sql_condition="";
for($vl_e_i=0;$vl_e_i< count($vl_tc_couweb_dest);$vl_e_i++){
	$o_choix->dat.="($vl_e_action_cleunik,'$vl_tc_couweb_dest[$vl_e_i]'),";
    if ($vl_e_i % $i1==0){
    	$vf_c_retour_emailing_refweb=$o_choix->execute();
    	if ($vf_c_retour_emailing_refweb!="ok"){
    		echo  $vf_c_retour_emailing_refweb;
    	}
    }
}
$vf_c_retour_emailing_refweb=$o_choix->execute();
if ($vf_c_retour_emailing_refweb!="ok"){
    echo  $vf_c_retour_emailing_refweb;
}
//die("fin");
unset($vl_tc_couweb_dest);
$vl_e_i=-1;
foreach($vl_t_pj_cleunik as $vl_raf) {
  $vl_e_i++;
  $vl_tc_liste_pj_cleunik[$vl_e_i]=$vl_t_pj_cleunik[$vl_e_i];
  $sql_req = "select document as pj,emplacement as emplacement,hash as hash,mime as mime FROM _documents WHERE doc_cleunik=$vl_tc_liste_pj_cleunik[$vl_e_i];";
  $result = _graal_requete_bd($sql_req);
  $row = mysql_fetch_assoc($result);
  $vl_tc_liste_pj[$vl_e_i]=$row['pj'];
  $vl_tc_liste_pj_nom[$vl_e_i]=$row['emplacement'];
  $vl_tc_liste_pj_mime[$vl_e_i]=$row['mime'];
  $vl_nom=addslashes($row['emplacement']);
  $vl_hash=addslashes($row['hash']);
  $vl_pj=addslashes($row['pj']);
  $vl_mime=addslashes($row['mime']);
  _graal_libere_requete_bd($result);
  if ($vl_tc_liste_pj_mime[$vl_e_i]=="") {
    $vl_tc_liste_pj_mime[$vl_e_i]=fa_mime_type_buffer($vl_tc_liste_pj[$vl_e_i]);
  }
  if ($vl_tc_liste_pj_mime[$vl_e_i]=="") {
    $vl_tc_liste_pj_mime[$vl_e_i]="application/octet-stream";
  }
}
//  Traitement des images intégrées
$vl_c_images_integrees="$eol$eol";
$vl_c_recherche = 'src="data:';
$vl_e_nb = substr_count ($vl_c_message, $vl_c_recherche);
$vl_pos_deb=0;
$vl_t_content_type=array();
$vl_t_base64=array();
$vl_t_id=array();
$vl_t_init=array();
$j=-1;
for($i=0;$i<$vl_e_nb;$i++) {
  $fin=strpos($vl_c_message, $vl_c_recherche,$vl_pos_deb);
  $vl_pos_deb=$fin+1;
  $fin_01=strpos($vl_c_message,':',$fin); //  Recherche à partir 'src="data:image/'
  $fin_02=strpos($vl_c_message,';',$fin_01); //  Recherche à partir 'src="data:image/'
  $type_content=substr($vl_c_message,$fin_01+1,$fin_02-$fin_01-1);
  $fin_01=strpos($vl_c_message,',',$fin); //  Recherche à partir 'src="data:image/'
  $fin_02=strpos($vl_c_message,'"',$fin_01); //  Recherche à partir 'src="data:image/'
  $base64=substr($vl_c_message, $fin_01+1,$fin_02-$fin_01-1);

  $vl_init=substr($vl_c_message, $fin,$fin_02-$fin+1);
  $vl_pos_deja=array_search($vl_init,$vl_t_init);
  if ($vl_pos_deja===false) {
    $j++;
    $vl_t_init[$j]=$vl_init;
    $vl_t_base64[$j]=$base64;
    $vl_t_content_type[$j]=$type_content;
    //  Recherche de l'image dans la base
    $ctx = hash_init('sha1');
    hash_update($ctx, "$base64");
    $hash=hash_final($ctx);
    $sql_req="SELECT hash FROM _courriel_images where hash='$hash';";
    $result=_graal_requete_bd($sql_req);
    if($ligne=mysql_fetch_row($result)) {
    } else {
      $sql_req="INSERT INTO _courriel_images set hash='$hash',image='$base64',mime='".addslashes($type_content)."';";
      _graal_exec_requete($sql_req);
    }
    $vl_t_id[$j]='src="cid:'.$hash.'"';
    $mabelleimage=chunk_split($base64);
    $vl_c_images_integrees.="--$vl_c_boundary_bis$eol";
    $vl_c_images_integrees.="Content-Type: $type_content; name=\"$hash\"$eol";
    $vl_c_images_integrees.="Content-Transfer-Encoding: base64$eol";
    $vl_c_images_integrees.="Content-ID: <$hash>$eol";
    $vl_c_images_integrees.=$eol;
    $vl_c_images_integrees.=$mabelleimage.$eol;
    $vl_c_images_integrees.=$eol.$eol;
  }
}
$vl_c_message=str_replace($vl_t_init,$vl_t_id,$vl_c_message);
$vl_c_recherche = 'background="data:';
$vl_e_nb = substr_count ($vl_c_message, $vl_c_recherche);
$vl_pos_deb=0;
for($i=0;$i<$vl_e_nb;$i++) {
  $fin=strpos($vl_c_message, $vl_c_recherche,$vl_pos_deb);
  $vl_pos_deb=$fin+1;
  $fin_01=strpos($vl_c_message,':',$fin); //  Recherche à partir 'background="data:image/'
  $fin_02=strpos($vl_c_message,';',$fin_01); //  Recherche à partir 'background="data:image/'
  $type_content=substr($vl_c_message,$fin_01+1,$fin_02-$fin_01-1);
  $fin_01=strpos($vl_c_message,',',$fin); //  Recherche à partir 'background="data:image/'
  $fin_02=strpos($vl_c_message,'"',$fin_01); //  Recherche à partir 'background="data:image/'
  $base64=substr($vl_c_message, $fin_01+1,$fin_02-$fin_01-1);

  $vl_init=substr($vl_c_message, $fin,$fin_02-$fin+1);
  $vl_pos_deja=array_search($vl_init,$vl_t_init);
  if ($vl_pos_deja===false) {
    $j++;
    $vl_t_init[$j]=$vl_init;
    $vl_t_base64[$j]=$base64;
    $vl_t_content_type[$j]=$type_content;
    //  Recherche de l'image dans la base
    $ctx = hash_init('sha1');
    hash_update($ctx, "$base64");
    $hash=hash_final($ctx);
    $sql_req="SELECT hash FROM _courriel_images where hash='$hash';";
    $result=_graal_requete_bd($sql_req);
    if($ligne=mysql_fetch_row($result)) {
    } else {
      $sql_req="INSERT INTO _courriel_images set hash='$hash',image='$base64',mime='".addslashes($type_content)."';";
      _graal_exec_requete($sql_req);
    }
    $vl_t_id[$j]='background="cid:'.$hash.'"';
    $mabelleimage=chunk_split($base64);
    $vl_c_images_integrees.="--$vl_c_boundary_bis$eol";
    $vl_c_images_integrees.="Content-Type: $type_content; name=\"$hash\"$eol";
    $vl_c_images_integrees.="Content-Transfer-Encoding: base64$eol";
    $vl_c_images_integrees.="Content-ID: <$hash>$eol";
    $vl_c_images_integrees.=$eol;
    $vl_c_images_integrees.=$mabelleimage.$eol;
    $vl_c_images_integrees.=$eol.$eol;
  }
}
$vl_c_message=str_replace($vl_t_init,$vl_t_id,$vl_c_message);
//  On décide de toujours commencer par l'émetteur
$vl_c_headers="From: $vl_c_emetteur".$eol;
if (strlen($vl_c_cheminretour)!=0) {$vl_c_headers .= "Return-Path: $vl_c_cheminretour$eol";} else {$vl_c_headers .= "Return-Path: $vl_c_emetteur$eol";}
$vl_c_headers.="Date: ".date(r).$eol;
if ($vl_c_genre!="ar") {
  if (strlen($vl_c_adressereponses)!=0) {$vl_c_headers .= "Reply-To: $vl_c_adressereponses $eol";} else {$vl_c_headers .= "Reply-To: $vl_c_emetteur $eol";}
}
/*
 * ça a l'air de poser problèmes non pas en local avec WAMP mais sur site avec haisoft ? gmail ?
 * Décommenté le 9/9/2008
 * {$vl_c_headers .= "X-Errors: $vl_c_adresseerreurs $eol";}
 */
if (strlen($vl_c_adresseerreurs)!=0) {$vl_c_headers .= "Errors-To: $vl_c_adresseerreurs$eol";}
if (strlen($vl_c_adresseerreurs)!=0) {$vl_c_headers .= "X-Errors-To: $vl_c_adresseerreurs$eol";}
$vl_c_headers .= "X-Mailer: XsOFtware Logiciel de gestion en ligne pour les TPE".$eol;
if (strlen($vl_liste_cc)!=0) {$vl_c_headers .= "Cc: $vl_liste_cc$eol";}
if (strlen($vl_liste_cci)!=0) {$vl_c_headers .= "Bcc: $vl_liste_cci$eol";}
if (strlen($vl_c_motscle)!=0) {$vl_c_headers .= "Keywords: $vl_c_motscle$eol";}
switch ($vl_c_priorite){
  case "1": case "2": case "3": case "4": case "5":
    $vl_c_headers .= "X-Priority: $vl_c_priorité$eol";
    break;
  case "0":break;
}
switch ($vl_c_sensitivity){
  case "0":break;
  case "1":$vl_c_headers .= "Sensitivity: personnal$eol";break;
  case "2":$vl_c_headers .= "Sensitivity: private$eol";break;
}
switch ($vl_c_confirmation_lecture) {
  case "1":
    if ($vl_c_adresseconfirmationlecture!="") {
        $vl_c_headers .= "Disposition-Notification-To: $vl_c_adresseconfirmationlecture$eol";
      } else {
        $vl_c_headers .= "Disposition-Notification-To: $vl_c_emetteur$eol";
      }
      $vl_c_headers .= "Disposition-Notification-Options: notify = optional,disposition, critical-content".$eol;
      break;
}

if (strlen($vl_c_idorigine)!=0) {$vl_c_headers .= "In-Reply-To: $vl_c_idorigine$eol";}
if (strlen($vl_c_references)!=0) {
  $vl_c_headers .= "References: $vl_c_references$eol";
} else {
  $vl_c_headers .= "References: $vl_c_action_uuid$eol";
}


$vl_c_message_brut=$vl_c_message;
$vl_c_message_brut_texte=$vl_c_message_texte;
switch ($vl_c_genre) {
  case "modifier":
  	$vl_c_message_brut=addslashes($vl_c_message_brut);
	$vl_c_message_brut_texte=addslashes($vl_c_message_brut_texte);
	$vl_c_sujet_initial=addslashes($vl_c_sujet_initial);
  	$ctx = hash_init('sha1');
    hash_update($ctx, "$vl_c_message_brut");
    $hash=hash_final($ctx);
	$sql_req="UPDATE _courriel_en_mes set hash='$hash',message='$vl_c_message_brut',message_texte='$vl_c_message_brut_texte' where courriel_en_mes_cleunik=$vl_e_courriel_en_mes_cleunik;";
    $vl_c_retour=_graal_exec_requete($sql_req);
    if ($vl_c_retour!="ok"){die("Modification échouée !!!!".EOL.$vl_c_retour);}
	$sql_req="UPDATE _courriel_en set sujet='$vl_c_sujet_initial' where courriel_en_mes_cleunik=$vl_e_courriel_en_mes_cleunik;";
	$vl_c_retour=_graal_exec_requete($sql_req);
	if ($vl_c_retour!="ok"){die("Modification échouée !!!!".EOL.$vl_c_retour);}
	die("Modification effectuée.");
	break;
}
$desinscription=$vl_c_message;
$desinscription_texte=$vl_c_message_texte;
//*******************************************
//  Modification ponctuelle des paramètres du serveur
//*******************************************
ini_set('SMTP',$vl_c_smtp);
ini_set('sendmail_from',$vl_c_sendmail_from);
$vl_b_ok=true;
for($vl_e_i=0;$vl_e_i< count($vl_tc_liste_dest);$vl_e_i++){
  //$vl_c_id="<"._graal_requete_uuid().$vs_mesid.">";	// vu le 18 avril 2009 que cela faisait trop de requêtes. Remplacé par fonction php
	$vl_c_id="<".md5(uniqid(rand(), true)).$vs_mesid.">";
  $vl_c_headers_id="Message-ID: $vl_c_id $eol";

  $vl_c_message=$desinscription;
  $vl_c_message_texte=$desinscription_texte;
  $vl_c_message=pf_remplacement_desinscription_html($vl_c_message,"&p01=".$vl_t_intweb_dest[$vl_e_i]."&p02=".$vl_t_cou_dest[$vl_e_i]."&");
  $vl_c_message_texte=pf_remplacement_desinscription_text($vl_c_message_texte,"&p01=".$vl_t_intweb_dest[$vl_e_i]."&p02=".$vl_t_cou_dest[$vl_e_i]."&");
  $vl_c_message=pf_remplacement_sondage_html($vl_c_message,"&p01=".$vl_t_intweb_dest[$vl_e_i]."&p02=".$vl_t_cou_dest[$vl_e_i]."&");
  $vl_c_message_texte=pf_remplacement_sondage_text($vl_c_message_texte,"&p01=".$vl_t_intweb_dest[$vl_e_i]."&p02=".$vl_t_cou_dest[$vl_e_i]."&");

	if ($vl_b_tracking==true){
		$vl_c_message=pf_remplacement_tracking($vl_t_intweb_dest[$vl_e_i],$vl_t_cou_dest[$vl_e_i],$vl_c_message,$vl_t_intweb_dest_uuid[$vl_e_i]);
	}
	$vl_c_message=pf_remplacement_ouverture($vl_t_intweb_dest[$vl_e_i],$vl_t_cou_dest[$vl_e_i],$vl_c_message);
	//die ($vl_c_message);
	/*
	 * Déplacé le bloc de tronquage tout à la fin, une fois tout le message constitué
	 */
	// désactivé le 15 décembre 2008 lors de constatation que des lignes avec liens étaient tronquées
	////  On saucissonne le message en lignes de 70 caractères
	//$vl_c_message=wordwrap($vl_c_message, 70);
	// réactivé le 16 décembre 2008 lors de constatation que des quelques mails étaient rejetés car trop long
	////  On saucissonne le message en lignes de 70 caractères
	$vl_c_message=str_replace("##__01__##",$vl_t_civilite[$vl_e_i],$vl_c_message);
	$vl_c_message=str_replace("##__02__##",$vl_t_prenom[$vl_e_i],$vl_c_message);
	$vl_c_message=str_replace("##__03__##",$vl_t_patronyme[$vl_e_i],$vl_c_message);

	$vl_c_message_texte=str_replace("##__01__##",$vl_t_civilite[$vl_e_i],$vl_c_message_texte);
	$vl_c_message_texte=str_replace("##__02__##",$vl_t_prenom[$vl_e_i],$vl_c_message_texte);
	$vl_c_message_texte=str_replace("##__03__##",$vl_t_patronyme[$vl_e_i],$vl_c_message_texte);

	$vl_c_message=wordwrap($vl_c_message, 70);
	$vl_c_message_texte=wordwrap($vl_c_message_texte, 70);
    switch ($vl_c_type_courriel) {
      case 1: //  Envoi texte
        $vl_c_headers_inter01="MIME-Version: 1.0".$eol;
        if (count($vl_tc_liste_pj)!=0) {
          if ($vl_c_integre_pj_sipossible==1) {
            $vl_c_headers_inter01.="Content-Type: multipart/mixed; boundary=\"$vl_c_boundary\"$eol";
          } else {
            $vl_c_headers_inter01.="Content-Type: multipart/related; boundary=\"$vl_c_boundary\"$eol";
          }
          $vl_c_header_fin=$vl_c_headers.$vl_c_headers_id.$vl_c_headers_inter01;
          $vl_c_message_fin=$eol."--$vl_c_boundary".$eol;
          $vl_c_message_fin.="Content-type: text/plain; charset=utf-8".$eol;  //  Par défaut pour du texte
          $vl_c_message_fin.=$sautligne;
          $vl_c_message_fin.=$vl_c_message;
        } else {
          //  Texte seul, sans pièces jointes
          $vl_c_headers_inter01.="Content-type: text/plain; charset=utf-8".$eol;  //  Par défaut pour du texte
          $vl_c_header_fin=$vl_c_headers.$vl_c_headers_id.$vl_c_headers_inter01;
          $vl_c_message_fin=$sautligne.$vl_c_message.$eol.$eol;
        }
        $vl_c_message_pj="";
        for($vl_e_j=0;$vl_e_j<count($vl_tc_liste_pj);$vl_e_j++){
          if ($vl_tc_liste_pj_nom[$vl_e_j]!="") {
            $vl_c_pj_base64=chunk_split(base64_encode($vl_tc_liste_pj[$vl_e_j]));
            $vl_c_message_pj.=$eol.$eol."--$vl_c_boundary".$eol;
            $vl_c_message_pj.="Content-Type: $vl_tc_liste_pj_mime[$vl_e_j]; name=\"".$vl_tc_liste_pj_nom[$vl_e_j]."\"$eol";
            $vl_c_message_pj.="Content-Transfer-Encoding: base64$eol";
            // Petit plus pour les fichiers joints : Il est possible de demander à ce que le fichier soit si possible affiché dans le corps du mail
            $vl_c_message_pj.="Content-Disposition: inline; filename=\"".($vl_tc_liste_pj_nom[$vl_e_j])."\"$eol";
            // Il est indispensable d'introduire une ligne vide entre l'entête et le texte
            $vl_c_message_pj.=$eol;
            $vl_c_message_pj.=$vl_c_pj_base64.$eol;
            $vl_c_message_pj.=$eol.$eol;
          }
        }
        if ($vl_c_message_pj!="") {$vl_c_message_fin.=$vl_c_message_pj;}
        break;
      case 2: //  Envoi HTML
        //	gestion "manuelle" de la partie texte d'un message html depuis le 15 décembre 2008
				//$vl_message_brut=strip_tags($vl_c_message);
				$vl_message_brut=$vl_c_message_texte;
        $vl_c_header_fin=$vl_c_headers.$vl_c_headers_id."MIME-Version: 1.0".$eol;
        //  4 cas de figures :
        //  - 1° -> Avec Pièces jointes et avec images incorporées
        //  - 2° -> Avec Pièces jointes et sans images incorporées
        //  - 3° -> Sans pièces jointes et avec images incorporées
        //  - 4° -> Sans pièces jointes et sans images incorporées
        if ((count($vl_tc_liste_pj)!=0) and (count($vl_t_id)!=0)) {
          //  - 1° -> Avec Pièces jointes et avec images incorporées
          $vl_c_header_fin.="Content-type: multipart/mixed; boundary=\"$vl_c_boundary\"$eol";
          $vl_c_message_fin="This is a multi-part message in MIME format.";
          $vl_c_message_fin.=$eol."--$vl_c_boundary".$eol;
          $vl_c_message_fin.="Content-type: multipart/alternative; boundary=\"$vl_c_boundary_ter\"$eol";
          $vl_c_message_fin.=$eol."--$vl_c_boundary_ter".$eol;
          $vl_c_message_fin.="Content-type: text/plain; charset=utf-8".$eol;  //  Par défaut pour du texte
          $vl_c_message_fin.="Content-Disposition: inline;".$eol;
          $vl_c_message_fin.=$sautligne;
          $vl_c_message_fin.=$vl_message_brut.$eol;
          $vl_c_message_fin.=$eol."--$vl_c_boundary_ter".$eol;
          $vl_c_message_fin.="Content-Type: multipart/related; boundary=\"$vl_c_boundary_bis\"$eol";
          $vl_c_message_fin.=$eol."--$vl_c_boundary_bis".$eol;
          $vl_c_message_fin.="Content-type: text/html; charset=utf-8".$eol;  //  Par défaut pour du html
          $vl_c_message_fin.="Content-Disposition: inline;".$eol;
          $vl_c_message_fin.=$sautligne;
          $vl_c_message_fin.="<html>$vl_c_message</html>";
          $vl_c_message_fin.=$vl_c_images_integrees;
          $vl_c_message_fin.=$eol.$eol."--$vl_c_boundary_bis--".$eol;
          $vl_c_message_fin.=$eol.$eol."--$vl_c_boundary_ter--".$eol;
          $vl_c_message_pj="";
          for($vl_e_j=0;$vl_e_j<count($vl_tc_liste_pj);$vl_e_j++){
            if ($vl_tc_liste_pj_nom[$vl_e_j]!="") {
              $vl_c_pj_base64=chunk_split(base64_encode($vl_tc_liste_pj[$vl_e_j]));
              $vl_c_message_pj.=$eol.$eol."--$vl_c_boundary".$eol;
              $vl_c_message_pj.="Content-Type: $vl_tc_liste_pj_mime[$vl_e_j]; name=\"".($vl_tc_liste_pj_nom[$vl_e_j])."\"$eol";
              $vl_c_message_pj.="Content-Transfer-Encoding: base64$eol";
              // Petit plus pour les fichiers joints : Il est possible de demander à ce que le fichier soit si possible affiché dans le corps du mail
              $vl_c_message_pj.="Content-Disposition: inline; filename=\"".($vl_tc_liste_pj_nom[$vl_e_j])."\"$eol";
              // Il est indispensable d'introduire une ligne vide entre l'entête et le texte
              $vl_c_message_pj.=$eol;
              $vl_c_message_pj.=$vl_c_pj_base64.$eol;
              $vl_c_message_pj.=$eol.$eol;
            }
          }
          $vl_c_message_fin.=$vl_c_message_pj;
        }
        if ((count($vl_tc_liste_pj)!=0) and (count($vl_t_id)==0)) {
          //  - 2° -> Avec Pièces jointes et sans images incorporées
          $vl_c_header_fin.="Content-type: multipart/mixed; boundary=\"$vl_c_boundary\"$eol";
          $vl_c_message_fin="This is a multi-part message in MIME format.";
          $vl_c_message_fin.=$eol."--$vl_c_boundary".$eol;
          $vl_c_message_fin.="Content-type: multipart/alternative; boundary=\"$vl_c_boundary_ter\"$eol";
          $vl_c_message_fin.=$eol."--$vl_c_boundary_ter".$eol;
          $vl_c_message_fin.="Content-type: text/plain; charset=utf-8".$eol;  //  Par défaut pour du texte
          $vl_c_message_fin.="Content-Disposition: inline;".$eol;
          $vl_c_message_fin.=$sautligne;
          $vl_c_message_fin.=$vl_message_brut.$eol;
          $vl_c_message_fin.=$eol."--$vl_c_boundary_ter".$eol;
          $vl_c_message_fin.="Content-type: text/html; charset=utf-8".$eol;  //  Par défaut pour du html
          $vl_c_message_fin.="Content-Disposition: inline;".$eol;
          $vl_c_message_fin.=$sautligne;
          $vl_c_message_fin.="<html>$vl_c_message</html>";
          $vl_c_message_fin.=$eol.$eol."--$vl_c_boundary_ter--".$eol;
          $vl_c_message_pj="";
          for($vl_e_j=0;$vl_e_j<count($vl_tc_liste_pj);$vl_e_j++){
            if ($vl_tc_liste_pj_nom[$vl_e_j]!="") {
              $vl_c_pj_base64=chunk_split(base64_encode($vl_tc_liste_pj[$vl_e_j]));
              $vl_c_message_pj.=$eol.$eol."--$vl_c_boundary".$eol;
              $vl_c_message_pj.="Content-Type: $vl_tc_liste_pj_mime[$vl_e_j]; name=\"".($vl_tc_liste_pj_nom[$vl_e_j])."\"$eol";
              $vl_c_message_pj.="Content-Transfer-Encoding: base64$eol";
              // Petit plus pour les fichiers joints : Il est possible de demander à ce que le fichier soit si possible affiché dans le corps du mail
              $vl_c_message_pj.="Content-Disposition: inline; filename=\"".($vl_tc_liste_pj_nom[$vl_e_j])."\"$eol";
              // Il est indispensable d'introduire une ligne vide entre l'entête et le texte
              $vl_c_message_pj.=$eol;
              $vl_c_message_pj.=$vl_c_pj_base64.$eol;
              $vl_c_message_pj.=$eol.$eol;
            }
          }
          $vl_c_message_fin.=$vl_c_message_pj;
        }
        if ((count($vl_tc_liste_pj)==0) and (count($vl_t_id)!=0)) {
          //  - 3° -> Sans pièces jointes et avec images incorporées
          $vl_c_header_fin.="Content-type: multipart/alternative; boundary=\"$vl_c_boundary\"$eol";
          $vl_c_message_fin="This is a multi-part message in MIME format.";
          $vl_c_message_fin.=$eol."--$vl_c_boundary".$eol;
          $vl_c_message_fin.="Content-type: text/plain; charset=utf-8".$eol;  //  Par défaut pour du texte
          $vl_c_message_fin.="Content-Disposition: inline;".$eol;
          $vl_c_message_fin.=$sautligne;
          $vl_c_message_fin.=$vl_message_brut.$eol;
          $vl_c_message_fin.=$eol."--$vl_c_boundary".$eol;
          $vl_c_message_fin.="Content-Type: multipart/related; boundary=\"$vl_c_boundary_bis\"$eol";
          $vl_c_message_fin.=$eol."--$vl_c_boundary_bis".$eol;
          $vl_c_message_fin.="Content-type: text/html; charset=utf-8".$eol;  //  Par défaut pour du html
          $vl_c_message_fin.="Content-Disposition: inline;".$eol;
          $vl_c_message_fin.=$sautligne;
          $vl_c_message_fin.="<html>$vl_c_message</html>";
          $vl_c_message_fin.=$vl_c_images_integrees;
          $vl_c_message_fin.=$eol.$eol."--$vl_c_boundary_bis--".$eol;
        }
        if ((count($vl_tc_liste_pj)==0) and (count($vl_t_id)==0)) {
          //  - 4° -> Sans pièces jointes et sans images incorporées
          $vl_c_header_fin.="Content-type: multipart/alternative; boundary=\"$vl_c_boundary\"$eol";
          $vl_c_message_fin="This is a multi-part message in MIME format.";
          $vl_c_message_fin.=$eol."--$vl_c_boundary".$eol;
          $vl_c_message_fin.="Content-type: text/plain; charset=utf-8".$eol;  //  Par défaut pour du texte
          $vl_c_message_fin.="Content-Disposition: inline;".$eol;
          $vl_c_message_fin.=$sautligne;
          $vl_c_message_fin.=$vl_message_brut.$eol;
          $vl_c_message_fin.=$eol."--$vl_c_boundary".$eol;
          $vl_c_message_fin.="Content-type: text/html; charset=utf-8".$eol;  //  Par défaut pour du html
          $vl_c_message_fin.="Content-Disposition: inline;".$eol;
          $vl_c_message_fin.=$sautligne;
          $vl_c_message_fin.="<html>$vl_c_message</html>";
        }
        break;
    }
    switch ($vl_c_type_courriel) {
      case 1:
        if (count($vl_tc_liste_pj)!=0) {
          $vl_c_message_fin.=$eol.$eol."--$vl_c_boundary--".$eol;
        } else {
          //  Texte seul, sans pièces jointes
        }
        break;
      case 2:
        $vl_c_message_fin.=$eol.$eol."--$vl_c_boundary--".$eol;
        break;
    }
  //mb_internal_encoding('UTF-8');
  //if (mb_send_mail($vl_tc_liste_dest[$vl_e_i],$vl_c_sujet, $vl_c_message_fin, $vl_c_header_fin) == true){
  //if (mail($vl_tc_liste_dest[$vl_e_i],mb_encode_mimeheader($vl_c_sujet, 'UTF-8', 'B'), $vl_c_message_fin, $vl_c_header_fin) == true){
  //if (mail($vl_tc_liste_dest[$vl_e_i],header_quoted_printable_encode_xof(base64_encode($vl_c_sujet),$encoding='UTF-8',$quoi="B"), $vl_c_message_fin, $vl_c_header_fin) == true){  ne fonctionne pas
	// le 15 décembre 2008, désactivé l'encodage du sujet pour voir si ce n'est pas ce qui fait considérer comme spam  chez Orange
	//if (mail($vl_tc_liste_dest[$vl_e_i],header_quoted_printable_encode_xof($vl_c_sujet), $vl_c_message_fin, $vl_c_header_fin) == true){
	// le 16 décembre 2008, réactivé l'encodage du sujet car cela ne change rien : toujours considéré comme spam  chez Orange
	//if (mail($vl_tc_liste_dest[$vl_e_i],$vl_c_sujet, $vl_c_message_fin, $vl_c_header_fin) == true){
	// le 10 février 2009 supprimé temporairement encodage sujet
	//	if (mail($vl_tc_liste_dest[$vl_e_i],header_quoted_printable_encode_xof($vl_c_sujet), $vl_c_message_fin, $vl_c_header_fin) == true){
	$vl_c_sujet=$vl_c_sujet_initial;
	$vl_c_sujet=str_replace("##__01__##",$vl_t_civilite[$vl_e_i],$vl_c_sujet);
	$vl_c_sujet=str_replace("##__02__##",$vl_t_prenom[$vl_e_i],$vl_c_sujet);
	$vl_c_sujet=str_replace("##__03__##",$vl_t_patronyme[$vl_e_i],$vl_c_sujet);
	//die($vl_c_sujet);
	if ($simulation_envoi==false){
		if (mail($vl_tc_liste_dest[$vl_e_i],header_quoted_printable_encode_xof($vl_c_sujet), $vl_c_message_fin, $vl_c_header_fin,"-f $vl_c_sendmail_from") == true){
		  } else {
		    //$vl_b_ok=false;
		    	$retour.="Le courriel n'a pas été envoyé aux destinataires".$eol;
				//break;
		  }
	}

}
//echo $retour;
//echo ("Fin envoyé à $vl_e_i adresses");
//*******************************************
//  Remise en l'état des paramètres du serveur
//*******************************************
ini_restore('SMTP');
ini_restore('sendmail_from');
//ini_restore('smtp_port');
if ($simulation_envoi==false){
	$vl_b_ok=true;
}
if ($vl_b_ok==true) {
	$destinataires="";
	for($vl_e_i=0;$vl_e_i< count($vl_tc_liste_dest_memo);$vl_e_i++){
	  $destinataires.=addslashes($vl_tc_liste_dest_memo[$vl_e_i]).",$eol";
	}
  if ($vl_e_action_cleunik_arrivee=='0') {
    //  Ajout action

    $message=addslashes($vl_c_message);
		$vl_c_message_brut=addslashes($vl_c_message_brut);
		$vl_c_message_brut_texte=addslashes($vl_c_message_brut_texte);
    $header=addslashes($vl_c_header_fin);
    $datas_vrac="";
    $datas_vrac.=fa_xcree_entete_xml();
    $datas_vrac.='<parametres>';
    $datas_vrac.='<int_destinataires_cc data=""/>';
    $datas_vrac.='<int_destinataires_cci data=""/>';
    $datas_vrac.='<nom_cou_destinataires_cc data=""/>';
    $datas_vrac.='<nom_cou_destinataires_cci data=""/>';
    $datas_vrac.='<int_destinataires data=""/>';
    $datas_vrac.='<nom_cou_destinataires data=""/>';
    $datas_vrac.='<nom_images_integrees_nombre data="'.count($vl_t_id).'"/>';
    for($vl_e_j=0;$vl_e_j< count($vl_t_id);$vl_e_j++){
      $datas_vrac.='<nom_images_integrees data="'.fa_ent_xml($vl_t_id[$vl_e_j]).'"/>';
    }
    $datas_vrac.='<pj_nombre data="'.count($vl_tc_liste_pj_nom).'"/>';
    for($vl_e_j=0;$vl_e_j< count($vl_tc_liste_pj_nom);$vl_e_j++){
      $datas_vrac.='<nom_pj data="'.fa_ent_xml($vl_tc_liste_pj_nom[$vl_e_j]).'"/>';
      $datas_vrac.='<cleunik_pj data="'.fa_ent_xml($vl_tc_liste_pj_cleunik[$vl_e_j]).'"/>';
    }
    $datas_vrac.='<int_integre_pj_sipossible data="'.$vl_c_integre_pj_sipossible.'"/>';
    $datas_vrac.='<int_priorite data="'.$vl_c_priorite.'"/>';
    $datas_vrac.='<int_sensitivity data="'.$vl_c_sensitivity.'"/>';
    $datas_vrac.='<int_type_courriel data="'.$vl_c_type_courriel.'"/>';
		$datas_vrac.='<int_vl_c_affichernom data="'.$vl_c_affichernom.'"/>';
		$datas_vrac.='<remplacement_noms data="'.$vl_c_remplacement_noms.'"/>';
    $datas_vrac.='</parametres>';
      //  On rattache toutes les pièces jointes à l'action
      for($vl_e_j=0;$vl_e_j< count($vl_tc_liste_pj_nom);$vl_e_j++){
        $sql_req_01 = "INSERT INTO _documents_rattachement set doc_cleunik=".$vl_tc_liste_pj_cleunik[$vl_e_j].",rat_cleunik=$vl_e_action_cleunik,portee=$vl_e_piejoi;";
        _graal_exec_requete($sql_req_01);
      }
       //  Recherche du message dans la base
      $ctx = hash_init('sha1');
      hash_update($ctx, "$vl_c_message_brut");
      $hash=hash_final($ctx);
      $sql_req="SELECT courriel_en_mes_cleunik as cleunik FROM _courriel_en_mes where hash='$hash';";
      $result=_graal_requete_bd($sql_req);
      if($ligne=mysql_fetch_row($result)) {
        $vl_courriel_en_mes_cleunik=$ligne[0];
      } else {
        $vl_courriel_en_mes_cleunik=_graal_requete_max("courriel_en_mes_cleunik","_courriel_en_mes");
        $sql_req="INSERT INTO _courriel_en_mes set courriel_en_mes_cleunik=$vl_courriel_en_mes_cleunik,hash='$hash',message='$vl_c_message_brut',message_texte='$vl_c_message_brut_texte';";
        _graal_exec_requete($sql_req);
        //$req_01=$sql_req;
      }
      $sql_req="INSERT INTO _courriel_en set action_cleunik=$vl_e_action_cleunik,courriel_en_mes_cleunik=$vl_courriel_en_mes_cleunik,sujet='$sujet',header='$header',destinataires='$destinataires',type=$vl_c_type_courriel,datas_vrac='$datas_vrac',mel_id='$vl_c_action_uuid';";
      _graal_exec_requete($sql_req);
      //$req_02=$sql_req;
      //die($req_01.EOL.$req_02);

  } else {
    $sql_req = "SELECT destinataires AS destinataires FROM _courriel_en where action_cleunik=$vl_e_action_cleunik;";
    $result = _graal_requete_bd($sql_req);
    $row = mysql_fetch_assoc($result);
    _graal_libere_requete_bd($result);
    $new_destinataires=$row['destinataires'].$destinataires;
    $sql_req="UPDATE _courriel_en set destinataires='$new_destinataires' where action_cleunik=$vl_e_action_cleunik;";
    _graal_exec_requete($sql_req);
  }
  //echo ("00 fin finale $eol");

	$sql_req="DELETE a FROM _emailing_cleweb_attente a INNER JOIN _emailing_cleweb c ON a.intweb = c.intweb AND a.action_cleunik = c.action_cleunik;";
	$vf_c_echo=_graal_exec_requete($sql_req);
	$cr_delete=$vf_c_echo;
  $int_deja=array();$act_ratta=array();$int_ratta=array();
  $sql_req="SELECT int_cleunik from _graal where action_cleunik=$vl_e_action_cleunik and choix_cleunik=$choix_cleunik_destinataire and portee=$vl_e_interl;";
  $result = _graal_requete_bd($sql_req);
  while ($row = mysql_fetch_assoc($result)) {
    array_push ($int_deja, $row['int_cleunik']);
  }
  _graal_libere_requete_bd($result);

  //  On rattache tous les interlocuteurs destinataires sauf s'ils sont déja rattachés
	if ($param_generaux_graal_101!=2){
		$o_choix=new _graal_import();
		$o_choix->req="INSERT INTO _graal (action_cleunik,int_cleunik,act_cleunik,choix_cleunik,portee,principal) VALUES ";
		for($vl_e_i=0;$vl_e_i< count($vl_tc_liste_int);$vl_e_i++){
		  $liste_acteurs.=$vl_tc_liste_int[$vl_e_i].",";
		}
		$liste_acteurs=substr($liste_acteurs,0,-1);
		$sql_req="SELECT act_cleunik as act_cleunik,int_cleunik as int_cleunik FROM _act_interlo where int_cleunik in ($liste_acteurs);";
		$result = _graal_requete_bd($sql_req);
		while ($row = mysql_fetch_assoc($result)){
			array_push($act_ratta,$row['act_cleunik']);
			array_push($int_ratta,$row['int_cleunik']);
		}
		_graal_libere_requete_bd($result);
		$liste_acteurs="";
	  	$i1=5000;
		$i2=1;
		for($vl_e_i=0;$vl_e_i< count($int_ratta);$vl_e_i++){
	    	$vl_e_trouve=array_search($int_ratta[$vl_e_i], $int_deja);
	    	if ($vl_e_trouve===false){
	      		array_push ($int_deja, $int_ratta[$vl_e_i]);
	    		$i2++;
				$o_choix->dat.="($vl_e_action_cleunik,$int_ratta[$vl_e_i],$act_ratta[$vl_e_i],$choix_cleunik_destinataire,$vl_e_interl,1),";
				if ($i2 % $i1==0){
					$o_choix->execute();
				}
	    	}
	  	}
	  	$o_choix->execute();
	}
}
//$vl_b_ok=false;
//echo $cr_delete.$eol;
//echo "après 3->".memory_get_usage(true).$eol;
//$vl_b_ok=false;
if ($vl_b_ok==false) {
  echo "".$sep_ret.$retour.$eol.$vl_c_sujet_initial.$eol."$vl_c_message_fin".$eol;
	//echo "".$sep_ret.$retour.$eol.$vl_c_sujet_initial.$eol.$vl_c_message_brut.$eol.$vl_c_message.$eol.$param_desinscription.$eol;
} else {
  echo "0".$sep_ret.$eol.$retour.$eol.$vl_c_sujet_initial.$eol.$sep_ret.$vl_e_action_cleunik.$sep_ret;
	//echo "0".$sep_ret.$eol.$retour.$eol.$vl_c_sujet_initial.$eol.$sep_ret.$vl_e_action_cleunik.$sep_ret.$vl_c_message_brut.$sep_ret;
}
function pf_remplacement_desinscription_html($vl_c_message,$chaine) {
	$a_remplacer=array();
	$remplacement=array();
	$matches=array();
	preg_match_all('#<bloc_desinscription_xsoftware>(.+?)</bloc_desinscription_xsoftware>#i', $vl_c_message, $matches, PREG_SET_ORDER);
	$i=0;
	foreach ( $matches as $reponse ) {
		$a_remplacer[$i]=$reponse[0];
		$quellecle_unik=explode('_',$reponse[1]);
		$cleunik=$quellecle_unik[1];
		$sql_req="SELECT blocnote_riche as desins FROM _documents WHERE doc_cleunik=$cleunik;";
		$result = _graal_requete_bd($sql_req);
		$row=mysql_fetch_assoc($result);
		$remplacement[$i]=$row['desins'];
		$remplacement[$i]=str_replace("?pxx=yyy",$chaine,$remplacement[$i]);
		_graal_libere_requete_bd($result);
		$i++;
	}
	$vl_c_message = str_replace($a_remplacer, $remplacement, $vl_c_message);
	return $vl_c_message;
}
function pf_remplacement_desinscription_text($vl_c_message,$chaine) {
	$a_remplacer=array();
	$remplacement=array();
	$matches=array();
	preg_match_all('#§bloc_desinscription_xsoftware_(.+?)_§#i', $vl_c_message, $matches, PREG_SET_ORDER);
	$i=0;
	foreach ( $matches as $reponse ) {
		$a_remplacer[$i]=$reponse[0];
		$cleunik=$reponse[1];
		$sql_req="SELECT blocnote_brut as desins FROM _documents WHERE doc_cleunik=$cleunik;";
		$result = _graal_requete_bd($sql_req);
		$row=mysql_fetch_assoc($result);
		$remplacement[$i]=$row['desins'];
		$remplacement[$i]=str_replace("?pxx=yyy",$chaine."  ",$remplacement[$i]);
		_graal_libere_requete_bd($result);
		$i++;
	}
	$vl_c_message = str_replace($a_remplacer, $remplacement, $vl_c_message);
	return $vl_c_message;
}
function pf_remplacement_sondage_html($vl_c_message,$chaine) {
	$a_remplacer=array();
	$remplacement=array();
	$matches=array();
	preg_match_all('#<bloc_sondage_xsoftware>(.+?)</bloc_sondage_xsoftware>#i', $vl_c_message, $matches, PREG_SET_ORDER);
	$i=0;
	foreach ( $matches as $reponse ) {
		$a_remplacer[$i]=$reponse[0];
		$quellecle_unik=explode('_',$reponse[1]);
		$cleunik=$quellecle_unik[1];
		$sql_req="SELECT blocnote_riche as desins FROM _documents WHERE doc_cleunik=$cleunik;";
		$result = _graal_requete_bd($sql_req);
		$row=mysql_fetch_assoc($result);
		$remplacement[$i]=$row['desins'];
		$remplacement[$i]=str_replace("?pxx=yyy",$chaine,$remplacement[$i]);
		_graal_libere_requete_bd($result);
		$i++;
	}
	$vl_c_message = str_replace($a_remplacer, $remplacement, $vl_c_message);
	return $vl_c_message;
}
function pf_remplacement_sondage_text($vl_c_message,$chaine) {
	$a_remplacer=array();
	$remplacement=array();
	$matches=array();
	preg_match_all('#§bloc_sondage_xsoftware_(.+?)_§#i', $vl_c_message, $matches, PREG_SET_ORDER);
	$i=0;
	foreach ( $matches as $reponse ) {
		$a_remplacer[$i]=$reponse[0];
		$cleunik=$reponse[1];
		$sql_req="SELECT blocnote_brut as desins FROM _documents WHERE doc_cleunik=$cleunik;";
		$result = _graal_requete_bd($sql_req);
		$row=mysql_fetch_assoc($result);
		$remplacement[$i]=$row['desins'];
		$remplacement[$i]=str_replace("?pxx=yyy",$chaine."  ",$remplacement[$i]);
		_graal_libere_requete_bd($result);
		$i++;
	}
	$vl_c_message = str_replace($a_remplacer, $remplacement, $vl_c_message);
	return $vl_c_message;
}


function pf_remplacement_tracking($vv_intweb_cleunik,$vv_refweb,$vl_c_message,$vl_c_intweb_dest_uuid) {
	global $param_generaux_graal_170;
	$matches=array();
	preg_match_all('#<a xsoftware_tracking="" (.+?)>#i', $vl_c_message, $matches, PREG_SET_ORDER);
	$a_remplacer=array();
	$remplacement=array();
	$i=0;
	foreach ( $matches as $reponse ) {
		$a_remplacer[$i]=$reponse[1];
		$toto=explode('href="',$reponse[1]);
		$titi=substr($toto[1],0,-1);
		$a_remplacer[$i]=$reponse[0];
		$remplacement[$i]="<a href='$param_generaux_graal_170"."?p01=!$vv_intweb_cleunik!$vl_c_intweb_dest_uuid!$titi!$vv_refweb'>";
		$i++;
	}
	$vl_c_message = str_replace($a_remplacer, $remplacement, $vl_c_message);
	return $vl_c_message;
}
function pf_remplacement_ouverture($vv_intweb_cleunik,$vv_refweb,$vl_c_message) {
	global $param_generaux_graal_196;
	global $vl_e_action_cleunik;
	$vl_c_dest_uuid=md5(uniqid(rand(), true));
	$waram_generaux_graal_196=$param_generaux_graal_196."?p01=!$vv_intweb_cleunik!$vl_c_dest_uuid!$vv_refweb!$vl_e_action_cleunik";
	$a_remplacer='<img src="'.$param_generaux_graal_196.'" style="display: none;" border="0">';
	$remplacemen='<img src="'.$waram_generaux_graal_196.'" style="display: none;" border="0">';
	$vl_c_message = str_replace($a_remplacer, $remplacemen, $vl_c_message);
	//$vl_c_message="$param_generaux_graal_196";
	return $vl_c_message;
}
/*
function obsolete_pf_remplacement_desinscription($vl_c_message,$vv_quoi) {
$vl_c_chaine_a_remplacer="";
$vl_c_recherche = '&lt;##bloc_desinscription&gt;';
$vl_e_nb = substr_count ($vl_c_message, $vl_c_recherche);
$vl_e_taille_deb=strlen($vl_c_recherche);
if ($vl_e_nb==0) {
	$vl_c_recherche='<##bloc_desinscription>';
	$vl_e_nb = substr_count ($vl_c_message, $vl_c_recherche);
	$vl_e_taille_deb=strlen($vl_c_recherche);
}
if ($vl_e_nb!=0) {
	$vl_e_nb=0;
  $pos_deb=strpos($vl_c_message, $vl_c_recherche,0);
	$vl_c_recherche = '&lt;/##bloc_desinscription&gt;';
	$vl_e_nb = substr_count ($vl_c_message, $vl_c_recherche);
	if ($vl_e_nb==0) {
		$vl_c_recherche='</##bloc_desinscription>';
		$vl_e_nb = substr_count($vl_c_message, $vl_c_recherche);
	}
	if ($vl_e_nb!=0) {
		$pos_fin=strpos($vl_c_message, $vl_c_recherche,$pos_deb);
		$vl_e_taille_fin=strlen($vl_c_recherche);
	}
	$taille_cle=$pos_fin-($pos_deb+$vl_e_taille_deb);
	$vl_c_cle=substr($vl_c_message,$pos_deb+$vl_e_taille_deb,$taille_cle);
	//$vl_c_chaine_a_remplacer=substr($vl_c_message,$pos_deb,$pos_fin+$vl_e_taille_fin);
	$vl_e_longueur=$vl_e_taille_deb+$vl_e_taille_fin+$taille_cle;
	$vl_c_chaine_a_remplacer=substr($vl_c_message,$pos_deb,$vl_e_longueur);

}
if (trim($vl_c_chaine_a_remplacer)!="") {
	if ($vv_quoi=='html') {
		$sql_req="SELECT blocnote_riche as desins FROM _documents WHERE doc_cleunik=$vl_c_cle;";
	} else {
		$sql_req="SELECT blocnote_brut as desins FROM _documents WHERE doc_cleunik=$vl_c_cle;";
	}
	$result = _graal_requete_bd($sql_req);
	$row=mysql_fetch_assoc($result);
	$vl_c_remplacement=$row['desins'];
	_graal_libere_requete_bd($result);
	$vl_c_message=str_replace($vl_c_chaine_a_remplacer,$vl_c_remplacement,$vl_c_message);
	return $vl_c_message;
} else {
	return "";
}
}
/*
function obsolete_pf_remplacement_tracking($vv_intweb_cleunik,$vv_refweb,$vl_c_message,$vl_c_intweb_dest_uuid) {
	/*
		Chaine recherchée sous cette forme
		$vl_c_message="http://clients.xsoftware.fr/marketing/Formulaires_types_sites/87e7de7a-d6d5-102b-9c41-00a0d1a2f856/en_savoir_plus.php?p01=#_?#_?--##?trace01##?trace02##?trace03http://xsoftware.fr/c_est_un_logiciel_simple_et_souple.php##?trace04##?trace05##?trace99--#_?#_?blablal
		alalzkahttp://clients.xsoftware.fr/marketing/Formulaires_types_sites/87e7de7a-d6d5-102b-9c41-00a0d1a2f856/en_savoir_plus.php?#_?#_?--##?trace01##?trace02##?trace03http://xsoftware.fr/c_est_un_logiciel_simple_et_souple.php##?trace04##?trace05##?trace99--#_?#_?";
		http://clients.xsoftware.fr/marketing/Formulaires_types_sites/87e7de7a-d6d5-102b-9c41-00a0d1a2f856/en_savoir_plus.php?p01=|10000035|437659acda5e0fff918c17a3c1c85249|http://xsoftware.fr/|xofxon@orange.fr
	$vl_e_nombre_remplacements=substr_count($vl_c_message,"#_?#_?--##?trace01");
	$vl_c_remplace="#_?#_?--##?trace01|$vv_intweb_cleunik";
	$vl_c_recherche="#_?#_?--##?trace01";
	$vl_c_message=str_replace($vl_c_recherche,$vl_c_remplace,$vl_c_message);
	//echo $vl_c_message.EOL;
	$vl_c_remplace="|$vl_c_intweb_dest_uuid";
	$vl_c_recherche="##?trace02";
	$vl_c_message=str_replace($vl_c_recherche,$vl_c_remplace,$vl_c_message);
	//echo $vl_c_message.EOL;
	$vl_c_remplace="|$vv_refweb";
	$vl_c_recherche="##?trace05";
	$vl_c_message=str_replace($vl_c_recherche,$vl_c_remplace,$vl_c_message);
	//echo $vl_c_message.EOL;

	for($i=0;$i<$vl_e_nombre_remplacements;$i++)
     {
        $vl_c_recherche_01="##?trace03";
		$pos_deb_redirection=strpos($vl_c_message,$vl_c_recherche_01 ,0);
		$vl_c_recherche_02="##?trace04";
		$pos_fin_redirection=strpos($vl_c_message,$vl_c_recherche_02 ,0);
		$vl_c_recherche=substr($vl_c_message,$pos_deb_redirection,$pos_fin_redirection-$pos_deb_redirection+strlen($vl_c_recherche_02));
		//echo $vl_c_recherche.EOL;
		$toto=explode("##?trace03",$vl_c_recherche);
		$vl_c_remplace=$toto[1];
		$toto=explode("##?trace04",$vl_c_remplace);
		$vl_c_remplace="|".$toto[0];
		//echo $vl_c_remplace.EOL;
		$vl_c_message=str_replace($vl_c_recherche,$vl_c_remplace,$vl_c_message);
     }



	for($i=0;$i<$vl_e_nombre_remplacements;$i++)
     {
        $toto=explode("#_?#_?--##?trace01",$vl_c_message);
		$vl_c_remplace=$toto[1];
		$toto=explode("##?trace99--#_?#_?",$vl_c_remplace);
		$vl_c_remplace=$toto[0];
		//echo $vl_c_remplace.EOL;
		//$vl_c_remplace_64=base64_encode($vl_c_remplace);
		$vl_c_recherche="#_?#_?--##?trace01".$vl_c_remplace."##?trace99--#_?#_?";
		$vl_c_message=str_replace($vl_c_recherche,$vl_c_remplace,$vl_c_message);
		$toto=explode("+#+#",$vl_c_message);
		//echo $toto[1].EOL;
		$vl_c_remplace=$toto[1];
		//$titi=getTinyUrl($vl_c_remplace);
		$titi=$vl_c_remplace;
		//echo $titi.EOL;
		$vl_c_recherche="+#+#".$vl_c_remplace."+#+#";
		$vl_c_message=str_replace($vl_c_recherche,$titi,$vl_c_message);
     }
	return $vl_c_message;
	//echo $vl_c_message.EOL;
}
*/
?>
